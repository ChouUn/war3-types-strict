{
  "types": [
    {
      "name": "agent",
      "extends": "handle"
    },
    {
      "name": "event",
      "extends": "agent"
    },
    {
      "name": "player",
      "extends": "agent"
    },
    {
      "name": "widget",
      "extends": "agent"
    },
    {
      "name": "unit",
      "extends": "widget"
    },
    {
      "name": "destructable",
      "extends": "widget"
    },
    {
      "name": "item",
      "extends": "widget"
    },
    {
      "name": "ability",
      "extends": "agent"
    },
    {
      "name": "buff",
      "extends": "ability"
    },
    {
      "name": "force",
      "extends": "agent"
    },
    {
      "name": "group",
      "extends": "agent"
    },
    {
      "name": "trigger",
      "extends": "agent"
    },
    {
      "name": "triggercondition",
      "extends": "agent"
    },
    {
      "name": "triggeraction",
      "extends": "handle"
    },
    {
      "name": "timer",
      "extends": "agent"
    },
    {
      "name": "location",
      "extends": "agent"
    },
    {
      "name": "region",
      "extends": "agent"
    },
    {
      "name": "rect",
      "extends": "agent"
    },
    {
      "name": "boolexpr",
      "extends": "agent"
    },
    {
      "name": "sound",
      "extends": "agent"
    },
    {
      "name": "conditionfunc",
      "extends": "boolexpr"
    },
    {
      "name": "filterfunc",
      "extends": "boolexpr"
    },
    {
      "name": "unitpool",
      "extends": "handle"
    },
    {
      "name": "itempool",
      "extends": "handle"
    },
    {
      "name": "race",
      "extends": "handle"
    },
    {
      "name": "alliancetype",
      "extends": "handle"
    },
    {
      "name": "racepreference",
      "extends": "handle"
    },
    {
      "name": "gamestate",
      "extends": "handle"
    },
    {
      "name": "igamestate",
      "extends": "gamestate"
    },
    {
      "name": "fgamestate",
      "extends": "gamestate"
    },
    {
      "name": "playerstate",
      "extends": "handle"
    },
    {
      "name": "playerscore",
      "extends": "handle"
    },
    {
      "name": "playergameresult",
      "extends": "handle"
    },
    {
      "name": "unitstate",
      "extends": "handle"
    },
    {
      "name": "aidifficulty",
      "extends": "handle"
    },
    {
      "name": "eventid",
      "extends": "handle"
    },
    {
      "name": "gameevent",
      "extends": "eventid"
    },
    {
      "name": "playerevent",
      "extends": "eventid"
    },
    {
      "name": "playerunitevent",
      "extends": "eventid"
    },
    {
      "name": "unitevent",
      "extends": "eventid"
    },
    {
      "name": "limitop",
      "extends": "eventid"
    },
    {
      "name": "widgetevent",
      "extends": "eventid"
    },
    {
      "name": "dialogevent",
      "extends": "eventid"
    },
    {
      "name": "unittype",
      "extends": "handle"
    },
    {
      "name": "gamespeed",
      "extends": "handle"
    },
    {
      "name": "gamedifficulty",
      "extends": "handle"
    },
    {
      "name": "gametype",
      "extends": "handle"
    },
    {
      "name": "mapflag",
      "extends": "handle"
    },
    {
      "name": "mapvisibility",
      "extends": "handle"
    },
    {
      "name": "mapsetting",
      "extends": "handle"
    },
    {
      "name": "mapdensity",
      "extends": "handle"
    },
    {
      "name": "mapcontrol",
      "extends": "handle"
    },
    {
      "name": "minimapicon",
      "extends": "handle"
    },
    {
      "name": "playerslotstate",
      "extends": "handle"
    },
    {
      "name": "volumegroup",
      "extends": "handle"
    },
    {
      "name": "camerafield",
      "extends": "handle"
    },
    {
      "name": "camerasetup",
      "extends": "handle"
    },
    {
      "name": "playercolor",
      "extends": "handle"
    },
    {
      "name": "placement",
      "extends": "handle"
    },
    {
      "name": "startlocprio",
      "extends": "handle"
    },
    {
      "name": "raritycontrol",
      "extends": "handle"
    },
    {
      "name": "blendmode",
      "extends": "handle"
    },
    {
      "name": "texmapflags",
      "extends": "handle"
    },
    {
      "name": "effect",
      "extends": "agent"
    },
    {
      "name": "effecttype",
      "extends": "handle"
    },
    {
      "name": "weathereffect",
      "extends": "handle"
    },
    {
      "name": "terraindeformation",
      "extends": "handle"
    },
    {
      "name": "fogstate",
      "extends": "handle"
    },
    {
      "name": "fogmodifier",
      "extends": "agent"
    },
    {
      "name": "dialog",
      "extends": "agent"
    },
    {
      "name": "button",
      "extends": "agent"
    },
    {
      "name": "quest",
      "extends": "agent"
    },
    {
      "name": "questitem",
      "extends": "agent"
    },
    {
      "name": "defeatcondition",
      "extends": "agent"
    },
    {
      "name": "timerdialog",
      "extends": "agent"
    },
    {
      "name": "leaderboard",
      "extends": "agent"
    },
    {
      "name": "multiboard",
      "extends": "agent"
    },
    {
      "name": "multiboarditem",
      "extends": "agent"
    },
    {
      "name": "trackable",
      "extends": "agent"
    },
    {
      "name": "gamecache",
      "extends": "agent"
    },
    {
      "name": "version",
      "extends": "handle"
    },
    {
      "name": "itemtype",
      "extends": "handle"
    },
    {
      "name": "texttag",
      "extends": "handle"
    },
    {
      "name": "attacktype",
      "extends": "handle"
    },
    {
      "name": "damagetype",
      "extends": "handle"
    },
    {
      "name": "weapontype",
      "extends": "handle"
    },
    {
      "name": "soundtype",
      "extends": "handle"
    },
    {
      "name": "lightning",
      "extends": "handle"
    },
    {
      "name": "pathingtype",
      "extends": "handle"
    },
    {
      "name": "mousebuttontype",
      "extends": "handle"
    },
    {
      "name": "animtype",
      "extends": "handle"
    },
    {
      "name": "subanimtype",
      "extends": "handle"
    },
    {
      "name": "image",
      "extends": "handle"
    },
    {
      "name": "ubersplat",
      "extends": "handle"
    },
    {
      "name": "hashtable",
      "extends": "agent"
    },
    {
      "name": "framehandle",
      "extends": "handle"
    },
    {
      "name": "originframetype",
      "extends": "handle"
    },
    {
      "name": "framepointtype",
      "extends": "handle"
    },
    {
      "name": "textaligntype",
      "extends": "handle"
    },
    {
      "name": "frameeventtype",
      "extends": "handle"
    },
    {
      "name": "oskeytype",
      "extends": "handle"
    },
    {
      "name": "abilityintegerfield",
      "extends": "handle"
    },
    {
      "name": "abilityrealfield",
      "extends": "handle"
    },
    {
      "name": "abilitybooleanfield",
      "extends": "handle"
    },
    {
      "name": "abilitystringfield",
      "extends": "handle"
    },
    {
      "name": "abilityintegerlevelfield",
      "extends": "handle"
    },
    {
      "name": "abilityreallevelfield",
      "extends": "handle"
    },
    {
      "name": "abilitybooleanlevelfield",
      "extends": "handle"
    },
    {
      "name": "abilitystringlevelfield",
      "extends": "handle"
    },
    {
      "name": "abilityintegerlevelarrayfield",
      "extends": "handle"
    },
    {
      "name": "abilityreallevelarrayfield",
      "extends": "handle"
    },
    {
      "name": "abilitybooleanlevelarrayfield",
      "extends": "handle"
    },
    {
      "name": "abilitystringlevelarrayfield",
      "extends": "handle"
    },
    {
      "name": "unitintegerfield",
      "extends": "handle"
    },
    {
      "name": "unitrealfield",
      "extends": "handle"
    },
    {
      "name": "unitbooleanfield",
      "extends": "handle"
    },
    {
      "name": "unitstringfield",
      "extends": "handle"
    },
    {
      "name": "unitweaponintegerfield",
      "extends": "handle"
    },
    {
      "name": "unitweaponrealfield",
      "extends": "handle"
    },
    {
      "name": "unitweaponbooleanfield",
      "extends": "handle"
    },
    {
      "name": "unitweaponstringfield",
      "extends": "handle"
    },
    {
      "name": "itemintegerfield",
      "extends": "handle"
    },
    {
      "name": "itemrealfield",
      "extends": "handle"
    },
    {
      "name": "itembooleanfield",
      "extends": "handle"
    },
    {
      "name": "itemstringfield",
      "extends": "handle"
    },
    {
      "name": "movetype",
      "extends": "handle"
    },
    {
      "name": "targetflag",
      "extends": "handle"
    },
    {
      "name": "armortype",
      "extends": "handle"
    },
    {
      "name": "heroattribute",
      "extends": "handle"
    },
    {
      "name": "defensetype",
      "extends": "handle"
    },
    {
      "name": "regentype",
      "extends": "handle"
    },
    {
      "name": "unitcategory",
      "extends": "handle"
    },
    {
      "name": "pathingflag",
      "extends": "handle"
    },
    {
      "name": "commandbuttoneffect",
      "extends": "handle"
    }
  ],
  "globals": {
    "FALSE": {
      "isConstant": true,
      "type": "boolean",
      "isArray": false,
      "value": "false"
    },
    "TRUE": {
      "isConstant": true,
      "type": "boolean",
      "isArray": false,
      "value": "true"
    },
    "JASS_MAX_ARRAY_SIZE": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "32768"
    },
    "PLAYER_NEUTRAL_PASSIVE": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "GetPlayerNeutralPassive()"
    },
    "PLAYER_NEUTRAL_AGGRESSIVE": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "GetPlayerNeutralAggressive()"
    },
    "PLAYER_COLOR_RED": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(0)"
    },
    "PLAYER_COLOR_BLUE": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(1)"
    },
    "PLAYER_COLOR_CYAN": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(2)"
    },
    "PLAYER_COLOR_PURPLE": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(3)"
    },
    "PLAYER_COLOR_YELLOW": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(4)"
    },
    "PLAYER_COLOR_ORANGE": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(5)"
    },
    "PLAYER_COLOR_GREEN": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(6)"
    },
    "PLAYER_COLOR_PINK": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(7)"
    },
    "PLAYER_COLOR_LIGHT_GRAY": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(8)"
    },
    "PLAYER_COLOR_LIGHT_BLUE": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(9)"
    },
    "PLAYER_COLOR_AQUA": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(10)"
    },
    "PLAYER_COLOR_BROWN": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(11)"
    },
    "PLAYER_COLOR_MAROON": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(12)"
    },
    "PLAYER_COLOR_NAVY": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(13)"
    },
    "PLAYER_COLOR_TURQUOISE": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(14)"
    },
    "PLAYER_COLOR_VIOLET": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(15)"
    },
    "PLAYER_COLOR_WHEAT": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(16)"
    },
    "PLAYER_COLOR_PEACH": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(17)"
    },
    "PLAYER_COLOR_MINT": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(18)"
    },
    "PLAYER_COLOR_LAVENDER": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(19)"
    },
    "PLAYER_COLOR_COAL": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(20)"
    },
    "PLAYER_COLOR_SNOW": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(21)"
    },
    "PLAYER_COLOR_EMERALD": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(22)"
    },
    "PLAYER_COLOR_PEANUT": {
      "isConstant": true,
      "type": "playercolor",
      "isArray": false,
      "value": "ConvertPlayerColor(23)"
    },
    "RACE_HUMAN": {
      "isConstant": true,
      "type": "race",
      "isArray": false,
      "value": "ConvertRace(1)"
    },
    "RACE_ORC": {
      "isConstant": true,
      "type": "race",
      "isArray": false,
      "value": "ConvertRace(2)"
    },
    "RACE_UNDEAD": {
      "isConstant": true,
      "type": "race",
      "isArray": false,
      "value": "ConvertRace(3)"
    },
    "RACE_NIGHTELF": {
      "isConstant": true,
      "type": "race",
      "isArray": false,
      "value": "ConvertRace(4)"
    },
    "RACE_DEMON": {
      "isConstant": true,
      "type": "race",
      "isArray": false,
      "value": "ConvertRace(5)"
    },
    "RACE_OTHER": {
      "isConstant": true,
      "type": "race",
      "isArray": false,
      "value": "ConvertRace(7)"
    },
    "PLAYER_GAME_RESULT_VICTORY": {
      "isConstant": true,
      "type": "playergameresult",
      "isArray": false,
      "value": "ConvertPlayerGameResult(0)"
    },
    "PLAYER_GAME_RESULT_DEFEAT": {
      "isConstant": true,
      "type": "playergameresult",
      "isArray": false,
      "value": "ConvertPlayerGameResult(1)"
    },
    "PLAYER_GAME_RESULT_TIE": {
      "isConstant": true,
      "type": "playergameresult",
      "isArray": false,
      "value": "ConvertPlayerGameResult(2)"
    },
    "PLAYER_GAME_RESULT_NEUTRAL": {
      "isConstant": true,
      "type": "playergameresult",
      "isArray": false,
      "value": "ConvertPlayerGameResult(3)"
    },
    "ALLIANCE_PASSIVE": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(0)"
    },
    "ALLIANCE_HELP_REQUEST": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(1)"
    },
    "ALLIANCE_HELP_RESPONSE": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(2)"
    },
    "ALLIANCE_SHARED_XP": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(3)"
    },
    "ALLIANCE_SHARED_SPELLS": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(4)"
    },
    "ALLIANCE_SHARED_VISION": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(5)"
    },
    "ALLIANCE_SHARED_CONTROL": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(6)"
    },
    "ALLIANCE_SHARED_ADVANCED_CONTROL": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": ""
    },
    "ALLIANCE_RESCUABLE": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(8)"
    },
    "ALLIANCE_SHARED_VISION_FORCED": {
      "isConstant": true,
      "type": "alliancetype",
      "isArray": false,
      "value": "ConvertAllianceType(9)"
    },
    "VERSION_REIGN_OF_CHAOS": {
      "isConstant": true,
      "type": "version",
      "isArray": false,
      "value": "ConvertVersion(0)"
    },
    "VERSION_FROZEN_THRONE": {
      "isConstant": true,
      "type": "version",
      "isArray": false,
      "value": "ConvertVersion(1)"
    },
    "ATTACK_TYPE_NORMAL": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(0)"
    },
    "ATTACK_TYPE_MELEE": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(1)"
    },
    "ATTACK_TYPE_PIERCE": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(2)"
    },
    "ATTACK_TYPE_SIEGE": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(3)"
    },
    "ATTACK_TYPE_MAGIC": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(4)"
    },
    "ATTACK_TYPE_CHAOS": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(5)"
    },
    "ATTACK_TYPE_HERO": {
      "isConstant": true,
      "type": "attacktype",
      "isArray": false,
      "value": "ConvertAttackType(6)"
    },
    "DAMAGE_TYPE_UNKNOWN": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(0)"
    },
    "DAMAGE_TYPE_NORMAL": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(4)"
    },
    "DAMAGE_TYPE_ENHANCED": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(5)"
    },
    "DAMAGE_TYPE_FIRE": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(8)"
    },
    "DAMAGE_TYPE_COLD": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(9)"
    },
    "DAMAGE_TYPE_LIGHTNING": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(10)"
    },
    "DAMAGE_TYPE_POISON": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(11)"
    },
    "DAMAGE_TYPE_DISEASE": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(12)"
    },
    "DAMAGE_TYPE_DIVINE": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(13)"
    },
    "DAMAGE_TYPE_MAGIC": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(14)"
    },
    "DAMAGE_TYPE_SONIC": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(15)"
    },
    "DAMAGE_TYPE_ACID": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(16)"
    },
    "DAMAGE_TYPE_FORCE": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(17)"
    },
    "DAMAGE_TYPE_DEATH": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(18)"
    },
    "DAMAGE_TYPE_MIND": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(19)"
    },
    "DAMAGE_TYPE_PLANT": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(20)"
    },
    "DAMAGE_TYPE_DEFENSIVE": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(21)"
    },
    "DAMAGE_TYPE_DEMOLITION": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(22)"
    },
    "DAMAGE_TYPE_SLOW_POISON": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(23)"
    },
    "DAMAGE_TYPE_SPIRIT_LINK": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(24)"
    },
    "DAMAGE_TYPE_SHADOW_STRIKE": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(25)"
    },
    "DAMAGE_TYPE_UNIVERSAL": {
      "isConstant": true,
      "type": "damagetype",
      "isArray": false,
      "value": "ConvertDamageType(26)"
    },
    "WEAPON_TYPE_WHOKNOWS": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(0)"
    },
    "WEAPON_TYPE_METAL_LIGHT_CHOP": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(1)"
    },
    "WEAPON_TYPE_METAL_MEDIUM_CHOP": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(2)"
    },
    "WEAPON_TYPE_METAL_HEAVY_CHOP": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(3)"
    },
    "WEAPON_TYPE_METAL_LIGHT_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(4)"
    },
    "WEAPON_TYPE_METAL_MEDIUM_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(5)"
    },
    "WEAPON_TYPE_METAL_HEAVY_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(6)"
    },
    "WEAPON_TYPE_METAL_MEDIUM_BASH": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(7)"
    },
    "WEAPON_TYPE_METAL_HEAVY_BASH": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(8)"
    },
    "WEAPON_TYPE_METAL_MEDIUM_STAB": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(9)"
    },
    "WEAPON_TYPE_METAL_HEAVY_STAB": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(10)"
    },
    "WEAPON_TYPE_WOOD_LIGHT_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(11)"
    },
    "WEAPON_TYPE_WOOD_MEDIUM_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(12)"
    },
    "WEAPON_TYPE_WOOD_HEAVY_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(13)"
    },
    "WEAPON_TYPE_WOOD_LIGHT_BASH": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(14)"
    },
    "WEAPON_TYPE_WOOD_MEDIUM_BASH": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(15)"
    },
    "WEAPON_TYPE_WOOD_HEAVY_BASH": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(16)"
    },
    "WEAPON_TYPE_WOOD_LIGHT_STAB": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(17)"
    },
    "WEAPON_TYPE_WOOD_MEDIUM_STAB": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(18)"
    },
    "WEAPON_TYPE_CLAW_LIGHT_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(19)"
    },
    "WEAPON_TYPE_CLAW_MEDIUM_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(20)"
    },
    "WEAPON_TYPE_CLAW_HEAVY_SLICE": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(21)"
    },
    "WEAPON_TYPE_AXE_MEDIUM_CHOP": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(22)"
    },
    "WEAPON_TYPE_ROCK_HEAVY_BASH": {
      "isConstant": true,
      "type": "weapontype",
      "isArray": false,
      "value": "ConvertWeaponType(23)"
    },
    "PATHING_TYPE_ANY": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(0)"
    },
    "PATHING_TYPE_WALKABILITY": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(1)"
    },
    "PATHING_TYPE_FLYABILITY": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(2)"
    },
    "PATHING_TYPE_BUILDABILITY": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(3)"
    },
    "PATHING_TYPE_PEONHARVESTPATHING": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(4)"
    },
    "PATHING_TYPE_BLIGHTPATHING": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(5)"
    },
    "PATHING_TYPE_FLOATABILITY": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(6)"
    },
    "PATHING_TYPE_AMPHIBIOUSPATHING": {
      "isConstant": true,
      "type": "pathingtype",
      "isArray": false,
      "value": "ConvertPathingType(7)"
    },
    "MOUSE_BUTTON_TYPE_LEFT": {
      "isConstant": true,
      "type": "mousebuttontype",
      "isArray": false,
      "value": "ConvertMouseButtonType(1)"
    },
    "MOUSE_BUTTON_TYPE_MIDDLE": {
      "isConstant": true,
      "type": "mousebuttontype",
      "isArray": false,
      "value": "ConvertMouseButtonType(2)"
    },
    "MOUSE_BUTTON_TYPE_RIGHT": {
      "isConstant": true,
      "type": "mousebuttontype",
      "isArray": false,
      "value": "ConvertMouseButtonType(3)"
    },
    "ANIM_TYPE_BIRTH": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(0)"
    },
    "ANIM_TYPE_DEATH": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(1)"
    },
    "ANIM_TYPE_DECAY": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(2)"
    },
    "ANIM_TYPE_DISSIPATE": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(3)"
    },
    "ANIM_TYPE_STAND": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(4)"
    },
    "ANIM_TYPE_WALK": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(5)"
    },
    "ANIM_TYPE_ATTACK": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(6)"
    },
    "ANIM_TYPE_MORPH": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(7)"
    },
    "ANIM_TYPE_SLEEP": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(8)"
    },
    "ANIM_TYPE_SPELL": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(9)"
    },
    "ANIM_TYPE_PORTRAIT": {
      "isConstant": true,
      "type": "animtype",
      "isArray": false,
      "value": "ConvertAnimType(10)"
    },
    "SUBANIM_TYPE_ROOTED": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(11)"
    },
    "SUBANIM_TYPE_ALTERNATE_EX": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(12)"
    },
    "SUBANIM_TYPE_LOOPING": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(13)"
    },
    "SUBANIM_TYPE_SLAM": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(14)"
    },
    "SUBANIM_TYPE_THROW": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(15)"
    },
    "SUBANIM_TYPE_SPIKED": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(16)"
    },
    "SUBANIM_TYPE_FAST": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(17)"
    },
    "SUBANIM_TYPE_SPIN": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(18)"
    },
    "SUBANIM_TYPE_READY": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(19)"
    },
    "SUBANIM_TYPE_CHANNEL": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(20)"
    },
    "SUBANIM_TYPE_DEFEND": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(21)"
    },
    "SUBANIM_TYPE_VICTORY": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(22)"
    },
    "SUBANIM_TYPE_TURN": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(23)"
    },
    "SUBANIM_TYPE_LEFT": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(24)"
    },
    "SUBANIM_TYPE_RIGHT": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(25)"
    },
    "SUBANIM_TYPE_FIRE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(26)"
    },
    "SUBANIM_TYPE_FLESH": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(27)"
    },
    "SUBANIM_TYPE_HIT": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(28)"
    },
    "SUBANIM_TYPE_WOUNDED": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(29)"
    },
    "SUBANIM_TYPE_LIGHT": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(30)"
    },
    "SUBANIM_TYPE_MODERATE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(31)"
    },
    "SUBANIM_TYPE_SEVERE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(32)"
    },
    "SUBANIM_TYPE_CRITICAL": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(33)"
    },
    "SUBANIM_TYPE_COMPLETE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(34)"
    },
    "SUBANIM_TYPE_GOLD": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(35)"
    },
    "SUBANIM_TYPE_LUMBER": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(36)"
    },
    "SUBANIM_TYPE_WORK": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(37)"
    },
    "SUBANIM_TYPE_TALK": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(38)"
    },
    "SUBANIM_TYPE_FIRST": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(39)"
    },
    "SUBANIM_TYPE_SECOND": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(40)"
    },
    "SUBANIM_TYPE_THIRD": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(41)"
    },
    "SUBANIM_TYPE_FOURTH": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(42)"
    },
    "SUBANIM_TYPE_FIFTH": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(43)"
    },
    "SUBANIM_TYPE_ONE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(44)"
    },
    "SUBANIM_TYPE_TWO": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(45)"
    },
    "SUBANIM_TYPE_THREE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(46)"
    },
    "SUBANIM_TYPE_FOUR": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(47)"
    },
    "SUBANIM_TYPE_FIVE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(48)"
    },
    "SUBANIM_TYPE_SMALL": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(49)"
    },
    "SUBANIM_TYPE_MEDIUM": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(50)"
    },
    "SUBANIM_TYPE_LARGE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(51)"
    },
    "SUBANIM_TYPE_UPGRADE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(52)"
    },
    "SUBANIM_TYPE_DRAIN": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(53)"
    },
    "SUBANIM_TYPE_FILL": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(54)"
    },
    "SUBANIM_TYPE_CHAINLIGHTNING": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(55)"
    },
    "SUBANIM_TYPE_EATTREE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(56)"
    },
    "SUBANIM_TYPE_PUKE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(57)"
    },
    "SUBANIM_TYPE_FLAIL": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(58)"
    },
    "SUBANIM_TYPE_OFF": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(59)"
    },
    "SUBANIM_TYPE_SWIM": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(60)"
    },
    "SUBANIM_TYPE_ENTANGLE": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(61)"
    },
    "SUBANIM_TYPE_BERSERK": {
      "isConstant": true,
      "type": "subanimtype",
      "isArray": false,
      "value": "ConvertSubAnimType(62)"
    },
    "RACE_PREF_HUMAN": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(1)"
    },
    "RACE_PREF_ORC": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(2)"
    },
    "RACE_PREF_NIGHTELF": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(4)"
    },
    "RACE_PREF_UNDEAD": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(8)"
    },
    "RACE_PREF_DEMON": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(16)"
    },
    "RACE_PREF_RANDOM": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(32)"
    },
    "RACE_PREF_USER_SELECTABLE": {
      "isConstant": true,
      "type": "racepreference",
      "isArray": false,
      "value": "ConvertRacePref(64)"
    },
    "MAP_CONTROL_USER": {
      "isConstant": true,
      "type": "mapcontrol",
      "isArray": false,
      "value": "ConvertMapControl(0)"
    },
    "MAP_CONTROL_COMPUTER": {
      "isConstant": true,
      "type": "mapcontrol",
      "isArray": false,
      "value": "ConvertMapControl(1)"
    },
    "MAP_CONTROL_RESCUABLE": {
      "isConstant": true,
      "type": "mapcontrol",
      "isArray": false,
      "value": "ConvertMapControl(2)"
    },
    "MAP_CONTROL_NEUTRAL": {
      "isConstant": true,
      "type": "mapcontrol",
      "isArray": false,
      "value": "ConvertMapControl(3)"
    },
    "MAP_CONTROL_CREEP": {
      "isConstant": true,
      "type": "mapcontrol",
      "isArray": false,
      "value": "ConvertMapControl(4)"
    },
    "MAP_CONTROL_NONE": {
      "isConstant": true,
      "type": "mapcontrol",
      "isArray": false,
      "value": "ConvertMapControl(5)"
    },
    "GAME_TYPE_MELEE": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(1)"
    },
    "GAME_TYPE_FFA": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(2)"
    },
    "GAME_TYPE_USE_MAP_SETTINGS": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(4)"
    },
    "GAME_TYPE_BLIZ": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(8)"
    },
    "GAME_TYPE_ONE_ON_ONE": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(16)"
    },
    "GAME_TYPE_TWO_TEAM_PLAY": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(32)"
    },
    "GAME_TYPE_THREE_TEAM_PLAY": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(64)"
    },
    "GAME_TYPE_FOUR_TEAM_PLAY": {
      "isConstant": true,
      "type": "gametype",
      "isArray": false,
      "value": "ConvertGameType(128)"
    },
    "MAP_FOG_HIDE_TERRAIN": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(1)"
    },
    "MAP_FOG_MAP_EXPLORED": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(2)"
    },
    "MAP_FOG_ALWAYS_VISIBLE": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(4)"
    },
    "MAP_USE_HANDICAPS": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8)"
    },
    "MAP_OBSERVERS": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(16)"
    },
    "MAP_OBSERVERS_ON_DEATH": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(32)"
    },
    "MAP_FIXED_COLORS": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(128)"
    },
    "MAP_LOCK_RESOURCE_TRADING": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(256)"
    },
    "MAP_RESOURCE_TRADING_ALLIES_ONLY": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(512)"
    },
    "MAP_LOCK_ALLIANCE_CHANGES": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(1024)"
    },
    "MAP_ALLIANCE_CHANGES_HIDDEN": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(2048)"
    },
    "MAP_CHEATS": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(4096)"
    },
    "MAP_CHEATS_HIDDEN": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192)"
    },
    "MAP_LOCK_SPEED": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192*2)"
    },
    "MAP_LOCK_RANDOM_SEED": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192*4)"
    },
    "MAP_SHARED_ADVANCED_CONTROL": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192*8)"
    },
    "MAP_RANDOM_HERO": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192*16)"
    },
    "MAP_RANDOM_RACES": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192*32)"
    },
    "MAP_RELOADED": {
      "isConstant": true,
      "type": "mapflag",
      "isArray": false,
      "value": "ConvertMapFlag(8192*64)"
    },
    "MAP_PLACEMENT_RANDOM": {
      "isConstant": true,
      "type": "placement",
      "isArray": false,
      "value": "ConvertPlacement(0) "
    },
    "MAP_PLACEMENT_FIXED": {
      "isConstant": true,
      "type": "placement",
      "isArray": false,
      "value": "ConvertPlacement(1) "
    },
    "MAP_PLACEMENT_USE_MAP_SETTINGS": {
      "isConstant": true,
      "type": "placement",
      "isArray": false,
      "value": "ConvertPlacement(2) "
    },
    "MAP_PLACEMENT_TEAMS_TOGETHER": {
      "isConstant": true,
      "type": "placement",
      "isArray": false,
      "value": "ConvertPlacement(3) "
    },
    "MAP_LOC_PRIO_LOW": {
      "isConstant": true,
      "type": "startlocprio",
      "isArray": false,
      "value": "ConvertStartLocPrio(0)"
    },
    "MAP_LOC_PRIO_HIGH": {
      "isConstant": true,
      "type": "startlocprio",
      "isArray": false,
      "value": "ConvertStartLocPrio(1)"
    },
    "MAP_LOC_PRIO_NOT": {
      "isConstant": true,
      "type": "startlocprio",
      "isArray": false,
      "value": "ConvertStartLocPrio(2)"
    },
    "MAP_DENSITY_NONE": {
      "isConstant": true,
      "type": "mapdensity",
      "isArray": false,
      "value": "ConvertMapDensity(0)"
    },
    "MAP_DENSITY_LIGHT": {
      "isConstant": true,
      "type": "mapdensity",
      "isArray": false,
      "value": "ConvertMapDensity(1)"
    },
    "MAP_DENSITY_MEDIUM": {
      "isConstant": true,
      "type": "mapdensity",
      "isArray": false,
      "value": "ConvertMapDensity(2)"
    },
    "MAP_DENSITY_HEAVY": {
      "isConstant": true,
      "type": "mapdensity",
      "isArray": false,
      "value": "ConvertMapDensity(3)"
    },
    "MAP_DIFFICULTY_EASY": {
      "isConstant": true,
      "type": "gamedifficulty",
      "isArray": false,
      "value": "ConvertGameDifficulty(0)"
    },
    "MAP_DIFFICULTY_NORMAL": {
      "isConstant": true,
      "type": "gamedifficulty",
      "isArray": false,
      "value": "ConvertGameDifficulty(1)"
    },
    "MAP_DIFFICULTY_HARD": {
      "isConstant": true,
      "type": "gamedifficulty",
      "isArray": false,
      "value": "ConvertGameDifficulty(2)"
    },
    "MAP_DIFFICULTY_INSANE": {
      "isConstant": true,
      "type": "gamedifficulty",
      "isArray": false,
      "value": "ConvertGameDifficulty(3)"
    },
    "MAP_SPEED_SLOWEST": {
      "isConstant": true,
      "type": "gamespeed",
      "isArray": false,
      "value": "ConvertGameSpeed(0)"
    },
    "MAP_SPEED_SLOW": {
      "isConstant": true,
      "type": "gamespeed",
      "isArray": false,
      "value": "ConvertGameSpeed(1)"
    },
    "MAP_SPEED_NORMAL": {
      "isConstant": true,
      "type": "gamespeed",
      "isArray": false,
      "value": "ConvertGameSpeed(2)"
    },
    "MAP_SPEED_FAST": {
      "isConstant": true,
      "type": "gamespeed",
      "isArray": false,
      "value": "ConvertGameSpeed(3)"
    },
    "MAP_SPEED_FASTEST": {
      "isConstant": true,
      "type": "gamespeed",
      "isArray": false,
      "value": "ConvertGameSpeed(4)"
    },
    "PLAYER_SLOT_STATE_EMPTY": {
      "isConstant": true,
      "type": "playerslotstate",
      "isArray": false,
      "value": "ConvertPlayerSlotState(0)"
    },
    "PLAYER_SLOT_STATE_PLAYING": {
      "isConstant": true,
      "type": "playerslotstate",
      "isArray": false,
      "value": "ConvertPlayerSlotState(1)"
    },
    "PLAYER_SLOT_STATE_LEFT": {
      "isConstant": true,
      "type": "playerslotstate",
      "isArray": false,
      "value": "ConvertPlayerSlotState(2)"
    },
    "SOUND_VOLUMEGROUP_UNITMOVEMENT": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(0)"
    },
    "SOUND_VOLUMEGROUP_UNITSOUNDS": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(1)"
    },
    "SOUND_VOLUMEGROUP_COMBAT": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(2)"
    },
    "SOUND_VOLUMEGROUP_SPELLS": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(3)"
    },
    "SOUND_VOLUMEGROUP_UI": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(4)"
    },
    "SOUND_VOLUMEGROUP_MUSIC": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(5)"
    },
    "SOUND_VOLUMEGROUP_AMBIENTSOUNDS": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(6)"
    },
    "SOUND_VOLUMEGROUP_FIRE": {
      "isConstant": true,
      "type": "volumegroup",
      "isArray": false,
      "value": "ConvertVolumeGroup(7)"
    },
    "GAME_STATE_DIVINE_INTERVENTION": {
      "isConstant": true,
      "type": "igamestate",
      "isArray": false,
      "value": "ConvertIGameState(0)"
    },
    "GAME_STATE_DISCONNECTED": {
      "isConstant": true,
      "type": "igamestate",
      "isArray": false,
      "value": "ConvertIGameState(1)"
    },
    "GAME_STATE_TIME_OF_DAY": {
      "isConstant": true,
      "type": "fgamestate",
      "isArray": false,
      "value": "ConvertFGameState(2)"
    },
    "PLAYER_STATE_GAME_RESULT": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(0)"
    },
    "PLAYER_STATE_RESOURCE_GOLD": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(1)"
    },
    "PLAYER_STATE_RESOURCE_LUMBER": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(2)"
    },
    "PLAYER_STATE_RESOURCE_HERO_TOKENS": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(3)"
    },
    "PLAYER_STATE_RESOURCE_FOOD_CAP": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(4)"
    },
    "PLAYER_STATE_RESOURCE_FOOD_USED": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(5)"
    },
    "PLAYER_STATE_FOOD_CAP_CEILING": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(6)"
    },
    "PLAYER_STATE_GIVES_BOUNTY": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(7)"
    },
    "PLAYER_STATE_ALLIED_VICTORY": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(8)"
    },
    "PLAYER_STATE_PLACED": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(9)"
    },
    "PLAYER_STATE_OBSERVER_ON_DEATH": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(10)"
    },
    "PLAYER_STATE_OBSERVER": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(11)"
    },
    "PLAYER_STATE_UNFOLLOWABLE": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(12)"
    },
    "PLAYER_STATE_GOLD_UPKEEP_RATE": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(13)"
    },
    "PLAYER_STATE_LUMBER_UPKEEP_RATE": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(14)"
    },
    "PLAYER_STATE_GOLD_GATHERED": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(15)"
    },
    "PLAYER_STATE_LUMBER_GATHERED": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(16)"
    },
    "PLAYER_STATE_NO_CREEP_SLEEP": {
      "isConstant": true,
      "type": "playerstate",
      "isArray": false,
      "value": "ConvertPlayerState(25)"
    },
    "UNIT_STATE_LIFE": {
      "isConstant": true,
      "type": "unitstate",
      "isArray": false,
      "value": "ConvertUnitState(0)"
    },
    "UNIT_STATE_MAX_LIFE": {
      "isConstant": true,
      "type": "unitstate",
      "isArray": false,
      "value": "ConvertUnitState(1)"
    },
    "UNIT_STATE_MANA": {
      "isConstant": true,
      "type": "unitstate",
      "isArray": false,
      "value": "ConvertUnitState(2)"
    },
    "UNIT_STATE_MAX_MANA": {
      "isConstant": true,
      "type": "unitstate",
      "isArray": false,
      "value": "ConvertUnitState(3)"
    },
    "AI_DIFFICULTY_NEWBIE": {
      "isConstant": true,
      "type": "aidifficulty",
      "isArray": false,
      "value": "ConvertAIDifficulty(0)"
    },
    "AI_DIFFICULTY_NORMAL": {
      "isConstant": true,
      "type": "aidifficulty",
      "isArray": false,
      "value": "ConvertAIDifficulty(1)"
    },
    "AI_DIFFICULTY_INSANE": {
      "isConstant": true,
      "type": "aidifficulty",
      "isArray": false,
      "value": "ConvertAIDifficulty(2)"
    },
    "PLAYER_SCORE_UNITS_TRAINED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(0)"
    },
    "PLAYER_SCORE_UNITS_KILLED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(1)"
    },
    "PLAYER_SCORE_STRUCT_BUILT": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(2)"
    },
    "PLAYER_SCORE_STRUCT_RAZED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(3)"
    },
    "PLAYER_SCORE_TECH_PERCENT": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(4)"
    },
    "PLAYER_SCORE_FOOD_MAXPROD": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(5)"
    },
    "PLAYER_SCORE_FOOD_MAXUSED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(6)"
    },
    "PLAYER_SCORE_HEROES_KILLED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(7)"
    },
    "PLAYER_SCORE_ITEMS_GAINED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(8)"
    },
    "PLAYER_SCORE_MERCS_HIRED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(9)"
    },
    "PLAYER_SCORE_GOLD_MINED_TOTAL": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(10)"
    },
    "PLAYER_SCORE_GOLD_MINED_UPKEEP": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(11)"
    },
    "PLAYER_SCORE_GOLD_LOST_UPKEEP": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(12)"
    },
    "PLAYER_SCORE_GOLD_LOST_TAX": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(13)"
    },
    "PLAYER_SCORE_GOLD_GIVEN": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(14)"
    },
    "PLAYER_SCORE_GOLD_RECEIVED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(15)"
    },
    "PLAYER_SCORE_LUMBER_TOTAL": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(16)"
    },
    "PLAYER_SCORE_LUMBER_LOST_UPKEEP": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(17)"
    },
    "PLAYER_SCORE_LUMBER_LOST_TAX": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(18)"
    },
    "PLAYER_SCORE_LUMBER_GIVEN": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(19)"
    },
    "PLAYER_SCORE_LUMBER_RECEIVED": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(20)"
    },
    "PLAYER_SCORE_UNIT_TOTAL": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(21)"
    },
    "PLAYER_SCORE_HERO_TOTAL": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(22)"
    },
    "PLAYER_SCORE_RESOURCE_TOTAL": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(23)"
    },
    "PLAYER_SCORE_TOTAL": {
      "isConstant": true,
      "type": "playerscore",
      "isArray": false,
      "value": "ConvertPlayerScore(24)"
    },
    "EVENT_GAME_VICTORY": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(0)"
    },
    "EVENT_GAME_END_LEVEL": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(1)"
    },
    "EVENT_GAME_VARIABLE_LIMIT": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(2)"
    },
    "EVENT_GAME_STATE_LIMIT": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(3)"
    },
    "EVENT_GAME_TIMER_EXPIRED": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(4)"
    },
    "EVENT_GAME_ENTER_REGION": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(5)"
    },
    "EVENT_GAME_LEAVE_REGION": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(6)"
    },
    "EVENT_GAME_TRACKABLE_HIT": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(7)"
    },
    "EVENT_GAME_TRACKABLE_TRACK": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(8)"
    },
    "EVENT_GAME_SHOW_SKILL": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(9)"
    },
    "EVENT_GAME_BUILD_SUBMENU": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(10)"
    },
    "EVENT_PLAYER_STATE_LIMIT": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(11)"
    },
    "EVENT_PLAYER_ALLIANCE_CHANGED": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(12)"
    },
    "EVENT_PLAYER_DEFEAT": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(13)"
    },
    "EVENT_PLAYER_VICTORY": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(14)"
    },
    "EVENT_PLAYER_LEAVE": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(15)"
    },
    "EVENT_PLAYER_CHAT": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(16)"
    },
    "EVENT_PLAYER_END_CINEMATIC": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(17)"
    },
    "EVENT_PLAYER_UNIT_ATTACKED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(18)"
    },
    "EVENT_PLAYER_UNIT_RESCUED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(19)"
    },
    "EVENT_PLAYER_UNIT_DEATH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(20)"
    },
    "EVENT_PLAYER_UNIT_DECAY": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(21)"
    },
    "EVENT_PLAYER_UNIT_DETECTED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(22)"
    },
    "EVENT_PLAYER_UNIT_HIDDEN": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(23)"
    },
    "EVENT_PLAYER_UNIT_SELECTED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(24)"
    },
    "EVENT_PLAYER_UNIT_DESELECTED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(25)"
    },
    "EVENT_PLAYER_UNIT_CONSTRUCT_START": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(26)"
    },
    "EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(27)"
    },
    "EVENT_PLAYER_UNIT_CONSTRUCT_FINISH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(28)"
    },
    "EVENT_PLAYER_UNIT_UPGRADE_START": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(29)"
    },
    "EVENT_PLAYER_UNIT_UPGRADE_CANCEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(30)"
    },
    "EVENT_PLAYER_UNIT_UPGRADE_FINISH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(31)"
    },
    "EVENT_PLAYER_UNIT_TRAIN_START": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(32)"
    },
    "EVENT_PLAYER_UNIT_TRAIN_CANCEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(33)"
    },
    "EVENT_PLAYER_UNIT_TRAIN_FINISH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(34)"
    },
    "EVENT_PLAYER_UNIT_RESEARCH_START": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(35)"
    },
    "EVENT_PLAYER_UNIT_RESEARCH_CANCEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(36)"
    },
    "EVENT_PLAYER_UNIT_RESEARCH_FINISH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(37)"
    },
    "EVENT_PLAYER_UNIT_ISSUED_ORDER": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(38)"
    },
    "EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(39)"
    },
    "EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(40)"
    },
    "EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(40) "
    },
    "EVENT_PLAYER_HERO_LEVEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(41)"
    },
    "EVENT_PLAYER_HERO_SKILL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(42)"
    },
    "EVENT_PLAYER_HERO_REVIVABLE": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(43)"
    },
    "EVENT_PLAYER_HERO_REVIVE_START": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(44)"
    },
    "EVENT_PLAYER_HERO_REVIVE_CANCEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(45)"
    },
    "EVENT_PLAYER_HERO_REVIVE_FINISH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(46)"
    },
    "EVENT_PLAYER_UNIT_SUMMON": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(47)"
    },
    "EVENT_PLAYER_UNIT_DROP_ITEM": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(48)"
    },
    "EVENT_PLAYER_UNIT_PICKUP_ITEM": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(49)"
    },
    "EVENT_PLAYER_UNIT_USE_ITEM": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(50)"
    },
    "EVENT_PLAYER_UNIT_LOADED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(51)"
    },
    "EVENT_PLAYER_UNIT_DAMAGED": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(308)"
    },
    "EVENT_PLAYER_UNIT_DAMAGING": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(315)"
    },
    "EVENT_UNIT_DAMAGED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(52)"
    },
    "EVENT_UNIT_DAMAGING": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(314)"
    },
    "EVENT_UNIT_DEATH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(53)"
    },
    "EVENT_UNIT_DECAY": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(54)"
    },
    "EVENT_UNIT_DETECTED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(55)"
    },
    "EVENT_UNIT_HIDDEN": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(56)"
    },
    "EVENT_UNIT_SELECTED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(57)"
    },
    "EVENT_UNIT_DESELECTED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(58)"
    },
    "EVENT_UNIT_STATE_LIMIT": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(59)"
    },
    "EVENT_UNIT_ACQUIRED_TARGET": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(60)"
    },
    "EVENT_UNIT_TARGET_IN_RANGE": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(61)"
    },
    "EVENT_UNIT_ATTACKED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(62)"
    },
    "EVENT_UNIT_RESCUED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(63)"
    },
    "EVENT_UNIT_CONSTRUCT_CANCEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(64)"
    },
    "EVENT_UNIT_CONSTRUCT_FINISH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(65)"
    },
    "EVENT_UNIT_UPGRADE_START": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(66)"
    },
    "EVENT_UNIT_UPGRADE_CANCEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(67)"
    },
    "EVENT_UNIT_UPGRADE_FINISH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(68)"
    },
    "EVENT_UNIT_TRAIN_START": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(69)"
    },
    "EVENT_UNIT_TRAIN_CANCEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(70)"
    },
    "EVENT_UNIT_TRAIN_FINISH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(71)"
    },
    "EVENT_UNIT_RESEARCH_START": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(72)"
    },
    "EVENT_UNIT_RESEARCH_CANCEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(73)"
    },
    "EVENT_UNIT_RESEARCH_FINISH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(74)"
    },
    "EVENT_UNIT_ISSUED_ORDER": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(75)"
    },
    "EVENT_UNIT_ISSUED_POINT_ORDER": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(76)"
    },
    "EVENT_UNIT_ISSUED_TARGET_ORDER": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(77)"
    },
    "EVENT_UNIT_HERO_LEVEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(78)"
    },
    "EVENT_UNIT_HERO_SKILL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(79)"
    },
    "EVENT_UNIT_HERO_REVIVABLE": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(80)"
    },
    "EVENT_UNIT_HERO_REVIVE_START": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(81)"
    },
    "EVENT_UNIT_HERO_REVIVE_CANCEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(82)"
    },
    "EVENT_UNIT_HERO_REVIVE_FINISH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(83)"
    },
    "EVENT_UNIT_SUMMON": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(84)"
    },
    "EVENT_UNIT_DROP_ITEM": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(85)"
    },
    "EVENT_UNIT_PICKUP_ITEM": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(86)"
    },
    "EVENT_UNIT_USE_ITEM": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(87)"
    },
    "EVENT_UNIT_LOADED": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(88)"
    },
    "EVENT_WIDGET_DEATH": {
      "isConstant": true,
      "type": "widgetevent",
      "isArray": false,
      "value": "ConvertWidgetEvent(89)"
    },
    "EVENT_DIALOG_BUTTON_CLICK": {
      "isConstant": true,
      "type": "dialogevent",
      "isArray": false,
      "value": "ConvertDialogEvent(90)"
    },
    "EVENT_DIALOG_CLICK": {
      "isConstant": true,
      "type": "dialogevent",
      "isArray": false,
      "value": "ConvertDialogEvent(91)"
    },
    "EVENT_GAME_LOADED": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(256)"
    },
    "EVENT_GAME_TOURNAMENT_FINISH_SOON": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(257)"
    },
    "EVENT_GAME_TOURNAMENT_FINISH_NOW": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(258)"
    },
    "EVENT_GAME_SAVE": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(259)"
    },
    "EVENT_GAME_CUSTOM_UI_FRAME": {
      "isConstant": true,
      "type": "gameevent",
      "isArray": false,
      "value": "ConvertGameEvent(310)"
    },
    "EVENT_PLAYER_ARROW_LEFT_DOWN": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(261)"
    },
    "EVENT_PLAYER_ARROW_LEFT_UP": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(262)"
    },
    "EVENT_PLAYER_ARROW_RIGHT_DOWN": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(263)"
    },
    "EVENT_PLAYER_ARROW_RIGHT_UP": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(264)"
    },
    "EVENT_PLAYER_ARROW_DOWN_DOWN": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(265)"
    },
    "EVENT_PLAYER_ARROW_DOWN_UP": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(266)"
    },
    "EVENT_PLAYER_ARROW_UP_DOWN": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(267)"
    },
    "EVENT_PLAYER_ARROW_UP_UP": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(268)"
    },
    "EVENT_PLAYER_MOUSE_DOWN": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(305)"
    },
    "EVENT_PLAYER_MOUSE_UP": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(306)"
    },
    "EVENT_PLAYER_MOUSE_MOVE": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(307)"
    },
    "EVENT_PLAYER_SYNC_DATA": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(309)"
    },
    "EVENT_PLAYER_KEY": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(311)"
    },
    "EVENT_PLAYER_KEY_DOWN": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(312)"
    },
    "EVENT_PLAYER_KEY_UP": {
      "isConstant": true,
      "type": "playerevent",
      "isArray": false,
      "value": "ConvertPlayerEvent(313)"
    },
    "EVENT_PLAYER_UNIT_SELL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(269)"
    },
    "EVENT_PLAYER_UNIT_CHANGE_OWNER": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(270)"
    },
    "EVENT_PLAYER_UNIT_SELL_ITEM": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(271)"
    },
    "EVENT_PLAYER_UNIT_SPELL_CHANNEL": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(272)"
    },
    "EVENT_PLAYER_UNIT_SPELL_CAST": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(273)"
    },
    "EVENT_PLAYER_UNIT_SPELL_EFFECT": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(274)"
    },
    "EVENT_PLAYER_UNIT_SPELL_FINISH": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(275)"
    },
    "EVENT_PLAYER_UNIT_SPELL_ENDCAST": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(276)"
    },
    "EVENT_PLAYER_UNIT_PAWN_ITEM": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(277)"
    },
    "EVENT_PLAYER_UNIT_STACK_ITEM": {
      "isConstant": true,
      "type": "playerunitevent",
      "isArray": false,
      "value": "ConvertPlayerUnitEvent(319)"
    },
    "EVENT_UNIT_SELL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(286)"
    },
    "EVENT_UNIT_CHANGE_OWNER": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(287)"
    },
    "EVENT_UNIT_SELL_ITEM": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(288)"
    },
    "EVENT_UNIT_SPELL_CHANNEL": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(289)"
    },
    "EVENT_UNIT_SPELL_CAST": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(290)"
    },
    "EVENT_UNIT_SPELL_EFFECT": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(291)"
    },
    "EVENT_UNIT_SPELL_FINISH": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(292)"
    },
    "EVENT_UNIT_SPELL_ENDCAST": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(293)"
    },
    "EVENT_UNIT_PAWN_ITEM": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(294)"
    },
    "EVENT_UNIT_STACK_ITEM": {
      "isConstant": true,
      "type": "unitevent",
      "isArray": false,
      "value": "ConvertUnitEvent(318)"
    },
    "LESS_THAN": {
      "isConstant": true,
      "type": "limitop",
      "isArray": false,
      "value": "ConvertLimitOp(0)"
    },
    "LESS_THAN_OR_EQUAL": {
      "isConstant": true,
      "type": "limitop",
      "isArray": false,
      "value": "ConvertLimitOp(1)"
    },
    "EQUAL": {
      "isConstant": true,
      "type": "limitop",
      "isArray": false,
      "value": "ConvertLimitOp(2)"
    },
    "GREATER_THAN_OR_EQUAL": {
      "isConstant": true,
      "type": "limitop",
      "isArray": false,
      "value": "ConvertLimitOp(3)"
    },
    "GREATER_THAN": {
      "isConstant": true,
      "type": "limitop",
      "isArray": false,
      "value": "ConvertLimitOp(4)"
    },
    "NOT_EQUAL": {
      "isConstant": true,
      "type": "limitop",
      "isArray": false,
      "value": "ConvertLimitOp(5)"
    },
    "UNIT_TYPE_HERO": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(0)"
    },
    "UNIT_TYPE_DEAD": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(1)"
    },
    "UNIT_TYPE_STRUCTURE": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(2)"
    },
    "UNIT_TYPE_FLYING": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(3)"
    },
    "UNIT_TYPE_GROUND": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(4)"
    },
    "UNIT_TYPE_ATTACKS_FLYING": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(5)"
    },
    "UNIT_TYPE_ATTACKS_GROUND": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(6)"
    },
    "UNIT_TYPE_MELEE_ATTACKER": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(7)"
    },
    "UNIT_TYPE_RANGED_ATTACKER": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(8)"
    },
    "UNIT_TYPE_GIANT": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(9)"
    },
    "UNIT_TYPE_SUMMONED": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(10)"
    },
    "UNIT_TYPE_STUNNED": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(11)"
    },
    "UNIT_TYPE_PLAGUED": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(12)"
    },
    "UNIT_TYPE_SNARED": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(13)"
    },
    "UNIT_TYPE_UNDEAD": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(14)"
    },
    "UNIT_TYPE_MECHANICAL": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(15)"
    },
    "UNIT_TYPE_PEON": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(16)"
    },
    "UNIT_TYPE_SAPPER": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(17)"
    },
    "UNIT_TYPE_TOWNHALL": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(18)"
    },
    "UNIT_TYPE_ANCIENT": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(19)"
    },
    "UNIT_TYPE_TAUREN": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(20)"
    },
    "UNIT_TYPE_POISONED": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(21)"
    },
    "UNIT_TYPE_POLYMORPHED": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(22)"
    },
    "UNIT_TYPE_SLEEPING": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(23)"
    },
    "UNIT_TYPE_RESISTANT": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(24)"
    },
    "UNIT_TYPE_ETHEREAL": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(25)"
    },
    "UNIT_TYPE_MAGIC_IMMUNE": {
      "isConstant": true,
      "type": "unittype",
      "isArray": false,
      "value": "ConvertUnitType(26)"
    },
    "ITEM_TYPE_PERMANENT": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(0)"
    },
    "ITEM_TYPE_CHARGED": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(1)"
    },
    "ITEM_TYPE_POWERUP": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(2)"
    },
    "ITEM_TYPE_ARTIFACT": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(3)"
    },
    "ITEM_TYPE_PURCHASABLE": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(4)"
    },
    "ITEM_TYPE_CAMPAIGN": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(5)"
    },
    "ITEM_TYPE_MISCELLANEOUS": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(6)"
    },
    "ITEM_TYPE_UNKNOWN": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(7)"
    },
    "ITEM_TYPE_ANY": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(8)"
    },
    "ITEM_TYPE_TOME": {
      "isConstant": true,
      "type": "itemtype",
      "isArray": false,
      "value": "ConvertItemType(2)"
    },
    "CAMERA_FIELD_TARGET_DISTANCE": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(0)"
    },
    "CAMERA_FIELD_FARZ": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(1)"
    },
    "CAMERA_FIELD_ANGLE_OF_ATTACK": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(2)"
    },
    "CAMERA_FIELD_FIELD_OF_VIEW": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(3)"
    },
    "CAMERA_FIELD_ROLL": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(4)"
    },
    "CAMERA_FIELD_ROTATION": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(5)"
    },
    "CAMERA_FIELD_ZOFFSET": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(6)"
    },
    "CAMERA_FIELD_NEARZ": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(7)"
    },
    "CAMERA_FIELD_LOCAL_PITCH": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(8)"
    },
    "CAMERA_FIELD_LOCAL_YAW": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(9)"
    },
    "CAMERA_FIELD_LOCAL_ROLL": {
      "isConstant": true,
      "type": "camerafield",
      "isArray": false,
      "value": "ConvertCameraField(10)"
    },
    "BLEND_MODE_NONE": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(0)"
    },
    "BLEND_MODE_DONT_CARE": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(0)"
    },
    "BLEND_MODE_KEYALPHA": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(1)"
    },
    "BLEND_MODE_BLEND": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(2)"
    },
    "BLEND_MODE_ADDITIVE": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(3)"
    },
    "BLEND_MODE_MODULATE": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(4)"
    },
    "BLEND_MODE_MODULATE_2X": {
      "isConstant": true,
      "type": "blendmode",
      "isArray": false,
      "value": "ConvertBlendMode(5)"
    },
    "RARITY_FREQUENT": {
      "isConstant": true,
      "type": "raritycontrol",
      "isArray": false,
      "value": "ConvertRarityControl(0)"
    },
    "RARITY_RARE": {
      "isConstant": true,
      "type": "raritycontrol",
      "isArray": false,
      "value": "ConvertRarityControl(1)"
    },
    "TEXMAP_FLAG_NONE": {
      "isConstant": true,
      "type": "texmapflags",
      "isArray": false,
      "value": "ConvertTexMapFlags(0)"
    },
    "TEXMAP_FLAG_WRAP_U": {
      "isConstant": true,
      "type": "texmapflags",
      "isArray": false,
      "value": "ConvertTexMapFlags(1)"
    },
    "TEXMAP_FLAG_WRAP_V": {
      "isConstant": true,
      "type": "texmapflags",
      "isArray": false,
      "value": "ConvertTexMapFlags(2)"
    },
    "TEXMAP_FLAG_WRAP_UV": {
      "isConstant": true,
      "type": "texmapflags",
      "isArray": false,
      "value": "ConvertTexMapFlags(3)"
    },
    "FOG_OF_WAR_MASKED": {
      "isConstant": true,
      "type": "fogstate",
      "isArray": false,
      "value": "ConvertFogState(1)"
    },
    "FOG_OF_WAR_FOGGED": {
      "isConstant": true,
      "type": "fogstate",
      "isArray": false,
      "value": "ConvertFogState(2)"
    },
    "FOG_OF_WAR_VISIBLE": {
      "isConstant": true,
      "type": "fogstate",
      "isArray": false,
      "value": "ConvertFogState(4)"
    },
    "CAMERA_MARGIN_LEFT": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "0"
    },
    "CAMERA_MARGIN_RIGHT": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "1"
    },
    "CAMERA_MARGIN_TOP": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "2"
    },
    "CAMERA_MARGIN_BOTTOM": {
      "isConstant": true,
      "type": "integer",
      "isArray": false,
      "value": "3"
    },
    "EFFECT_TYPE_EFFECT": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(0)"
    },
    "EFFECT_TYPE_TARGET": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(1)"
    },
    "EFFECT_TYPE_CASTER": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(2)"
    },
    "EFFECT_TYPE_SPECIAL": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(3)"
    },
    "EFFECT_TYPE_AREA_EFFECT": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(4)"
    },
    "EFFECT_TYPE_MISSILE": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(5)"
    },
    "EFFECT_TYPE_LIGHTNING": {
      "isConstant": true,
      "type": "effecttype",
      "isArray": false,
      "value": "ConvertEffectType(6)"
    },
    "SOUND_TYPE_EFFECT": {
      "isConstant": true,
      "type": "soundtype",
      "isArray": false,
      "value": "ConvertSoundType(0)"
    },
    "SOUND_TYPE_EFFECT_LOOPED": {
      "isConstant": true,
      "type": "soundtype",
      "isArray": false,
      "value": "ConvertSoundType(1)"
    },
    "ORIGIN_FRAME_GAME_UI": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(0)"
    },
    "ORIGIN_FRAME_COMMAND_BUTTON": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(1)"
    },
    "ORIGIN_FRAME_HERO_BAR": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(2)"
    },
    "ORIGIN_FRAME_HERO_BUTTON": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(3)"
    },
    "ORIGIN_FRAME_HERO_HP_BAR": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(4)"
    },
    "ORIGIN_FRAME_HERO_MANA_BAR": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(5)"
    },
    "ORIGIN_FRAME_HERO_BUTTON_INDICATOR": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(6)"
    },
    "ORIGIN_FRAME_ITEM_BUTTON": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(7)"
    },
    "ORIGIN_FRAME_MINIMAP": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(8)"
    },
    "ORIGIN_FRAME_MINIMAP_BUTTON": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(9)"
    },
    "ORIGIN_FRAME_SYSTEM_BUTTON": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(10)"
    },
    "ORIGIN_FRAME_TOOLTIP": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(11)"
    },
    "ORIGIN_FRAME_UBERTOOLTIP": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(12)"
    },
    "ORIGIN_FRAME_CHAT_MSG": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(13)"
    },
    "ORIGIN_FRAME_UNIT_MSG": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(14)"
    },
    "ORIGIN_FRAME_TOP_MSG": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(15)"
    },
    "ORIGIN_FRAME_PORTRAIT": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(16)"
    },
    "ORIGIN_FRAME_WORLD_FRAME": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(17)"
    },
    "ORIGIN_FRAME_SIMPLE_UI_PARENT": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(18)"
    },
    "ORIGIN_FRAME_PORTRAIT_HP_TEXT": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(19)"
    },
    "ORIGIN_FRAME_PORTRAIT_MANA_TEXT": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(20)"
    },
    "ORIGIN_FRAME_UNIT_PANEL_BUFF_BAR": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(21)"
    },
    "ORIGIN_FRAME_UNIT_PANEL_BUFF_BAR_LABEL": {
      "isConstant": true,
      "type": "originframetype",
      "isArray": false,
      "value": "ConvertOriginFrameType(22)"
    },
    "FRAMEPOINT_TOPLEFT": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(0)"
    },
    "FRAMEPOINT_TOP": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(1)"
    },
    "FRAMEPOINT_TOPRIGHT": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(2)"
    },
    "FRAMEPOINT_LEFT": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(3)"
    },
    "FRAMEPOINT_CENTER": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(4)"
    },
    "FRAMEPOINT_RIGHT": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(5)"
    },
    "FRAMEPOINT_BOTTOMLEFT": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(6)"
    },
    "FRAMEPOINT_BOTTOM": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(7)"
    },
    "FRAMEPOINT_BOTTOMRIGHT": {
      "isConstant": true,
      "type": "framepointtype",
      "isArray": false,
      "value": "ConvertFramePointType(8)"
    },
    "TEXT_JUSTIFY_TOP": {
      "isConstant": true,
      "type": "textaligntype",
      "isArray": false,
      "value": "ConvertTextAlignType(0)"
    },
    "TEXT_JUSTIFY_MIDDLE": {
      "isConstant": true,
      "type": "textaligntype",
      "isArray": false,
      "value": "ConvertTextAlignType(1)"
    },
    "TEXT_JUSTIFY_BOTTOM": {
      "isConstant": true,
      "type": "textaligntype",
      "isArray": false,
      "value": "ConvertTextAlignType(2)"
    },
    "TEXT_JUSTIFY_LEFT": {
      "isConstant": true,
      "type": "textaligntype",
      "isArray": false,
      "value": "ConvertTextAlignType(3)"
    },
    "TEXT_JUSTIFY_CENTER": {
      "isConstant": true,
      "type": "textaligntype",
      "isArray": false,
      "value": "ConvertTextAlignType(4)"
    },
    "TEXT_JUSTIFY_RIGHT": {
      "isConstant": true,
      "type": "textaligntype",
      "isArray": false,
      "value": "ConvertTextAlignType(5)"
    },
    "FRAMEEVENT_CONTROL_CLICK": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(1)"
    },
    "FRAMEEVENT_MOUSE_ENTER": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(2)"
    },
    "FRAMEEVENT_MOUSE_LEAVE": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(3)"
    },
    "FRAMEEVENT_MOUSE_UP": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(4)"
    },
    "FRAMEEVENT_MOUSE_DOWN": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(5)"
    },
    "FRAMEEVENT_MOUSE_WHEEL": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(6)"
    },
    "FRAMEEVENT_CHECKBOX_CHECKED": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(7)"
    },
    "FRAMEEVENT_CHECKBOX_UNCHECKED": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(8)"
    },
    "FRAMEEVENT_EDITBOX_TEXT_CHANGED": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(9)"
    },
    "FRAMEEVENT_POPUPMENU_ITEM_CHANGED": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(10)"
    },
    "FRAMEEVENT_MOUSE_DOUBLECLICK": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(11)"
    },
    "FRAMEEVENT_SPRITE_ANIM_UPDATE": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(12)"
    },
    "FRAMEEVENT_SLIDER_VALUE_CHANGED": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(13)"
    },
    "FRAMEEVENT_DIALOG_CANCEL": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(14)"
    },
    "FRAMEEVENT_DIALOG_ACCEPT": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(15)"
    },
    "FRAMEEVENT_EDITBOX_ENTER": {
      "isConstant": true,
      "type": "frameeventtype",
      "isArray": false,
      "value": "ConvertFrameEventType(16)"
    },
    "OSKEY_BACKSPACE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($08)"
    },
    "OSKEY_TAB": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($09)"
    },
    "OSKEY_CLEAR": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($0C)"
    },
    "OSKEY_RETURN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($0D)"
    },
    "OSKEY_SHIFT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($10)"
    },
    "OSKEY_CONTROL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($11)"
    },
    "OSKEY_ALT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($12)"
    },
    "OSKEY_PAUSE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($13)"
    },
    "OSKEY_CAPSLOCK": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($14)"
    },
    "OSKEY_KANA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($15)"
    },
    "OSKEY_HANGUL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($15)"
    },
    "OSKEY_JUNJA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($17)"
    },
    "OSKEY_FINAL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($18)"
    },
    "OSKEY_HANJA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($19)"
    },
    "OSKEY_KANJI": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($19)"
    },
    "OSKEY_ESCAPE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($1B)"
    },
    "OSKEY_CONVERT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($1C)"
    },
    "OSKEY_NONCONVERT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($1D)"
    },
    "OSKEY_ACCEPT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($1E)"
    },
    "OSKEY_MODECHANGE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($1F)"
    },
    "OSKEY_SPACE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($20)"
    },
    "OSKEY_PAGEUP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($21)"
    },
    "OSKEY_PAGEDOWN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($22)"
    },
    "OSKEY_END": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($23)"
    },
    "OSKEY_HOME": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($24)"
    },
    "OSKEY_LEFT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($25)"
    },
    "OSKEY_UP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($26)"
    },
    "OSKEY_RIGHT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($27)"
    },
    "OSKEY_DOWN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($28)"
    },
    "OSKEY_SELECT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($29)"
    },
    "OSKEY_PRINT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($2A)"
    },
    "OSKEY_EXECUTE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($2B)"
    },
    "OSKEY_PRINTSCREEN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($2C)"
    },
    "OSKEY_INSERT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($2D)"
    },
    "OSKEY_DELETE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($2E)"
    },
    "OSKEY_HELP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($2F)"
    },
    "OSKEY_0": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($30)"
    },
    "OSKEY_1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($31)"
    },
    "OSKEY_2": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($32)"
    },
    "OSKEY_3": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($33)"
    },
    "OSKEY_4": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($34)"
    },
    "OSKEY_5": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($35)"
    },
    "OSKEY_6": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($36)"
    },
    "OSKEY_7": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($37)"
    },
    "OSKEY_8": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($38)"
    },
    "OSKEY_9": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($39)"
    },
    "OSKEY_A": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($41)"
    },
    "OSKEY_B": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($42)"
    },
    "OSKEY_C": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($43)"
    },
    "OSKEY_D": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($44)"
    },
    "OSKEY_E": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($45)"
    },
    "OSKEY_F": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($46)"
    },
    "OSKEY_G": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($47)"
    },
    "OSKEY_H": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($48)"
    },
    "OSKEY_I": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($49)"
    },
    "OSKEY_J": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($4A)"
    },
    "OSKEY_K": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($4B)"
    },
    "OSKEY_L": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($4C)"
    },
    "OSKEY_M": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($4D)"
    },
    "OSKEY_N": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($4E)"
    },
    "OSKEY_O": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($4F)"
    },
    "OSKEY_P": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($50)"
    },
    "OSKEY_Q": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($51)"
    },
    "OSKEY_R": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($52)"
    },
    "OSKEY_S": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($53)"
    },
    "OSKEY_T": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($54)"
    },
    "OSKEY_U": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($55)"
    },
    "OSKEY_V": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($56)"
    },
    "OSKEY_W": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($57)"
    },
    "OSKEY_X": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($58)"
    },
    "OSKEY_Y": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($59)"
    },
    "OSKEY_Z": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($5A)"
    },
    "OSKEY_LMETA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($5B)"
    },
    "OSKEY_RMETA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($5C)"
    },
    "OSKEY_APPS": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($5D)"
    },
    "OSKEY_SLEEP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($5F)"
    },
    "OSKEY_NUMPAD0": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($60)"
    },
    "OSKEY_NUMPAD1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($61)"
    },
    "OSKEY_NUMPAD2": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($62)"
    },
    "OSKEY_NUMPAD3": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($63)"
    },
    "OSKEY_NUMPAD4": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($64)"
    },
    "OSKEY_NUMPAD5": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($65)"
    },
    "OSKEY_NUMPAD6": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($66)"
    },
    "OSKEY_NUMPAD7": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($67)"
    },
    "OSKEY_NUMPAD8": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($68)"
    },
    "OSKEY_NUMPAD9": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($69)"
    },
    "OSKEY_MULTIPLY": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($6A)"
    },
    "OSKEY_ADD": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($6B)"
    },
    "OSKEY_SEPARATOR": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($6C)"
    },
    "OSKEY_SUBTRACT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($6D)"
    },
    "OSKEY_DECIMAL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($6E)"
    },
    "OSKEY_DIVIDE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($6F)"
    },
    "OSKEY_F1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($70)"
    },
    "OSKEY_F2": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($71)"
    },
    "OSKEY_F3": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($72)"
    },
    "OSKEY_F4": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($73)"
    },
    "OSKEY_F5": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($74)"
    },
    "OSKEY_F6": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($75)"
    },
    "OSKEY_F7": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($76)"
    },
    "OSKEY_F8": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($77)"
    },
    "OSKEY_F9": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($78)"
    },
    "OSKEY_F10": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($79)"
    },
    "OSKEY_F11": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($7A)"
    },
    "OSKEY_F12": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($7B)"
    },
    "OSKEY_F13": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($7C)"
    },
    "OSKEY_F14": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($7D)"
    },
    "OSKEY_F15": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($7E)"
    },
    "OSKEY_F16": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($7F)"
    },
    "OSKEY_F17": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($80)"
    },
    "OSKEY_F18": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($81)"
    },
    "OSKEY_F19": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($82)"
    },
    "OSKEY_F20": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($83)"
    },
    "OSKEY_F21": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($84)"
    },
    "OSKEY_F22": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($85)"
    },
    "OSKEY_F23": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($86)"
    },
    "OSKEY_F24": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($87)"
    },
    "OSKEY_NUMLOCK": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($90)"
    },
    "OSKEY_SCROLLLOCK": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($91)"
    },
    "OSKEY_OEM_NEC_EQUAL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($92)"
    },
    "OSKEY_OEM_FJ_JISHO": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($92)"
    },
    "OSKEY_OEM_FJ_MASSHOU": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($93)"
    },
    "OSKEY_OEM_FJ_TOUROKU": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($94)"
    },
    "OSKEY_OEM_FJ_LOYA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($95)"
    },
    "OSKEY_OEM_FJ_ROYA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($96)"
    },
    "OSKEY_LSHIFT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A0)"
    },
    "OSKEY_RSHIFT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A1)"
    },
    "OSKEY_LCONTROL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A2)"
    },
    "OSKEY_RCONTROL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A3)"
    },
    "OSKEY_LALT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A4)"
    },
    "OSKEY_RALT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A5)"
    },
    "OSKEY_BROWSER_BACK": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A6)"
    },
    "OSKEY_BROWSER_FORWARD": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A7)"
    },
    "OSKEY_BROWSER_REFRESH": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A8)"
    },
    "OSKEY_BROWSER_STOP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($A9)"
    },
    "OSKEY_BROWSER_SEARCH": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($AA)"
    },
    "OSKEY_BROWSER_FAVORITES": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($AB)"
    },
    "OSKEY_BROWSER_HOME": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($AC)"
    },
    "OSKEY_VOLUME_MUTE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($AD)"
    },
    "OSKEY_VOLUME_DOWN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($AE)"
    },
    "OSKEY_VOLUME_UP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($AF)"
    },
    "OSKEY_MEDIA_NEXT_TRACK": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B0)"
    },
    "OSKEY_MEDIA_PREV_TRACK": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B1)"
    },
    "OSKEY_MEDIA_STOP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B2)"
    },
    "OSKEY_MEDIA_PLAY_PAUSE": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B3)"
    },
    "OSKEY_LAUNCH_MAIL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B4)"
    },
    "OSKEY_LAUNCH_MEDIA_SELECT": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B5)"
    },
    "OSKEY_LAUNCH_APP1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B6)"
    },
    "OSKEY_LAUNCH_APP2": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($B7)"
    },
    "OSKEY_OEM_1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($BA)"
    },
    "OSKEY_OEM_PLUS": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($BB)"
    },
    "OSKEY_OEM_COMMA": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($BC)"
    },
    "OSKEY_OEM_MINUS": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($BD)"
    },
    "OSKEY_OEM_PERIOD": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($BE)"
    },
    "OSKEY_OEM_2": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($BF)"
    },
    "OSKEY_OEM_3": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($C0)"
    },
    "OSKEY_OEM_4": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($DB)"
    },
    "OSKEY_OEM_5": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($DC)"
    },
    "OSKEY_OEM_6": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($DD)"
    },
    "OSKEY_OEM_7": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($DE)"
    },
    "OSKEY_OEM_8": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($DF)"
    },
    "OSKEY_OEM_AX": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E1)"
    },
    "OSKEY_OEM_102": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E2)"
    },
    "OSKEY_ICO_HELP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E3)"
    },
    "OSKEY_ICO_00": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E4)"
    },
    "OSKEY_PROCESSKEY": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E5)"
    },
    "OSKEY_ICO_CLEAR": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E6)"
    },
    "OSKEY_PACKET": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E7)"
    },
    "OSKEY_OEM_RESET": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($E9)"
    },
    "OSKEY_OEM_JUMP": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($EA)"
    },
    "OSKEY_OEM_PA1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($EB)"
    },
    "OSKEY_OEM_PA2": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($EC)"
    },
    "OSKEY_OEM_PA3": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($ED)"
    },
    "OSKEY_OEM_WSCTRL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($EE)"
    },
    "OSKEY_OEM_CUSEL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($EF)"
    },
    "OSKEY_OEM_ATTN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F0)"
    },
    "OSKEY_OEM_FINISH": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F1)"
    },
    "OSKEY_OEM_COPY": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F2)"
    },
    "OSKEY_OEM_AUTO": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F3)"
    },
    "OSKEY_OEM_ENLW": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F4)"
    },
    "OSKEY_OEM_BACKTAB": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F5)"
    },
    "OSKEY_ATTN": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F6)"
    },
    "OSKEY_CRSEL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F7)"
    },
    "OSKEY_EXSEL": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F8)"
    },
    "OSKEY_EREOF": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($F9)"
    },
    "OSKEY_PLAY": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($FA)"
    },
    "OSKEY_ZOOM": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($FB)"
    },
    "OSKEY_NONAME": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($FC)"
    },
    "OSKEY_PA1": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($FD)"
    },
    "OSKEY_OEM_CLEAR": {
      "isConstant": true,
      "type": "oskeytype",
      "isArray": false,
      "value": "ConvertOsKeyType($FE)"
    },
    "ABILITY_IF_BUTTON_POSITION_NORMAL_X": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027abpx\u0027)"
    },
    "ABILITY_IF_BUTTON_POSITION_NORMAL_Y": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027abpy\u0027)"
    },
    "ABILITY_IF_BUTTON_POSITION_ACTIVATED_X": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027aubx\u0027)"
    },
    "ABILITY_IF_BUTTON_POSITION_ACTIVATED_Y": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027auby\u0027)"
    },
    "ABILITY_IF_BUTTON_POSITION_RESEARCH_X": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027arpx\u0027)"
    },
    "ABILITY_IF_BUTTON_POSITION_RESEARCH_Y": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027arpy\u0027)"
    },
    "ABILITY_IF_MISSILE_SPEED": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027amsp\u0027)"
    },
    "ABILITY_IF_TARGET_ATTACHMENTS": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027atac\u0027)"
    },
    "ABILITY_IF_CASTER_ATTACHMENTS": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027acac\u0027)"
    },
    "ABILITY_IF_PRIORITY": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027apri\u0027)"
    },
    "ABILITY_IF_LEVELS": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027alev\u0027)"
    },
    "ABILITY_IF_REQUIRED_LEVEL": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027arlv\u0027)"
    },
    "ABILITY_IF_LEVEL_SKIP_REQUIREMENT": {
      "isConstant": true,
      "type": "abilityintegerfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerField(\u0027alsk\u0027)"
    },
    "ABILITY_BF_HERO_ABILITY": {
      "isConstant": true,
      "type": "abilitybooleanfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanField(\u0027aher\u0027) "
    },
    "ABILITY_BF_ITEM_ABILITY": {
      "isConstant": true,
      "type": "abilitybooleanfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanField(\u0027aite\u0027)"
    },
    "ABILITY_BF_CHECK_DEPENDENCIES": {
      "isConstant": true,
      "type": "abilitybooleanfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanField(\u0027achd\u0027)"
    },
    "ABILITY_RF_ARF_MISSILE_ARC": {
      "isConstant": true,
      "type": "abilityrealfield",
      "isArray": false,
      "value": "ConvertAbilityRealField(\u0027amac\u0027)"
    },
    "ABILITY_SF_NAME": {
      "isConstant": true,
      "type": "abilitystringfield",
      "isArray": false,
      "value": "ConvertAbilityStringField(\u0027anam\u0027) "
    },
    "ABILITY_SF_ICON_ACTIVATED": {
      "isConstant": true,
      "type": "abilitystringfield",
      "isArray": false,
      "value": "ConvertAbilityStringField(\u0027auar\u0027)"
    },
    "ABILITY_SF_ICON_RESEARCH": {
      "isConstant": true,
      "type": "abilitystringfield",
      "isArray": false,
      "value": "ConvertAbilityStringField(\u0027arar\u0027)"
    },
    "ABILITY_SF_EFFECT_SOUND": {
      "isConstant": true,
      "type": "abilitystringfield",
      "isArray": false,
      "value": "ConvertAbilityStringField(\u0027aefs\u0027)"
    },
    "ABILITY_SF_EFFECT_SOUND_LOOPING": {
      "isConstant": true,
      "type": "abilitystringfield",
      "isArray": false,
      "value": "ConvertAbilityStringField(\u0027aefl\u0027)"
    },
    "ABILITY_ILF_MANA_COST": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027amcs\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_WAVES": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hbz1\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SHARDS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hbz3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS_TELEPORTED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hmt1\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_COUNT_HWE2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hwe2\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_IMAGES": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Omi1\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_UAN1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Uan1\u0027)"
    },
    "ABILITY_ILF_MORPHING_FLAGS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Eme2\u0027)"
    },
    "ABILITY_ILF_STRENGTH_BONUS_NRG5": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nrg5\u0027)"
    },
    "ABILITY_ILF_DEFENSE_BONUS_NRG6": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nrg6\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_TARGETS_HIT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ocl2\u0027)"
    },
    "ABILITY_ILF_DETECTION_TYPE_OFS1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ofs1\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_OSF2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Osf2\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_EFN1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Efn1\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_HRE1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hre1\u0027)"
    },
    "ABILITY_ILF_STACK_FLAGS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hca4\u0027)"
    },
    "ABILITY_ILF_MINIMUM_NUMBER_OF_UNITS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndp2\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_NDP3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndp3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_NRC2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nrc2\u0027)"
    },
    "ABILITY_ILF_SHIELD_LIFE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ams3\u0027)"
    },
    "ABILITY_ILF_MANA_LOSS_AMS4": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ams4\u0027)"
    },
    "ABILITY_ILF_GOLD_PER_INTERVAL_BGM1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Bgm1\u0027)"
    },
    "ABILITY_ILF_MAX_NUMBER_OF_MINERS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Bgm3\u0027)"
    },
    "ABILITY_ILF_CARGO_CAPACITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Car1\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_DEV3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Dev3\u0027)"
    },
    "ABILITY_ILF_MAX_CREEP_LEVEL_DEV1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Dev1\u0027)"
    },
    "ABILITY_ILF_GOLD_PER_INTERVAL_EGM1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Egm1\u0027)"
    },
    "ABILITY_ILF_DEFENSE_REDUCTION": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Fae1\u0027)"
    },
    "ABILITY_ILF_DETECTION_TYPE_FLA1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Fla1\u0027)"
    },
    "ABILITY_ILF_FLARE_COUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Fla3\u0027)"
    },
    "ABILITY_ILF_MAX_GOLD": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Gld1\u0027)"
    },
    "ABILITY_ILF_MINING_CAPACITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Gld3\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_GYD1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Gyd1\u0027)"
    },
    "ABILITY_ILF_DAMAGE_TO_TREE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Har1\u0027)"
    },
    "ABILITY_ILF_LUMBER_CAPACITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Har2\u0027)"
    },
    "ABILITY_ILF_GOLD_CAPACITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Har3\u0027)"
    },
    "ABILITY_ILF_DEFENSE_INCREASE_INF2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Inf2\u0027)"
    },
    "ABILITY_ILF_INTERACTION_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Neu2\u0027)"
    },
    "ABILITY_ILF_GOLD_COST_NDT1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndt1\u0027)"
    },
    "ABILITY_ILF_LUMBER_COST_NDT2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndt2\u0027)"
    },
    "ABILITY_ILF_DETECTION_TYPE_NDT3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndt3\u0027)"
    },
    "ABILITY_ILF_STACKING_TYPE_POI4": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Poi4\u0027)"
    },
    "ABILITY_ILF_STACKING_TYPE_POA5": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Poa5\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_PLY1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ply1\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_POS1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Pos1\u0027)"
    },
    "ABILITY_ILF_MOVEMENT_UPDATE_FREQUENCY_PRG1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Prg1\u0027)"
    },
    "ABILITY_ILF_ATTACK_UPDATE_FREQUENCY_PRG2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Prg2\u0027)"
    },
    "ABILITY_ILF_MANA_LOSS_PRG6": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Prg6\u0027)"
    },
    "ABILITY_ILF_UNITS_SUMMONED_TYPE_ONE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Rai1\u0027)"
    },
    "ABILITY_ILF_UNITS_SUMMONED_TYPE_TWO": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Rai2\u0027)"
    },
    "ABILITY_ILF_MAX_UNITS_SUMMONED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ucb5\u0027)"
    },
    "ABILITY_ILF_ALLOW_WHEN_FULL_REJ3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Rej3\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_UNITS_CHARGED_TO_CASTER": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Rpb5\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_UNITS_AFFECTED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Rpb6\u0027)"
    },
    "ABILITY_ILF_DEFENSE_INCREASE_ROA2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Roa2\u0027)"
    },
    "ABILITY_ILF_MAX_UNITS_ROA7": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Roa7\u0027)"
    },
    "ABILITY_ILF_ROOTED_WEAPONS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Roo1\u0027)"
    },
    "ABILITY_ILF_UPROOTED_WEAPONS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Roo2\u0027)"
    },
    "ABILITY_ILF_UPROOTED_DEFENSE_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Roo4\u0027)"
    },
    "ABILITY_ILF_ACCUMULATION_STEP": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Sal2\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_OWLS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Esn4\u0027)"
    },
    "ABILITY_ILF_STACKING_TYPE_SPO4": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Spo4\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Sod1\u0027)"
    },
    "ABILITY_ILF_SPIDER_CAPACITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Spa1\u0027)"
    },
    "ABILITY_ILF_INTERVALS_BEFORE_CHANGING_TREES": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Wha2\u0027)"
    },
    "ABILITY_ILF_AGILITY_BONUS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iagi\u0027)"
    },
    "ABILITY_ILF_INTELLIGENCE_BONUS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iint\u0027)"
    },
    "ABILITY_ILF_STRENGTH_BONUS_ISTR": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Istr\u0027)"
    },
    "ABILITY_ILF_ATTACK_BONUS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iatt\u0027)"
    },
    "ABILITY_ILF_DEFENSE_BONUS_IDEF": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Idef\u0027)"
    },
    "ABILITY_ILF_SUMMON_1_AMOUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Isn1\u0027)"
    },
    "ABILITY_ILF_SUMMON_2_AMOUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Isn2\u0027)"
    },
    "ABILITY_ILF_EXPERIENCE_GAINED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ixpg\u0027)"
    },
    "ABILITY_ILF_HIT_POINTS_GAINED_IHPG": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ihpg\u0027)"
    },
    "ABILITY_ILF_MANA_POINTS_GAINED_IMPG": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Impg\u0027)"
    },
    "ABILITY_ILF_HIT_POINTS_GAINED_IHP2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ihp2\u0027)"
    },
    "ABILITY_ILF_MANA_POINTS_GAINED_IMP2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Imp2\u0027)"
    },
    "ABILITY_ILF_DAMAGE_BONUS_DICE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Idic\u0027)"
    },
    "ABILITY_ILF_ARMOR_PENALTY_IARP": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iarp\u0027)"
    },
    "ABILITY_ILF_ENABLED_ATTACK_INDEX_IOB5": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iob5\u0027)"
    },
    "ABILITY_ILF_LEVELS_GAINED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ilev\u0027)"
    },
    "ABILITY_ILF_MAX_LIFE_GAINED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ilif\u0027)"
    },
    "ABILITY_ILF_MAX_MANA_GAINED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iman\u0027)"
    },
    "ABILITY_ILF_GOLD_GIVEN": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Igol\u0027)"
    },
    "ABILITY_ILF_LUMBER_GIVEN": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ilum\u0027)"
    },
    "ABILITY_ILF_DETECTION_TYPE_IFA1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ifa1\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_ICRE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Icre\u0027)"
    },
    "ABILITY_ILF_MOVEMENT_SPEED_BONUS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Imvb\u0027)"
    },
    "ABILITY_ILF_HIT_POINTS_REGENERATED_PER_SECOND": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ihpr\u0027)"
    },
    "ABILITY_ILF_SIGHT_RANGE_BONUS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Isib\u0027)"
    },
    "ABILITY_ILF_DAMAGE_PER_DURATION": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Icfd\u0027)"
    },
    "ABILITY_ILF_MANA_USED_PER_SECOND": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Icfm\u0027)"
    },
    "ABILITY_ILF_EXTRA_MANA_REQUIRED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Icfx\u0027)"
    },
    "ABILITY_ILF_DETECTION_RADIUS_IDET": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Idet\u0027)"
    },
    "ABILITY_ILF_MANA_LOSS_PER_UNIT_IDIM": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Idim\u0027)"
    },
    "ABILITY_ILF_DAMAGE_TO_SUMMONED_UNITS_IDID": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Idid\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_IREC": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Irec\u0027)"
    },
    "ABILITY_ILF_DELAY_AFTER_DEATH_SECONDS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ircd\u0027)"
    },
    "ABILITY_ILF_RESTORED_LIFE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027irc2\u0027)"
    },
    "ABILITY_ILF_RESTORED_MANA__1_FOR_CURRENT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027irc3\u0027)"
    },
    "ABILITY_ILF_HIT_POINTS_RESTORED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ihps\u0027)"
    },
    "ABILITY_ILF_MANA_POINTS_RESTORED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Imps\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_ITPM": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Itpm\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_CAD1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Cad1\u0027)"
    },
    "ABILITY_ILF_TERRAIN_DEFORMATION_DURATION_MS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Wrs3\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_UNITS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Uds1\u0027)"
    },
    "ABILITY_ILF_DETECTION_TYPE_DET1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Det1\u0027)"
    },
    "ABILITY_ILF_GOLD_COST_PER_STRUCTURE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsp1\u0027)"
    },
    "ABILITY_ILF_LUMBER_COST_PER_USE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsp2\u0027)"
    },
    "ABILITY_ILF_DETECTION_TYPE_NSP3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsp3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SWARM_UNITS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Uls1\u0027)"
    },
    "ABILITY_ILF_MAX_SWARM_UNITS_PER_TARGET": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Uls3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NBA2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nba2\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_NCH1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nch1\u0027)"
    },
    "ABILITY_ILF_ATTACKS_PREVENTED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsi1\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_EFK3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Efk3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_ESV1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Esv1\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_EXH1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027exh1\u0027)"
    },
    "ABILITY_ILF_ITEM_CAPACITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027inv1\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_SPL2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027spl2\u0027)"
    },
    "ABILITY_ILF_ALLOW_WHEN_FULL_IRL3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027irl3\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_DISPELLED_UNITS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027idc3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_LURES": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027imo1\u0027)"
    },
    "ABILITY_ILF_NEW_TIME_OF_DAY_HOUR": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027ict1\u0027)"
    },
    "ABILITY_ILF_NEW_TIME_OF_DAY_MINUTE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027ict2\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_MEC1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027mec1\u0027)"
    },
    "ABILITY_ILF_MINIMUM_SPELLS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027spb3\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_SPELLS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027spb4\u0027)"
    },
    "ABILITY_ILF_DISABLED_ATTACK_INDEX": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027gra3\u0027)"
    },
    "ABILITY_ILF_ENABLED_ATTACK_INDEX_GRA4": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027gra4\u0027)"
    },
    "ABILITY_ILF_MAXIMUM_ATTACKS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027gra5\u0027)"
    },
    "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NPR1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Npr1\u0027)"
    },
    "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NSA1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsa1\u0027)"
    },
    "ABILITY_ILF_ATTACK_MODIFICATION": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iaa1\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_COUNT_NPA5": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Npa5\u0027)"
    },
    "ABILITY_ILF_UPGRADE_LEVELS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Igl1\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NDO2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndo2\u0027)"
    },
    "ABILITY_ILF_BEASTS_PER_SECOND": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nst1\u0027)"
    },
    "ABILITY_ILF_TARGET_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ncl2\u0027)"
    },
    "ABILITY_ILF_OPTIONS": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ncl3\u0027)"
    },
    "ABILITY_ILF_ARMOR_PENALTY_NAB3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nab3\u0027)"
    },
    "ABILITY_ILF_WAVE_COUNT_NHS6": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nhs6\u0027)"
    },
    "ABILITY_ILF_MAX_CREEP_LEVEL_NTM3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ntm3\u0027)"
    },
    "ABILITY_ILF_MISSILE_COUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ncs3\u0027)"
    },
    "ABILITY_ILF_SPLIT_ATTACK_COUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nlm3\u0027)"
    },
    "ABILITY_ILF_GENERATION_COUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nlm6\u0027)"
    },
    "ABILITY_ILF_ROCK_RING_COUNT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nvc1\u0027)"
    },
    "ABILITY_ILF_WAVE_COUNT_NVC2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nvc2\u0027)"
    },
    "ABILITY_ILF_PREFER_HOSTILES_TAU1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Tau1\u0027)"
    },
    "ABILITY_ILF_PREFER_FRIENDLIES_TAU2": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Tau2\u0027)"
    },
    "ABILITY_ILF_MAX_UNITS_TAU3": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Tau3\u0027)"
    },
    "ABILITY_ILF_NUMBER_OF_PULSES": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Tau4\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_HWE1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Hwe1\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_UIN4": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Uin4\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_OSF1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Osf1\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_EFNU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Efnu\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_NBAU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nbau\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_NTOU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ntou\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_ESVU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Esvu\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPES": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nef1\u0027)"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_NDOU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndou\u0027)"
    },
    "ABILITY_ILF_ALTERNATE_FORM_UNIT_EMEU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Emeu\u0027)"
    },
    "ABILITY_ILF_PLAGUE_WARD_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Aplu\u0027)"
    },
    "ABILITY_ILF_ALLOWED_UNIT_TYPE_BTL1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Btl1\u0027)"
    },
    "ABILITY_ILF_NEW_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Cha1\u0027)"
    },
    "ABILITY_ILF_RESULTING_UNIT_TYPE_ENT1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027ent1\u0027)"
    },
    "ABILITY_ILF_CORPSE_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Gydu\u0027)"
    },
    "ABILITY_ILF_ALLOWED_UNIT_TYPE_LOA1": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Loa1\u0027)"
    },
    "ABILITY_ILF_UNIT_TYPE_FOR_LIMIT_CHECK": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Raiu\u0027)"
    },
    "ABILITY_ILF_WARD_UNIT_TYPE_STAU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Stau\u0027)"
    },
    "ABILITY_ILF_EFFECT_ABILITY": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iobu\u0027)"
    },
    "ABILITY_ILF_CONVERSION_UNIT": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ndc2\u0027)"
    },
    "ABILITY_ILF_UNIT_TO_PRESERVE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsl1\u0027)"
    },
    "ABILITY_ILF_UNIT_TYPE_ALLOWED": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Chl1\u0027)"
    },
    "ABILITY_ILF_SWARM_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Ulsu\u0027)"
    },
    "ABILITY_ILF_RESULTING_UNIT_TYPE_COAU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027coau\u0027)"
    },
    "ABILITY_ILF_UNIT_TYPE_EXHU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027exhu\u0027)"
    },
    "ABILITY_ILF_WARD_UNIT_TYPE_HWDU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027hwdu\u0027)"
    },
    "ABILITY_ILF_LURE_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027imou\u0027)"
    },
    "ABILITY_ILF_UNIT_TYPE_IPMU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027ipmu\u0027)"
    },
    "ABILITY_ILF_FACTORY_UNIT_ID": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nsyu\u0027)"
    },
    "ABILITY_ILF_SPAWN_UNIT_ID_NFYU": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nfyu\u0027)"
    },
    "ABILITY_ILF_DESTRUCTIBLE_ID": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Nvcu\u0027)"
    },
    "ABILITY_ILF_UPGRADE_TYPE": {
      "isConstant": true,
      "type": "abilityintegerlevelfield",
      "isArray": false,
      "value": "ConvertAbilityIntegerLevelField(\u0027Iglu\u0027)"
    },
    "ABILITY_RLF_CASTING_TIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027acas\u0027)"
    },
    "ABILITY_RLF_DURATION_NORMAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027adur\u0027)"
    },
    "ABILITY_RLF_DURATION_HERO": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027ahdu\u0027)"
    },
    "ABILITY_RLF_COOLDOWN": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027acdn\u0027)"
    },
    "ABILITY_RLF_AREA_OF_EFFECT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027aare\u0027)"
    },
    "ABILITY_RLF_CAST_RANGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027aran\u0027)"
    },
    "ABILITY_RLF_DAMAGE_HBZ2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbz2\u0027)"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_HBZ4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbz4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_HBZ5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbz5\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_DAMAGE_PER_WAVE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbz6\u0027)"
    },
    "ABILITY_RLF_MANA_REGENERATION_INCREASE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hab1\u0027)"
    },
    "ABILITY_RLF_CASTING_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hmt2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_OWW1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oww1\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_OWW2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oww2\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ocr1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ocr2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_OCR3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ocr3\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_EVADE_OCR4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ocr4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OMI2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Omi2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_OMI3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Omi3\u0027)"
    },
    "ABILITY_RLF_ANIMATION_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Omi4\u0027)"
    },
    "ABILITY_RLF_TRANSITION_TIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Owk1\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OWK2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Owk2\u0027)"
    },
    "ABILITY_RLF_BACKSTAB_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Owk3\u0027)"
    },
    "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_UDC1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Udc1\u0027)"
    },
    "ABILITY_RLF_LIFE_CONVERTED_TO_MANA": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Udp1\u0027)"
    },
    "ABILITY_RLF_LIFE_CONVERTED_TO_LIFE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Udp2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_UAU1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uau1\u0027)"
    },
    "ABILITY_RLF_LIFE_REGENERATION_INCREASE_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uau2\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_EVADE_EEV1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eev1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_INTERVAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eim1\u0027)"
    },
    "ABILITY_RLF_MANA_DRAINED_PER_SECOND_EIM2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eim2\u0027)"
    },
    "ABILITY_RLF_BUFFER_MANA_REQUIRED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eim3\u0027)"
    },
    "ABILITY_RLF_MAX_MANA_DRAINED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Emb1\u0027)"
    },
    "ABILITY_RLF_BOLT_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Emb2\u0027)"
    },
    "ABILITY_RLF_BOLT_LIFETIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Emb3\u0027)"
    },
    "ABILITY_RLF_ALTITUDE_ADJUSTMENT_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eme3\u0027)"
    },
    "ABILITY_RLF_LANDING_DELAY_TIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eme4\u0027)"
    },
    "ABILITY_RLF_ALTERNATE_FORM_HIT_POINT_BONUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eme5\u0027)"
    },
    "ABILITY_RLF_MOVE_SPEED_BONUS_INFO_PANEL_ONLY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncr5\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_BONUS_INFO_PANEL_ONLY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncr6\u0027)"
    },
    "ABILITY_RLF_LIFE_REGENERATION_RATE_PER_SECOND": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027ave5\u0027)"
    },
    "ABILITY_RLF_STUN_DURATION_USL1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Usl1\u0027)"
    },
    "ABILITY_RLF_ATTACK_DAMAGE_STOLEN_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uav1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_UCS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ucs1\u0027)"
    },
    "ABILITY_RLF_MAX_DAMAGE_UCS2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ucs2\u0027)"
    },
    "ABILITY_RLF_DISTANCE_UCS3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ucs3\u0027)"
    },
    "ABILITY_RLF_FINAL_AREA_UCS4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ucs4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_UIN1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uin1\u0027)"
    },
    "ABILITY_RLF_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uin2\u0027)"
    },
    "ABILITY_RLF_IMPACT_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uin3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_TARGET_OCL1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ocl1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_REDUCTION_PER_TARGET": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ocl3\u0027)"
    },
    "ABILITY_RLF_EFFECT_DELAY_OEQ1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oeq1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_TO_BUILDINGS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oeq2\u0027)"
    },
    "ABILITY_RLF_UNITS_SLOWED_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oeq3\u0027)"
    },
    "ABILITY_RLF_FINAL_AREA_OEQ4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oeq4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_EER1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eer1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_TO_ATTACKERS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eah1\u0027)"
    },
    "ABILITY_RLF_LIFE_HEALED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Etq1\u0027)"
    },
    "ABILITY_RLF_HEAL_INTERVAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Etq2\u0027)"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_ETQ3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Etq3\u0027)"
    },
    "ABILITY_RLF_INITIAL_IMMUNITY_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Etq4\u0027)"
    },
    "ABILITY_RLF_MAX_LIFE_DRAINED_PER_SECOND_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Udd1\u0027)"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_UDD2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Udd2\u0027)"
    },
    "ABILITY_RLF_ARMOR_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ufa1\u0027)"
    },
    "ABILITY_RLF_ARMOR_BONUS_UFA2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ufa2\u0027)"
    },
    "ABILITY_RLF_AREA_OF_EFFECT_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ufn1\u0027)"
    },
    "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_UFN2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ufn2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_HFA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfa1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_ESF1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esf1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_INTERVAL_ESF2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esf2\u0027)"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_ESF3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esf3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ear1\u0027)"
    },
    "ABILITY_RLF_DEFENSE_BONUS_HAV1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hav1\u0027)"
    },
    "ABILITY_RLF_HIT_POINT_BONUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hav2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_HAV3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hav3\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_HAV4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hav4\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_BASH": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbh1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_HBH2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbh2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_HBH3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbh3\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_MISS_HBH4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbh4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_HTB1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Htb1\u0027)"
    },
    "ABILITY_RLF_AOE_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Htc1\u0027)"
    },
    "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_HTC2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Htc2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HTC3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Htc3\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HTC4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Htc4\u0027)"
    },
    "ABILITY_RLF_ARMOR_BONUS_HAD1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Had1\u0027)"
    },
    "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_HHB1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hhb1\u0027)"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_HCA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hca1\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_HCA2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hca2\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_HCA3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hca3\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OAE1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oae1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_OAE2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oae2\u0027)"
    },
    "ABILITY_RLF_REINCARNATION_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ore1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_OSH1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Osh1\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_DAMAGE_OSH2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Osh2\u0027)"
    },
    "ABILITY_RLF_DISTANCE_OSH3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Osh3\u0027)"
    },
    "ABILITY_RLF_FINAL_AREA_OSH4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Osh4\u0027)"
    },
    "ABILITY_RLF_GRAPHIC_DELAY_NFD1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nfd1\u0027)"
    },
    "ABILITY_RLF_GRAPHIC_DURATION_NFD2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nfd2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_NFD3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nfd3\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_AMS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ams1\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_AMS2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ams2\u0027)"
    },
    "ABILITY_RLF_AURA_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Apl1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_APL2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Apl2\u0027)"
    },
    "ABILITY_RLF_DURATION_OF_PLAGUE_WARD": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Apl3\u0027)"
    },
    "ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Oar1\u0027)"
    },
    "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_AKB1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Akb1\u0027)"
    },
    "ABILITY_RLF_MANA_LOSS_ADM1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Adm1\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_ADM2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Adm2\u0027)"
    },
    "ABILITY_RLF_EXPANSION_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Bli1\u0027)"
    },
    "ABILITY_RLF_INTERVAL_DURATION_BGM2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Bgm2\u0027)"
    },
    "ABILITY_RLF_RADIUS_OF_MINING_RING": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Bgm4\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_BLO1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Blo1\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_BLO2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Blo2\u0027)"
    },
    "ABILITY_RLF_SCALING_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Blo3\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_PER_SECOND_CAN1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Can1\u0027)"
    },
    "ABILITY_RLF_MAX_HIT_POINTS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Can2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_DEV2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dev2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_UPDATE_FREQUENCY_CHD1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Chd1\u0027)"
    },
    "ABILITY_RLF_ATTACK_UPDATE_FREQUENCY_CHD2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Chd2\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_CHD3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Chd3\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_CRI1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cri1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_CRI2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cri2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_REDUCTION_CRI3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cri3\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_MISS_CRS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Crs1\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_RADIUS_DDA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dda1\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_AMOUNT_DDA2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dda2\u0027)"
    },
    "ABILITY_RLF_PARTIAL_DAMAGE_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dda3\u0027)"
    },
    "ABILITY_RLF_PARTIAL_DAMAGE_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dda4\u0027)"
    },
    "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_SDS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Sds1\u0027)"
    },
    "ABILITY_RLF_MAX_DAMAGE_UCO5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uco5\u0027)"
    },
    "ABILITY_RLF_MOVE_SPEED_BONUS_UCO6": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uco6\u0027)"
    },
    "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_DEF1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_PERCENT_DEF2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_DEF3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def3\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_DEF4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def4\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_DEF5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def5\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_DEFLECT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def6\u0027)"
    },
    "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_PIERCING": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def7\u0027)"
    },
    "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_SPELLS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Def8\u0027)"
    },
    "ABILITY_RLF_RIP_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eat1\u0027)"
    },
    "ABILITY_RLF_EAT_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eat2\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_EAT3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Eat3\u0027)"
    },
    "ABILITY_RLF_AIR_UNIT_LOWER_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ens1\u0027)"
    },
    "ABILITY_RLF_AIR_UNIT_HEIGHT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ens2\u0027)"
    },
    "ABILITY_RLF_MELEE_ATTACK_RANGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ens3\u0027)"
    },
    "ABILITY_RLF_INTERVAL_DURATION_EGM2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Egm2\u0027)"
    },
    "ABILITY_RLF_EFFECT_DELAY_FLA2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Fla2\u0027)"
    },
    "ABILITY_RLF_MINING_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Gld2\u0027)"
    },
    "ABILITY_RLF_RADIUS_OF_GRAVESTONES": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Gyd2\u0027)"
    },
    "ABILITY_RLF_RADIUS_OF_CORPSES": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Gyd3\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_HEA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hea1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_INF1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Inf1\u0027)"
    },
    "ABILITY_RLF_AUTOCAST_RANGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Inf3\u0027)"
    },
    "ABILITY_RLF_LIFE_REGEN_RATE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Inf4\u0027)"
    },
    "ABILITY_RLF_GRAPHIC_DELAY_LIT1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Lit1\u0027)"
    },
    "ABILITY_RLF_GRAPHIC_DURATION_LIT2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Lit2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_LSH1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Lsh1\u0027)"
    },
    "ABILITY_RLF_MANA_GAINED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Mbt1\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_MBT2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Mbt2\u0027)"
    },
    "ABILITY_RLF_AUTOCAST_REQUIREMENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Mbt3\u0027)"
    },
    "ABILITY_RLF_WATER_HEIGHT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Mbt4\u0027)"
    },
    "ABILITY_RLF_ACTIVATION_DELAY_MIN1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Min1\u0027)"
    },
    "ABILITY_RLF_INVISIBILITY_TRANSITION_TIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Min2\u0027)"
    },
    "ABILITY_RLF_ACTIVATION_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Neu1\u0027)"
    },
    "ABILITY_RLF_AMOUNT_REGENERATED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Arm1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_POI1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poi1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_POI2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poi2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POI3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poi3\u0027)"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_POA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poa1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_POA2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poa2\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_POA3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poa3\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POA4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Poa4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_AMPLIFICATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Pos2\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_STOMP_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027War1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_WAR2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027War2\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_RADIUS_WAR3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027War3\u0027)"
    },
    "ABILITY_RLF_HALF_DAMAGE_RADIUS_WAR4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027War4\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_PRG3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Prg3\u0027)"
    },
    "ABILITY_RLF_UNIT_PAUSE_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Prg4\u0027)"
    },
    "ABILITY_RLF_HERO_PAUSE_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Prg5\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_REJ1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rej1\u0027)"
    },
    "ABILITY_RLF_MANA_POINTS_GAINED_REJ2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rej2\u0027)"
    },
    "ABILITY_RLF_MINIMUM_LIFE_REQUIRED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rpb3\u0027)"
    },
    "ABILITY_RLF_MINIMUM_MANA_REQUIRED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rpb4\u0027)"
    },
    "ABILITY_RLF_REPAIR_COST_RATIO": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rep1\u0027)"
    },
    "ABILITY_RLF_REPAIR_TIME_RATIO": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rep2\u0027)"
    },
    "ABILITY_RLF_POWERBUILD_COST": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rep3\u0027)"
    },
    "ABILITY_RLF_POWERBUILD_RATE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rep4\u0027)"
    },
    "ABILITY_RLF_NAVAL_RANGE_BONUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Rep5\u0027)"
    },
    "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_ROA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Roa1\u0027)"
    },
    "ABILITY_RLF_LIFE_REGENERATION_RATE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Roa3\u0027)"
    },
    "ABILITY_RLF_MANA_REGEN": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Roa4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_INCREASE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nbr1\u0027)"
    },
    "ABILITY_RLF_SALVAGE_COST_RATIO": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Sal1\u0027)"
    },
    "ABILITY_RLF_IN_FLIGHT_SIGHT_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esn1\u0027)"
    },
    "ABILITY_RLF_HOVERING_SIGHT_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esn2\u0027)"
    },
    "ABILITY_RLF_HOVERING_HEIGHT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esn3\u0027)"
    },
    "ABILITY_RLF_DURATION_OF_OWLS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esn5\u0027)"
    },
    "ABILITY_RLF_FADE_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Shm1\u0027)"
    },
    "ABILITY_RLF_DAY_NIGHT_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Shm2\u0027)"
    },
    "ABILITY_RLF_ACTION_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Shm3\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SLO1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Slo1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_SLO2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Slo2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_SPO1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Spo1\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SPO2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Spo2\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_SPO3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Spo3\u0027)"
    },
    "ABILITY_RLF_ACTIVATION_DELAY_STA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Sta1\u0027)"
    },
    "ABILITY_RLF_DETECTION_RADIUS_STA2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Sta2\u0027)"
    },
    "ABILITY_RLF_DETONATION_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Sta3\u0027)"
    },
    "ABILITY_RLF_STUN_DURATION_STA4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Sta4\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_BONUS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uhf1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_UHF2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uhf2\u0027)"
    },
    "ABILITY_RLF_LUMBER_PER_INTERVAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Wha1\u0027)"
    },
    "ABILITY_RLF_ART_ATTACHMENT_HEIGHT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Wha3\u0027)"
    },
    "ABILITY_RLF_TELEPORT_AREA_WIDTH": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Wrp1\u0027)"
    },
    "ABILITY_RLF_TELEPORT_AREA_HEIGHT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Wrp2\u0027)"
    },
    "ABILITY_RLF_LIFE_STOLEN_PER_ATTACK": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ivam\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_IDAM": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Idam\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_HIT_UNITS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Iob2\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_HIT_HEROS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Iob3\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_HIT_SUMMONS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Iob4\u0027)"
    },
    "ABILITY_RLF_DELAY_FOR_TARGET_EFFECT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Idel\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OF_NORMAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Iild\u0027)"
    },
    "ABILITY_RLF_DAMAGE_RECEIVED_MULTIPLIER": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Iilw\u0027)"
    },
    "ABILITY_RLF_MANA_REGENERATION_BONUS_AS_FRACTION_OF_NORMAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Imrp\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_ISPI": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ispi\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_IDPS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Idps\u0027)"
    },
    "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_CAC1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cac1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_COR1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cor1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Isx1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_WRS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Wrs1\u0027)"
    },
    "ABILITY_RLF_TERRAIN_DEFORMATION_AMPLITUDE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Wrs2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_CTC1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ctc1\u0027)"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_TO_TARGET": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ctc2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_CTC3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ctc3\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_CTC4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ctc4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_CTB1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ctb1\u0027)"
    },
    "ABILITY_RLF_CASTING_DELAY_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uds2\u0027)"
    },
    "ABILITY_RLF_MANA_LOSS_PER_UNIT_DTN1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dtn1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_DTN2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Dtn2\u0027)"
    },
    "ABILITY_RLF_TRANSITION_TIME_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ivs1\u0027)"
    },
    "ABILITY_RLF_MANA_DRAINED_PER_SECOND_NMR1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nmr1\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_REDUCE_DAMAGE_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ssk1\u0027)"
    },
    "ABILITY_RLF_MINIMUM_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ssk2\u0027)"
    },
    "ABILITY_RLF_IGNORED_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ssk3\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_DEALT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfs1\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_INTERVAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfs2\u0027)"
    },
    "ABILITY_RLF_HALF_DAMAGE_DEALT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfs3\u0027)"
    },
    "ABILITY_RLF_HALF_DAMAGE_INTERVAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfs4\u0027)"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_HFS5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfs5\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_DAMAGE_HFS6": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hfs6\u0027)"
    },
    "ABILITY_RLF_MANA_PER_HIT_POINT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nms1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_ABSORBED_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nms2\u0027)"
    },
    "ABILITY_RLF_WAVE_DISTANCE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uim1\u0027)"
    },
    "ABILITY_RLF_WAVE_TIME_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uim2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DEALT_UIM3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uim3\u0027)"
    },
    "ABILITY_RLF_AIR_TIME_SECONDS_UIM4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uim4\u0027)"
    },
    "ABILITY_RLF_UNIT_RELEASE_INTERVAL_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uls2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_RETURN_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uls4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_RETURN_THRESHOLD": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uls5\u0027)"
    },
    "ABILITY_RLF_RETURNED_DAMAGE_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uts1\u0027)"
    },
    "ABILITY_RLF_RECEIVED_DAMAGE_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uts2\u0027)"
    },
    "ABILITY_RLF_DEFENSE_BONUS_UTS3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Uts3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_NBA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nba1\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NBA3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nba3\u0027)"
    },
    "ABILITY_RLF_MANA_PER_SUMMONED_HITPOINT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cmg2\u0027)"
    },
    "ABILITY_RLF_CHARGE_FOR_CURRENT_LIFE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Cmg3\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_DRAINED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr1\u0027)"
    },
    "ABILITY_RLF_MANA_POINTS_DRAINED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr2\u0027)"
    },
    "ABILITY_RLF_DRAIN_INTERVAL_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr3\u0027)"
    },
    "ABILITY_RLF_LIFE_TRANSFERRED_PER_SECOND": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr4\u0027)"
    },
    "ABILITY_RLF_MANA_TRANSFERRED_PER_SECOND": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr5\u0027)"
    },
    "ABILITY_RLF_BONUS_LIFE_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr6\u0027)"
    },
    "ABILITY_RLF_BONUS_LIFE_DECAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr7\u0027)"
    },
    "ABILITY_RLF_BONUS_MANA_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr8\u0027)"
    },
    "ABILITY_RLF_BONUS_MANA_DECAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndr9\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_MISS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsi2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_MODIFIER": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsi3\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_MODIFIER": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsi4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_TDG1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tdg1\u0027)"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_TDG2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tdg2\u0027)"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_PER_SECOND": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tdg3\u0027)"
    },
    "ABILITY_RLF_SMALL_DAMAGE_RADIUS_TDG4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tdg4\u0027)"
    },
    "ABILITY_RLF_SMALL_DAMAGE_PER_SECOND": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tdg5\u0027)"
    },
    "ABILITY_RLF_AIR_TIME_SECONDS_TSP1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tsp1\u0027)"
    },
    "ABILITY_RLF_MINIMUM_HIT_INTERVAL_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tsp2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_NBF5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nbf5\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_RANGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ebl1\u0027)"
    },
    "ABILITY_RLF_MINIMUM_RANGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ebl2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_TARGET_EFK1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Efk1\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_TOTAL_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Efk2\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_SPEED_ADJUSTMENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Efk4\u0027)"
    },
    "ABILITY_RLF_DECAYING_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esh1\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_ESH2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esh2\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_ESH3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esh3\u0027)"
    },
    "ABILITY_RLF_DECAY_POWER": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esh4\u0027)"
    },
    "ABILITY_RLF_INITIAL_DAMAGE_ESH5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Esh5\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_LIFE_ABSORBED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027abs1\u0027)"
    },
    "ABILITY_RLF_MAXIMUM_MANA_ABSORBED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027abs2\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_BSK1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027bsk1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_BSK2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027bsk2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_TAKEN_INCREASE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027bsk3\u0027)"
    },
    "ABILITY_RLF_LIFE_PER_UNIT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027dvm1\u0027)"
    },
    "ABILITY_RLF_MANA_PER_UNIT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027dvm2\u0027)"
    },
    "ABILITY_RLF_LIFE_PER_BUFF": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027dvm3\u0027)"
    },
    "ABILITY_RLF_MANA_PER_BUFF": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027dvm4\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_DVM5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027dvm5\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_FAK1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fak1\u0027)"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_FACTOR_FAK2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fak2\u0027)"
    },
    "ABILITY_RLF_SMALL_DAMAGE_FACTOR_FAK3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fak3\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_RADIUS_FAK4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fak4\u0027)"
    },
    "ABILITY_RLF_HALF_DAMAGE_RADIUS_FAK5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fak5\u0027)"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_PER_SECOND": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027liq1\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_LIQ2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027liq2\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_LIQ3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027liq3\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mim1\u0027)"
    },
    "ABILITY_RLF_UNIT_DAMAGE_PER_MANA_POINT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mfl1\u0027)"
    },
    "ABILITY_RLF_HERO_DAMAGE_PER_MANA_POINT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mfl2\u0027)"
    },
    "ABILITY_RLF_UNIT_MAXIMUM_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mfl3\u0027)"
    },
    "ABILITY_RLF_HERO_MAXIMUM_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mfl4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_COOLDOWN": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mfl5\u0027)"
    },
    "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_SPL1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027spl1\u0027)"
    },
    "ABILITY_RLF_LIFE_REGENERATED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027irl1\u0027)"
    },
    "ABILITY_RLF_MANA_REGENERATED": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027irl2\u0027)"
    },
    "ABILITY_RLF_MANA_LOSS_PER_UNIT_IDC1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027idc1\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_IDC2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027idc2\u0027)"
    },
    "ABILITY_RLF_ACTIVATION_DELAY_IMO2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027imo2\u0027)"
    },
    "ABILITY_RLF_LURE_INTERVAL_SECONDS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027imo3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_ISR1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027isr1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_REDUCTION_ISR2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027isr2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_IPV1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027ipv1\u0027)"
    },
    "ABILITY_RLF_LIFE_STEAL_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027ipv2\u0027)"
    },
    "ABILITY_RLF_LIFE_RESTORED_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027ast1\u0027)"
    },
    "ABILITY_RLF_MANA_RESTORED_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027ast2\u0027)"
    },
    "ABILITY_RLF_ATTACH_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027gra1\u0027)"
    },
    "ABILITY_RLF_REMOVE_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027gra2\u0027)"
    },
    "ABILITY_RLF_HERO_REGENERATION_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsa2\u0027)"
    },
    "ABILITY_RLF_UNIT_REGENERATION_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsa3\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_NSA4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsa4\u0027)"
    },
    "ABILITY_RLF_HIT_POINTS_PER_SECOND_NSA5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsa5\u0027)"
    },
    "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_IXS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ixs1\u0027)"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_IXS2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ixs2\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Npa6\u0027)"
    },
    "ABILITY_RLF_SHIELD_COOLDOWN_TIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nse1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_NDO1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndo1\u0027)"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NDO3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ndo3\u0027)"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_FLK1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027flk1\u0027)"
    },
    "ABILITY_RLF_SMALL_DAMAGE_RADIUS_FLK2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027flk2\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_AMOUNT_FLK3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027flk3\u0027)"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027flk4\u0027)"
    },
    "ABILITY_RLF_SMALL_DAMAGE_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027flk5\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HBN1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbn1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HBN2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Hbn2\u0027)"
    },
    "ABILITY_RLF_MAX_MANA_DRAINED_UNITS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fbk1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_RATIO_UNITS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fbk2\u0027)"
    },
    "ABILITY_RLF_MAX_MANA_DRAINED_HEROS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fbk3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_RATIO_HEROS_PERCENT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fbk4\u0027)"
    },
    "ABILITY_RLF_SUMMONED_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027fbk5\u0027)"
    },
    "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_NCA1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027nca1\u0027)"
    },
    "ABILITY_RLF_INITIAL_DAMAGE_PXF1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027pxf1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_PXF2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027pxf2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_MLS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027mls1\u0027)"
    },
    "ABILITY_RLF_BEAST_COLLISION_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nst2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_AMOUNT_NST3": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nst3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_RADIUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nst4\u0027)"
    },
    "ABILITY_RLF_DAMAGE_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nst5\u0027)"
    },
    "ABILITY_RLF_FOLLOW_THROUGH_TIME": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncl1\u0027)"
    },
    "ABILITY_RLF_ART_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncl4\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NAB1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nab1\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NAB2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nab2\u0027)"
    },
    "ABILITY_RLF_PRIMARY_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nab4\u0027)"
    },
    "ABILITY_RLF_SECONDARY_DAMAGE": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nab5\u0027)"
    },
    "ABILITY_RLF_DAMAGE_INTERVAL_NAB6": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nab6\u0027)"
    },
    "ABILITY_RLF_GOLD_COST_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ntm1\u0027)"
    },
    "ABILITY_RLF_LUMBER_COST_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ntm2\u0027)"
    },
    "ABILITY_RLF_MOVE_SPEED_BONUS_NEG1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Neg1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_BONUS_NEG2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Neg2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_AMOUNT_NCS1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncs1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_INTERVAL_NCS2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncs2\u0027)"
    },
    "ABILITY_RLF_MAX_DAMAGE_NCS4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncs4\u0027)"
    },
    "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NCS5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncs5\u0027)"
    },
    "ABILITY_RLF_EFFECT_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Ncs6\u0027)"
    },
    "ABILITY_RLF_SPAWN_INTERVAL_NSY1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsy1\u0027)"
    },
    "ABILITY_RLF_SPAWN_UNIT_DURATION": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsy3\u0027)"
    },
    "ABILITY_RLF_SPAWN_UNIT_OFFSET": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsy4\u0027)"
    },
    "ABILITY_RLF_LEASH_RANGE_NSY5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nsy5\u0027)"
    },
    "ABILITY_RLF_SPAWN_INTERVAL_NFY1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nfy1\u0027)"
    },
    "ABILITY_RLF_LEASH_RANGE_NFY2": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nfy2\u0027)"
    },
    "ABILITY_RLF_CHANCE_TO_DEMOLISH": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nde1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_BUILDINGS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nde2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_UNITS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nde3\u0027)"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_HEROES": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nde4\u0027)"
    },
    "ABILITY_RLF_BONUS_DAMAGE_MULTIPLIER": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nic1\u0027)"
    },
    "ABILITY_RLF_DEATH_DAMAGE_FULL_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nic2\u0027)"
    },
    "ABILITY_RLF_DEATH_DAMAGE_FULL_AREA": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nic3\u0027)"
    },
    "ABILITY_RLF_DEATH_DAMAGE_HALF_AMOUNT": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nic4\u0027)"
    },
    "ABILITY_RLF_DEATH_DAMAGE_HALF_AREA": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nic5\u0027)"
    },
    "ABILITY_RLF_DEATH_DAMAGE_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nic6\u0027)"
    },
    "ABILITY_RLF_DAMAGE_AMOUNT_NSO1": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nso1\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PERIOD": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nso2\u0027)"
    },
    "ABILITY_RLF_DAMAGE_PENALTY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nso3\u0027)"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NSO4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nso4\u0027)"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NSO5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nso5\u0027)"
    },
    "ABILITY_RLF_SPLIT_DELAY": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nlm2\u0027)"
    },
    "ABILITY_RLF_MAX_HITPOINT_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nlm4\u0027)"
    },
    "ABILITY_RLF_LIFE_DURATION_SPLIT_BONUS": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nlm5\u0027)"
    },
    "ABILITY_RLF_WAVE_INTERVAL": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nvc3\u0027)"
    },
    "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NVC4": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nvc4\u0027)"
    },
    "ABILITY_RLF_FULL_DAMAGE_AMOUNT_NVC5": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nvc5\u0027)"
    },
    "ABILITY_RLF_HALF_DAMAGE_FACTOR": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Nvc6\u0027)"
    },
    "ABILITY_RLF_INTERVAL_BETWEEN_PULSES": {
      "isConstant": true,
      "type": "abilityreallevelfield",
      "isArray": false,
      "value": "ConvertAbilityRealLevelField(\u0027Tau5\u0027)"
    },
    "ABILITY_BLF_PERCENT_BONUS_HAB2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Hab2\u0027)"
    },
    "ABILITY_BLF_USE_TELEPORT_CLUSTERING_HMT3": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Hmt3\u0027)"
    },
    "ABILITY_BLF_NEVER_MISS_OCR5": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ocr5\u0027)"
    },
    "ABILITY_BLF_EXCLUDE_ITEM_DAMAGE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ocr6\u0027)"
    },
    "ABILITY_BLF_BACKSTAB_DAMAGE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Owk4\u0027)"
    },
    "ABILITY_BLF_INHERIT_UPGRADES_UAN3": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Uan3\u0027)"
    },
    "ABILITY_BLF_MANA_CONVERSION_AS_PERCENT": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Udp3\u0027)"
    },
    "ABILITY_BLF_LIFE_CONVERSION_AS_PERCENT": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Udp4\u0027)"
    },
    "ABILITY_BLF_LEAVE_TARGET_ALIVE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Udp5\u0027)"
    },
    "ABILITY_BLF_PERCENT_BONUS_UAU3": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Uau3\u0027)"
    },
    "ABILITY_BLF_DAMAGE_IS_PERCENT_RECEIVED": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Eah2\u0027)"
    },
    "ABILITY_BLF_MELEE_BONUS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ear2\u0027)"
    },
    "ABILITY_BLF_RANGED_BONUS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ear3\u0027)"
    },
    "ABILITY_BLF_FLAT_BONUS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ear4\u0027)"
    },
    "ABILITY_BLF_NEVER_MISS_HBH5": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Hbh5\u0027)"
    },
    "ABILITY_BLF_PERCENT_BONUS_HAD2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Had2\u0027)"
    },
    "ABILITY_BLF_CAN_DEACTIVATE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Hds1\u0027)"
    },
    "ABILITY_BLF_RAISED_UNITS_ARE_INVULNERABLE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Hre2\u0027)"
    },
    "ABILITY_BLF_PERCENTAGE_OAR2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Oar2\u0027)"
    },
    "ABILITY_BLF_SUMMON_BUSY_UNITS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Btl2\u0027)"
    },
    "ABILITY_BLF_CREATES_BLIGHT": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Bli2\u0027)"
    },
    "ABILITY_BLF_EXPLODES_ON_DEATH": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Sds6\u0027)"
    },
    "ABILITY_BLF_ALWAYS_AUTOCAST_FAE2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Fae2\u0027)"
    },
    "ABILITY_BLF_REGENERATE_ONLY_AT_NIGHT": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Mbt5\u0027)"
    },
    "ABILITY_BLF_SHOW_SELECT_UNIT_BUTTON": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Neu3\u0027)"
    },
    "ABILITY_BLF_SHOW_UNIT_INDICATOR": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Neu4\u0027)"
    },
    "ABILITY_BLF_CHARGE_OWNING_PLAYER": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ans6\u0027)"
    },
    "ABILITY_BLF_PERCENTAGE_ARM2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Arm2\u0027)"
    },
    "ABILITY_BLF_TARGET_IS_INVULNERABLE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Pos3\u0027)"
    },
    "ABILITY_BLF_TARGET_IS_MAGIC_IMMUNE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Pos4\u0027)"
    },
    "ABILITY_BLF_KILL_ON_CASTER_DEATH": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ucb6\u0027)"
    },
    "ABILITY_BLF_NO_TARGET_REQUIRED_REJ4": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Rej4\u0027)"
    },
    "ABILITY_BLF_ACCEPTS_GOLD": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Rtn1\u0027)"
    },
    "ABILITY_BLF_ACCEPTS_LUMBER": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Rtn2\u0027)"
    },
    "ABILITY_BLF_PREFER_HOSTILES_ROA5": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Roa5\u0027)"
    },
    "ABILITY_BLF_PREFER_FRIENDLIES_ROA6": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Roa6\u0027)"
    },
    "ABILITY_BLF_ROOTED_TURNING": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Roo3\u0027)"
    },
    "ABILITY_BLF_ALWAYS_AUTOCAST_SLO3": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Slo3\u0027)"
    },
    "ABILITY_BLF_HIDE_BUTTON": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ihid\u0027)"
    },
    "ABILITY_BLF_USE_TELEPORT_CLUSTERING_ITP2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Itp2\u0027)"
    },
    "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Eth1\u0027)"
    },
    "ABILITY_BLF_DOES_NOT_BLOCK_BUILDINGS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Eth2\u0027)"
    },
    "ABILITY_BLF_AUTO_ACQUIRE_ATTACK_TARGETS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Gho1\u0027)"
    },
    "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS_GHO2": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Gho2\u0027)"
    },
    "ABILITY_BLF_DO_NOT_BLOCK_BUILDINGS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Gho3\u0027)"
    },
    "ABILITY_BLF_INCLUDE_RANGED_DAMAGE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ssk4\u0027)"
    },
    "ABILITY_BLF_INCLUDE_MELEE_DAMAGE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ssk5\u0027)"
    },
    "ABILITY_BLF_MOVE_TO_PARTNER": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027coa2\u0027)"
    },
    "ABILITY_BLF_CAN_BE_DISPELLED": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027cyc1\u0027)"
    },
    "ABILITY_BLF_IGNORE_FRIENDLY_BUFFS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027dvm6\u0027)"
    },
    "ABILITY_BLF_DROP_ITEMS_ON_DEATH": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027inv2\u0027)"
    },
    "ABILITY_BLF_CAN_USE_ITEMS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027inv3\u0027)"
    },
    "ABILITY_BLF_CAN_GET_ITEMS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027inv4\u0027)"
    },
    "ABILITY_BLF_CAN_DROP_ITEMS": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027inv5\u0027)"
    },
    "ABILITY_BLF_REPAIRS_ALLOWED": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027liq4\u0027)"
    },
    "ABILITY_BLF_CASTER_ONLY_SPLASH": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027mfl6\u0027)"
    },
    "ABILITY_BLF_NO_TARGET_REQUIRED_IRL4": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027irl4\u0027)"
    },
    "ABILITY_BLF_DISPEL_ON_ATTACK": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027irl5\u0027)"
    },
    "ABILITY_BLF_AMOUNT_IS_RAW_VALUE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027ipv3\u0027)"
    },
    "ABILITY_BLF_SHARED_SPELL_COOLDOWN": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027spb2\u0027)"
    },
    "ABILITY_BLF_SLEEP_ONCE": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027sla1\u0027)"
    },
    "ABILITY_BLF_ALLOW_ON_ANY_PLAYER_SLOT": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027sla2\u0027)"
    },
    "ABILITY_BLF_DISABLE_OTHER_ABILITIES": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ncl5\u0027)"
    },
    "ABILITY_BLF_ALLOW_BOUNTY": {
      "isConstant": true,
      "type": "abilitybooleanlevelfield",
      "isArray": false,
      "value": "ConvertAbilityBooleanLevelField(\u0027Ntm4\u0027)"
    },
    "ABILITY_SLF_ICON_NORMAL": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027aart\u0027)"
    },
    "ABILITY_SLF_CASTER": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027acat\u0027)"
    },
    "ABILITY_SLF_TARGET": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027atat\u0027)"
    },
    "ABILITY_SLF_SPECIAL": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027asat\u0027)"
    },
    "ABILITY_SLF_EFFECT": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027aeat\u0027)"
    },
    "ABILITY_SLF_AREA_EFFECT": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027aaea\u0027)"
    },
    "ABILITY_SLF_LIGHTNING_EFFECTS": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027alig\u0027)"
    },
    "ABILITY_SLF_MISSILE_ART": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027amat\u0027)"
    },
    "ABILITY_SLF_TOOLTIP_LEARN": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027aret\u0027)"
    },
    "ABILITY_SLF_TOOLTIP_LEARN_EXTENDED": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027arut\u0027)"
    },
    "ABILITY_SLF_TOOLTIP_NORMAL": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027atp1\u0027)"
    },
    "ABILITY_SLF_TOOLTIP_TURN_OFF": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027aut1\u0027)"
    },
    "ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027aub1\u0027)"
    },
    "ABILITY_SLF_TOOLTIP_TURN_OFF_EXTENDED": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027auu1\u0027)"
    },
    "ABILITY_SLF_NORMAL_FORM_UNIT_EME1": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Eme1\u0027)"
    },
    "ABILITY_SLF_SPAWNED_UNITS": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ndp1\u0027)"
    },
    "ABILITY_SLF_ABILITY_FOR_UNIT_CREATION": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Nrc1\u0027)"
    },
    "ABILITY_SLF_NORMAL_FORM_UNIT_MIL1": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Mil1\u0027)"
    },
    "ABILITY_SLF_ALTERNATE_FORM_UNIT_MIL2": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Mil2\u0027)"
    },
    "ABILITY_SLF_BASE_ORDER_ID_ANS5": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ans5\u0027)"
    },
    "ABILITY_SLF_MORPH_UNITS_GROUND": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ply2\u0027)"
    },
    "ABILITY_SLF_MORPH_UNITS_AIR": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ply3\u0027)"
    },
    "ABILITY_SLF_MORPH_UNITS_AMPHIBIOUS": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ply4\u0027)"
    },
    "ABILITY_SLF_MORPH_UNITS_WATER": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ply5\u0027)"
    },
    "ABILITY_SLF_UNIT_TYPE_ONE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Rai3\u0027)"
    },
    "ABILITY_SLF_UNIT_TYPE_TWO": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Rai4\u0027)"
    },
    "ABILITY_SLF_UNIT_TYPE_SOD2": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Sod2\u0027)"
    },
    "ABILITY_SLF_SUMMON_1_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ist1\u0027)"
    },
    "ABILITY_SLF_SUMMON_2_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ist2\u0027)"
    },
    "ABILITY_SLF_RACE_TO_CONVERT": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ndc1\u0027)"
    },
    "ABILITY_SLF_PARTNER_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027coa1\u0027)"
    },
    "ABILITY_SLF_PARTNER_UNIT_TYPE_ONE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027dcp1\u0027)"
    },
    "ABILITY_SLF_PARTNER_UNIT_TYPE_TWO": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027dcp2\u0027)"
    },
    "ABILITY_SLF_REQUIRED_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027tpi1\u0027)"
    },
    "ABILITY_SLF_CONVERTED_UNIT_TYPE": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027tpi2\u0027)"
    },
    "ABILITY_SLF_SPELL_LIST": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027spb1\u0027)"
    },
    "ABILITY_SLF_BASE_ORDER_ID_SPB5": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027spb5\u0027)"
    },
    "ABILITY_SLF_BASE_ORDER_ID_NCL6": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Ncl6\u0027)"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_1": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Neg3\u0027)"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_2": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Neg4\u0027)"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_3": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Neg5\u0027)"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_4": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Neg6\u0027)"
    },
    "ABILITY_SLF_SPAWN_UNIT_ID_NSY2": {
      "isConstant": true,
      "type": "abilitystringlevelfield",
      "isArray": false,
      "value": "ConvertAbilityStringLevelField(\u0027Nsy2\u0027)"
    },
    "ITEM_IF_LEVEL": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027ilev\u0027)"
    },
    "ITEM_IF_NUMBER_OF_CHARGES": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027iuse\u0027)"
    },
    "ITEM_IF_COOLDOWN_GROUP": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027icid\u0027)"
    },
    "ITEM_IF_MAX_HIT_POINTS": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027ihtp\u0027)"
    },
    "ITEM_IF_HIT_POINTS": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027ihpc\u0027)"
    },
    "ITEM_IF_PRIORITY": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027ipri\u0027)"
    },
    "ITEM_IF_ARMOR_TYPE": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027iarm\u0027)"
    },
    "ITEM_IF_TINTING_COLOR_RED": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027iclr\u0027)"
    },
    "ITEM_IF_TINTING_COLOR_GREEN": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027iclg\u0027)"
    },
    "ITEM_IF_TINTING_COLOR_BLUE": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027iclb\u0027)"
    },
    "ITEM_IF_TINTING_COLOR_ALPHA": {
      "isConstant": true,
      "type": "itemintegerfield",
      "isArray": false,
      "value": "ConvertItemIntegerField(\u0027ical\u0027)"
    },
    "ITEM_RF_SCALING_VALUE": {
      "isConstant": true,
      "type": "itemrealfield",
      "isArray": false,
      "value": "ConvertItemRealField(\u0027isca\u0027)"
    },
    "ITEM_BF_DROPPED_WHEN_CARRIER_DIES": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027idrp\u0027)"
    },
    "ITEM_BF_CAN_BE_DROPPED": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027idro\u0027)"
    },
    "ITEM_BF_PERISHABLE": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027iper\u0027)"
    },
    "ITEM_BF_INCLUDE_AS_RANDOM_CHOICE": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027iprn\u0027)"
    },
    "ITEM_BF_USE_AUTOMATICALLY_WHEN_ACQUIRED": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027ipow\u0027)"
    },
    "ITEM_BF_CAN_BE_SOLD_TO_MERCHANTS": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027ipaw\u0027)"
    },
    "ITEM_BF_ACTIVELY_USED": {
      "isConstant": true,
      "type": "itembooleanfield",
      "isArray": false,
      "value": "ConvertItemBooleanField(\u0027iusa\u0027)"
    },
    "ITEM_SF_MODEL_USED": {
      "isConstant": true,
      "type": "itemstringfield",
      "isArray": false,
      "value": "ConvertItemStringField(\u0027ifil\u0027)"
    },
    "UNIT_IF_DEFENSE_TYPE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027udty\u0027)"
    },
    "UNIT_IF_ARMOR_TYPE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uarm\u0027)"
    },
    "UNIT_IF_LOOPING_FADE_IN_RATE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ulfi\u0027)"
    },
    "UNIT_IF_LOOPING_FADE_OUT_RATE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ulfo\u0027)"
    },
    "UNIT_IF_AGILITY": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uagc\u0027)"
    },
    "UNIT_IF_INTELLIGENCE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uinc\u0027)"
    },
    "UNIT_IF_STRENGTH": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ustc\u0027)"
    },
    "UNIT_IF_AGILITY_PERMANENT": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uagm\u0027)"
    },
    "UNIT_IF_INTELLIGENCE_PERMANENT": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uinm\u0027)"
    },
    "UNIT_IF_STRENGTH_PERMANENT": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ustm\u0027)"
    },
    "UNIT_IF_AGILITY_WITH_BONUS": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uagb\u0027)"
    },
    "UNIT_IF_INTELLIGENCE_WITH_BONUS": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uinb\u0027)"
    },
    "UNIT_IF_STRENGTH_WITH_BONUS": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ustb\u0027)"
    },
    "UNIT_IF_GOLD_BOUNTY_AWARDED_NUMBER_OF_DICE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ubdi\u0027)"
    },
    "UNIT_IF_GOLD_BOUNTY_AWARDED_BASE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ubba\u0027)"
    },
    "UNIT_IF_GOLD_BOUNTY_AWARDED_SIDES_PER_DIE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ubsi\u0027)"
    },
    "UNIT_IF_LUMBER_BOUNTY_AWARDED_NUMBER_OF_DICE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ulbd\u0027)"
    },
    "UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ulba\u0027)"
    },
    "UNIT_IF_LUMBER_BOUNTY_AWARDED_SIDES_PER_DIE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ulbs\u0027)"
    },
    "UNIT_IF_LEVEL": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ulev\u0027)"
    },
    "UNIT_IF_FORMATION_RANK": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ufor\u0027)"
    },
    "UNIT_IF_ORIENTATION_INTERPOLATION": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uori\u0027)"
    },
    "UNIT_IF_ELEVATION_SAMPLE_POINTS": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uept\u0027)"
    },
    "UNIT_IF_TINTING_COLOR_RED": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uclr\u0027)"
    },
    "UNIT_IF_TINTING_COLOR_GREEN": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uclg\u0027)"
    },
    "UNIT_IF_TINTING_COLOR_BLUE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uclb\u0027)"
    },
    "UNIT_IF_TINTING_COLOR_ALPHA": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027ucal\u0027)"
    },
    "UNIT_IF_MOVE_TYPE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027umvt\u0027)"
    },
    "UNIT_IF_TARGETED_AS": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027utar\u0027)"
    },
    "UNIT_IF_UNIT_CLASSIFICATION": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027utyp\u0027)"
    },
    "UNIT_IF_HIT_POINTS_REGENERATION_TYPE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027uhrt\u0027)"
    },
    "UNIT_IF_PLACEMENT_PREVENTED_BY": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027upar\u0027)"
    },
    "UNIT_IF_PRIMARY_ATTRIBUTE": {
      "isConstant": true,
      "type": "unitintegerfield",
      "isArray": false,
      "value": "ConvertUnitIntegerField(\u0027upra\u0027)"
    },
    "UNIT_RF_STRENGTH_PER_LEVEL": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ustp\u0027)"
    },
    "UNIT_RF_AGILITY_PER_LEVEL": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uagp\u0027)"
    },
    "UNIT_RF_INTELLIGENCE_PER_LEVEL": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uinp\u0027)"
    },
    "UNIT_RF_HIT_POINTS_REGENERATION_RATE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uhpr\u0027)"
    },
    "UNIT_RF_MANA_REGENERATION": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027umpr\u0027)"
    },
    "UNIT_RF_DEATH_TIME": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027udtm\u0027)"
    },
    "UNIT_RF_FLY_HEIGHT": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ufyh\u0027)"
    },
    "UNIT_RF_TURN_RATE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027umvr\u0027)"
    },
    "UNIT_RF_ELEVATION_SAMPLE_RADIUS": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uerd\u0027)"
    },
    "UNIT_RF_FOG_OF_WAR_SAMPLE_RADIUS": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ufrd\u0027)"
    },
    "UNIT_RF_MAXIMUM_PITCH_ANGLE_DEGREES": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027umxp\u0027)"
    },
    "UNIT_RF_MAXIMUM_ROLL_ANGLE_DEGREES": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027umxr\u0027)"
    },
    "UNIT_RF_SCALING_VALUE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027usca\u0027)"
    },
    "UNIT_RF_ANIMATION_RUN_SPEED": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027urun\u0027)"
    },
    "UNIT_RF_SELECTION_SCALE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ussc\u0027)"
    },
    "UNIT_RF_SELECTION_CIRCLE_HEIGHT": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uslz\u0027)"
    },
    "UNIT_RF_SHADOW_IMAGE_HEIGHT": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ushh\u0027)"
    },
    "UNIT_RF_SHADOW_IMAGE_WIDTH": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ushw\u0027)"
    },
    "UNIT_RF_SHADOW_IMAGE_CENTER_X": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ushx\u0027)"
    },
    "UNIT_RF_SHADOW_IMAGE_CENTER_Y": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ushy\u0027)"
    },
    "UNIT_RF_ANIMATION_WALK_SPEED": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uwal\u0027)"
    },
    "UNIT_RF_DEFENSE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027udfc\u0027)"
    },
    "UNIT_RF_SIGHT_RADIUS": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027usir\u0027)"
    },
    "UNIT_RF_PRIORITY": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027upri\u0027)"
    },
    "UNIT_RF_SPEED": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027umvc\u0027)"
    },
    "UNIT_RF_OCCLUDER_HEIGHT": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uocc\u0027)"
    },
    "UNIT_RF_HP": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uhpc\u0027)"
    },
    "UNIT_RF_MANA": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027umpc\u0027)"
    },
    "UNIT_RF_ACQUISITION_RANGE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uacq\u0027)"
    },
    "UNIT_RF_CAST_BACK_SWING": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ucbs\u0027)"
    },
    "UNIT_RF_CAST_POINT": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027ucpt\u0027)"
    },
    "UNIT_RF_MINIMUM_ATTACK_RANGE": {
      "isConstant": true,
      "type": "unitrealfield",
      "isArray": false,
      "value": "ConvertUnitRealField(\u0027uamn\u0027)"
    },
    "UNIT_BF_RAISABLE": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027urai\u0027)"
    },
    "UNIT_BF_DECAYABLE": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027udec\u0027)"
    },
    "UNIT_BF_IS_A_BUILDING": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027ubdg\u0027)"
    },
    "UNIT_BF_USE_EXTENDED_LINE_OF_SIGHT": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027ulos\u0027)"
    },
    "UNIT_BF_NEUTRAL_BUILDING_SHOWS_MINIMAP_ICON": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027unbm\u0027)"
    },
    "UNIT_BF_HERO_HIDE_HERO_INTERFACE_ICON": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027uhhb\u0027)"
    },
    "UNIT_BF_HERO_HIDE_HERO_MINIMAP_DISPLAY": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027uhhm\u0027)"
    },
    "UNIT_BF_HERO_HIDE_HERO_DEATH_MESSAGE": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027uhhd\u0027)"
    },
    "UNIT_BF_HIDE_MINIMAP_DISPLAY": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027uhom\u0027)"
    },
    "UNIT_BF_SCALE_PROJECTILES": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027uscb\u0027)"
    },
    "UNIT_BF_SELECTION_CIRCLE_ON_WATER": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027usew\u0027)"
    },
    "UNIT_BF_HAS_WATER_SHADOW": {
      "isConstant": true,
      "type": "unitbooleanfield",
      "isArray": false,
      "value": "ConvertUnitBooleanField(\u0027ushr\u0027)"
    },
    "UNIT_SF_NAME": {
      "isConstant": true,
      "type": "unitstringfield",
      "isArray": false,
      "value": "ConvertUnitStringField(\u0027unam\u0027)"
    },
    "UNIT_SF_PROPER_NAMES": {
      "isConstant": true,
      "type": "unitstringfield",
      "isArray": false,
      "value": "ConvertUnitStringField(\u0027upro\u0027)"
    },
    "UNIT_SF_GROUND_TEXTURE": {
      "isConstant": true,
      "type": "unitstringfield",
      "isArray": false,
      "value": "ConvertUnitStringField(\u0027uubs\u0027)"
    },
    "UNIT_SF_SHADOW_IMAGE_UNIT": {
      "isConstant": true,
      "type": "unitstringfield",
      "isArray": false,
      "value": "ConvertUnitStringField(\u0027ushu\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_DAMAGE_NUMBER_OF_DICE": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ua1d\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ua1b\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_DAMAGE_SIDES_PER_DIE": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ua1s\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_MAXIMUM_NUMBER_OF_TARGETS": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027utc1\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ua1t\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ucs1\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_AREA_OF_EFFECT_TARGETS": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ua1p\u0027)"
    },
    "UNIT_WEAPON_IF_ATTACK_TARGETS_ALLOWED": {
      "isConstant": true,
      "type": "unitweaponintegerfield",
      "isArray": false,
      "value": "ConvertUnitWeaponIntegerField(\u0027ua1g\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ubs1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027udp1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_BASE_COOLDOWN": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ua1c\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_LOSS_FACTOR": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027udl1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_MEDIUM": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027uhd1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_SMALL": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027uqd1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_DISTANCE": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027usd1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_RADIUS": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027usr1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_PROJECTILE_SPEED": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ua1z\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_PROJECTILE_ARC": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027uma1\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_FULL_DAMAGE": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ua1f\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_MEDIUM_DAMAGE": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ua1h\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_SMALL_DAMAGE": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ua1q\u0027)"
    },
    "UNIT_WEAPON_RF_ATTACK_RANGE": {
      "isConstant": true,
      "type": "unitweaponrealfield",
      "isArray": false,
      "value": "ConvertUnitWeaponRealField(\u0027ua1r\u0027)"
    },
    "UNIT_WEAPON_BF_ATTACK_SHOW_UI": {
      "isConstant": true,
      "type": "unitweaponbooleanfield",
      "isArray": false,
      "value": "ConvertUnitWeaponBooleanField(\u0027uwu1\u0027)"
    },
    "UNIT_WEAPON_BF_ATTACKS_ENABLED": {
      "isConstant": true,
      "type": "unitweaponbooleanfield",
      "isArray": false,
      "value": "ConvertUnitWeaponBooleanField(\u0027uaen\u0027)"
    },
    "UNIT_WEAPON_BF_ATTACK_PROJECTILE_HOMING_ENABLED": {
      "isConstant": true,
      "type": "unitweaponbooleanfield",
      "isArray": false,
      "value": "ConvertUnitWeaponBooleanField(\u0027umh1\u0027)"
    },
    "UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART": {
      "isConstant": true,
      "type": "unitweaponstringfield",
      "isArray": false,
      "value": "ConvertUnitWeaponStringField(\u0027ua1m\u0027)"
    },
    "MOVE_TYPE_UNKNOWN": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(0)"
    },
    "MOVE_TYPE_FOOT": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(1)"
    },
    "MOVE_TYPE_FLY": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(2)"
    },
    "MOVE_TYPE_HORSE": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(4)"
    },
    "MOVE_TYPE_HOVER": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(8)"
    },
    "MOVE_TYPE_FLOAT": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(16)"
    },
    "MOVE_TYPE_AMPHIBIOUS": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(32)"
    },
    "MOVE_TYPE_UNBUILDABLE": {
      "isConstant": true,
      "type": "movetype",
      "isArray": false,
      "value": "ConvertMoveType(64)"
    },
    "TARGET_FLAG_NONE": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(1)"
    },
    "TARGET_FLAG_GROUND": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(2)"
    },
    "TARGET_FLAG_AIR": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(4)"
    },
    "TARGET_FLAG_STRUCTURE": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(8)"
    },
    "TARGET_FLAG_WARD": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(16)"
    },
    "TARGET_FLAG_ITEM": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(32)"
    },
    "TARGET_FLAG_TREE": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(64)"
    },
    "TARGET_FLAG_WALL": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(128)"
    },
    "TARGET_FLAG_DEBRIS": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(256)"
    },
    "TARGET_FLAG_DECORATION": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(512)"
    },
    "TARGET_FLAG_BRIDGE": {
      "isConstant": true,
      "type": "targetflag",
      "isArray": false,
      "value": "ConvertTargetFlag(1024)"
    },
    "DEFENSE_TYPE_LIGHT": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(0)"
    },
    "DEFENSE_TYPE_MEDIUM": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(1)"
    },
    "DEFENSE_TYPE_LARGE": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(2)"
    },
    "DEFENSE_TYPE_FORT": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(3)"
    },
    "DEFENSE_TYPE_NORMAL": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(4)"
    },
    "DEFENSE_TYPE_HERO": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(5)"
    },
    "DEFENSE_TYPE_DIVINE": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(6)"
    },
    "DEFENSE_TYPE_NONE": {
      "isConstant": true,
      "type": "defensetype",
      "isArray": false,
      "value": "ConvertDefenseType(7)"
    },
    "HERO_ATTRIBUTE_STR": {
      "isConstant": true,
      "type": "heroattribute",
      "isArray": false,
      "value": "ConvertHeroAttribute(1)"
    },
    "HERO_ATTRIBUTE_INT": {
      "isConstant": true,
      "type": "heroattribute",
      "isArray": false,
      "value": "ConvertHeroAttribute(2)"
    },
    "HERO_ATTRIBUTE_AGI": {
      "isConstant": true,
      "type": "heroattribute",
      "isArray": false,
      "value": "ConvertHeroAttribute(3)"
    },
    "ARMOR_TYPE_WHOKNOWS": {
      "isConstant": true,
      "type": "armortype",
      "isArray": false,
      "value": "ConvertArmorType(0)"
    },
    "ARMOR_TYPE_FLESH": {
      "isConstant": true,
      "type": "armortype",
      "isArray": false,
      "value": "ConvertArmorType(1)"
    },
    "ARMOR_TYPE_METAL": {
      "isConstant": true,
      "type": "armortype",
      "isArray": false,
      "value": "ConvertArmorType(2)"
    },
    "ARMOR_TYPE_WOOD": {
      "isConstant": true,
      "type": "armortype",
      "isArray": false,
      "value": "ConvertArmorType(3)"
    },
    "ARMOR_TYPE_ETHREAL": {
      "isConstant": true,
      "type": "armortype",
      "isArray": false,
      "value": "ConvertArmorType(4)"
    },
    "ARMOR_TYPE_STONE": {
      "isConstant": true,
      "type": "armortype",
      "isArray": false,
      "value": "ConvertArmorType(5)"
    },
    "REGENERATION_TYPE_NONE": {
      "isConstant": true,
      "type": "regentype",
      "isArray": false,
      "value": "ConvertRegenType(0)"
    },
    "REGENERATION_TYPE_ALWAYS": {
      "isConstant": true,
      "type": "regentype",
      "isArray": false,
      "value": "ConvertRegenType(1)"
    },
    "REGENERATION_TYPE_BLIGHT": {
      "isConstant": true,
      "type": "regentype",
      "isArray": false,
      "value": "ConvertRegenType(2)"
    },
    "REGENERATION_TYPE_DAY": {
      "isConstant": true,
      "type": "regentype",
      "isArray": false,
      "value": "ConvertRegenType(3)"
    },
    "REGENERATION_TYPE_NIGHT": {
      "isConstant": true,
      "type": "regentype",
      "isArray": false,
      "value": "ConvertRegenType(4)"
    },
    "UNIT_CATEGORY_GIANT": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(1)"
    },
    "UNIT_CATEGORY_UNDEAD": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(2)"
    },
    "UNIT_CATEGORY_SUMMONED": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(4)"
    },
    "UNIT_CATEGORY_MECHANICAL": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(8)"
    },
    "UNIT_CATEGORY_PEON": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(16)"
    },
    "UNIT_CATEGORY_SAPPER": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(32)"
    },
    "UNIT_CATEGORY_TOWNHALL": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(64)"
    },
    "UNIT_CATEGORY_ANCIENT": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(128)"
    },
    "UNIT_CATEGORY_NEUTRAL": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(256)"
    },
    "UNIT_CATEGORY_WARD": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(512)"
    },
    "UNIT_CATEGORY_STANDON": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(1024)"
    },
    "UNIT_CATEGORY_TAUREN": {
      "isConstant": true,
      "type": "unitcategory",
      "isArray": false,
      "value": "ConvertUnitCategory(2048)"
    },
    "PATHING_FLAG_UNWALKABLE": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(2)"
    },
    "PATHING_FLAG_UNFLYABLE": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(4)"
    },
    "PATHING_FLAG_UNBUILDABLE": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(8)"
    },
    "PATHING_FLAG_UNPEONHARVEST": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(16)"
    },
    "PATHING_FLAG_BLIGHTED": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(32)"
    },
    "PATHING_FLAG_UNFLOATABLE": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(64)"
    },
    "PATHING_FLAG_UNAMPHIBIOUS": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(128)"
    },
    "PATHING_FLAG_UNITEMPLACABLE": {
      "isConstant": true,
      "type": "pathingflag",
      "isArray": false,
      "value": "ConvertPathingFlag(256)"
    }
  },
  "natives": {
    "ConvertRace": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "race | null"
    },
    "ConvertAllianceType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "alliancetype | null"
    },
    "ConvertRacePref": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "racepreference | null"
    },
    "ConvertIGameState": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "igamestate | null"
    },
    "ConvertFGameState": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "fgamestate | null"
    },
    "ConvertPlayerState": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playerstate | null"
    },
    "ConvertPlayerScore": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playerscore | null"
    },
    "ConvertPlayerGameResult": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playergameresult | null"
    },
    "ConvertUnitState": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitstate | null"
    },
    "ConvertAIDifficulty": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "aidifficulty | null"
    },
    "ConvertGameEvent": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "gameevent | null"
    },
    "ConvertPlayerEvent": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playerevent | null"
    },
    "ConvertPlayerUnitEvent": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playerunitevent | null"
    },
    "ConvertWidgetEvent": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "widgetevent | null"
    },
    "ConvertDialogEvent": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "dialogevent | null"
    },
    "ConvertUnitEvent": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitevent | null"
    },
    "ConvertLimitOp": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "limitop | null"
    },
    "ConvertUnitType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unittype | null"
    },
    "ConvertGameSpeed": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "gamespeed | null"
    },
    "ConvertPlacement": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "placement | null"
    },
    "ConvertStartLocPrio": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "startlocprio | null"
    },
    "ConvertGameDifficulty": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "gamedifficulty | null"
    },
    "ConvertGameType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "gametype | null"
    },
    "ConvertMapFlag": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "mapflag | null"
    },
    "ConvertMapVisibility": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "mapvisibility | null"
    },
    "ConvertMapSetting": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "mapsetting | null"
    },
    "ConvertMapDensity": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "mapdensity | null"
    },
    "ConvertMapControl": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "mapcontrol | null"
    },
    "ConvertPlayerColor": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playercolor | null"
    },
    "ConvertPlayerSlotState": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "playerslotstate | null"
    },
    "ConvertVolumeGroup": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "volumegroup | null"
    },
    "ConvertCameraField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "camerafield | null"
    },
    "ConvertBlendMode": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "blendmode | null"
    },
    "ConvertRarityControl": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "raritycontrol | null"
    },
    "ConvertTexMapFlags": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "texmapflags | null"
    },
    "ConvertFogState": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "fogstate | null"
    },
    "ConvertEffectType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "effecttype | null"
    },
    "ConvertVersion": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "version | null"
    },
    "ConvertItemType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "itemtype | null"
    },
    "ConvertAttackType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "attacktype | null"
    },
    "ConvertDamageType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "damagetype | null"
    },
    "ConvertWeaponType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "weapontype | null"
    },
    "ConvertSoundType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "soundtype | null"
    },
    "ConvertPathingType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "pathingtype | null"
    },
    "ConvertMouseButtonType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "mousebuttontype | null"
    },
    "ConvertAnimType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "animtype | null"
    },
    "ConvertSubAnimType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "subanimtype | null"
    },
    "ConvertOriginFrameType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "originframetype | null"
    },
    "ConvertFramePointType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "framepointtype | null"
    },
    "ConvertTextAlignType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "textaligntype | null"
    },
    "ConvertFrameEventType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "frameeventtype | null"
    },
    "ConvertOsKeyType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "oskeytype | null"
    },
    "ConvertAbilityIntegerField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilityintegerfield | null"
    },
    "ConvertAbilityRealField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilityrealfield | null"
    },
    "ConvertAbilityBooleanField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilitybooleanfield | null"
    },
    "ConvertAbilityStringField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilitystringfield | null"
    },
    "ConvertAbilityIntegerLevelField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilityintegerlevelfield | null"
    },
    "ConvertAbilityRealLevelField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilityreallevelfield | null"
    },
    "ConvertAbilityBooleanLevelField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilitybooleanlevelfield | null"
    },
    "ConvertAbilityStringLevelField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilitystringlevelfield | null"
    },
    "ConvertAbilityIntegerLevelArrayField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilityintegerlevelarrayfield | null"
    },
    "ConvertAbilityRealLevelArrayField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilityreallevelarrayfield | null"
    },
    "ConvertAbilityBooleanLevelArrayField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilitybooleanlevelarrayfield | null"
    },
    "ConvertAbilityStringLevelArrayField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "abilitystringlevelarrayfield | null"
    },
    "ConvertUnitIntegerField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitintegerfield | null"
    },
    "ConvertUnitRealField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitrealfield | null"
    },
    "ConvertUnitBooleanField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitbooleanfield | null"
    },
    "ConvertUnitStringField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitstringfield | null"
    },
    "ConvertUnitWeaponIntegerField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitweaponintegerfield | null"
    },
    "ConvertUnitWeaponRealField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitweaponrealfield | null"
    },
    "ConvertUnitWeaponBooleanField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitweaponbooleanfield | null"
    },
    "ConvertUnitWeaponStringField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitweaponstringfield | null"
    },
    "ConvertItemIntegerField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "itemintegerfield | null"
    },
    "ConvertItemRealField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "itemrealfield | null"
    },
    "ConvertItemBooleanField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "itembooleanfield | null"
    },
    "ConvertItemStringField": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "itemstringfield | null"
    },
    "ConvertMoveType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "movetype | null"
    },
    "ConvertTargetFlag": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "targetflag | null"
    },
    "ConvertArmorType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "armortype | null"
    },
    "ConvertHeroAttribute": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "heroattribute | null"
    },
    "ConvertDefenseType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "defensetype | null"
    },
    "ConvertRegenType": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "regentype | null"
    },
    "ConvertUnitCategory": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "unitcategory | null"
    },
    "ConvertPathingFlag": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "pathingflag | null"
    },
    "OrderId": {
      "takes": [
        {
          "name": "orderIdString",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "OrderId2String": {
      "takes": [
        {
          "name": "orderId",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "UnitId": {
      "takes": [
        {
          "name": "unitIdString",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "UnitId2String": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "AbilityId": {
      "takes": [
        {
          "name": "abilityIdString",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "AbilityId2String": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "GetObjectName": {
      "takes": [
        {
          "name": "objectId",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "GetBJMaxPlayers": {
      "takes": [],
      "returns": "number"
    },
    "GetBJPlayerNeutralVictim": {
      "takes": [],
      "returns": "number"
    },
    "GetBJPlayerNeutralExtra": {
      "takes": [],
      "returns": "number"
    },
    "GetBJMaxPlayerSlots": {
      "takes": [],
      "returns": "number"
    },
    "GetPlayerNeutralPassive": {
      "takes": [],
      "returns": "number"
    },
    "GetPlayerNeutralAggressive": {
      "takes": [],
      "returns": "number"
    },
    "Deg2Rad": {
      "takes": [
        {
          "name": "degrees",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Rad2Deg": {
      "takes": [
        {
          "name": "radians",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Sin": {
      "takes": [
        {
          "name": "radians",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Cos": {
      "takes": [
        {
          "name": "radians",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Tan": {
      "takes": [
        {
          "name": "radians",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Asin": {
      "takes": [
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Acos": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Atan": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Atan2": {
      "takes": [
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "SquareRoot": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "Pow": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "power",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "MathRound": {
      "takes": [
        {
          "name": "r",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "I2R": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "R2I": {
      "takes": [
        {
          "name": "r",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "I2S": {
      "takes": [
        {
          "name": "i",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "R2S": {
      "takes": [
        {
          "name": "r",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "R2SW": {
      "takes": [
        {
          "name": "r",
          "type": "number"
        },
        {
          "name": "width",
          "type": "number"
        },
        {
          "name": "precision",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "S2I": {
      "takes": [
        {
          "name": "s",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "S2R": {
      "takes": [
        {
          "name": "s",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "GetHandleId": {
      "takes": [
        {
          "name": "h",
          "type": "handle"
        }
      ],
      "returns": "number"
    },
    "SubString": {
      "takes": [
        {
          "name": "source",
          "type": "string"
        },
        {
          "name": "start",
          "type": "number"
        },
        {
          "name": "end",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "StringLength": {
      "takes": [
        {
          "name": "s",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "StringCase": {
      "takes": [
        {
          "name": "source",
          "type": "string"
        },
        {
          "name": "upper",
          "type": "boolean"
        }
      ],
      "returns": "string | null"
    },
    "StringHash": {
      "takes": [
        {
          "name": "s",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "GetLocalizedString": {
      "takes": [
        {
          "name": "source",
          "type": "string"
        }
      ],
      "returns": "string | null"
    },
    "GetLocalizedHotkey": {
      "takes": [
        {
          "name": "source",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "SetMapName": {
      "takes": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetMapDescription": {
      "takes": [
        {
          "name": "description",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetTeams": {
      "takes": [
        {
          "name": "teamcount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayers": {
      "takes": [
        {
          "name": "playercount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "DefineStartLocation": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "DefineStartLocationLoc": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "SetStartLocPrioCount": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "prioSlotCount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetStartLocPrio": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "prioSlotIndex",
          "type": "number"
        },
        {
          "name": "otherStartLocIndex",
          "type": "number"
        },
        {
          "name": "priority",
          "type": "startlocprio"
        }
      ],
      "returns": "void"
    },
    "GetStartLocPrioSlot": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "prioSlotIndex",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetStartLocPrio": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "prioSlotIndex",
          "type": "number"
        }
      ],
      "returns": "startlocprio | null"
    },
    "SetEnemyStartLocPrioCount": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "prioSlotCount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetEnemyStartLocPrio": {
      "takes": [
        {
          "name": "whichStartLoc",
          "type": "number"
        },
        {
          "name": "prioSlotIndex",
          "type": "number"
        },
        {
          "name": "otherStartLocIndex",
          "type": "number"
        },
        {
          "name": "priority",
          "type": "startlocprio"
        }
      ],
      "returns": "void"
    },
    "SetGameTypeSupported": {
      "takes": [
        {
          "name": "whichGameType",
          "type": "gametype"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetMapFlag": {
      "takes": [
        {
          "name": "whichMapFlag",
          "type": "mapflag"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetGamePlacement": {
      "takes": [
        {
          "name": "whichPlacementType",
          "type": "placement"
        }
      ],
      "returns": "void"
    },
    "SetGameSpeed": {
      "takes": [
        {
          "name": "whichspeed",
          "type": "gamespeed"
        }
      ],
      "returns": "void"
    },
    "SetGameDifficulty": {
      "takes": [
        {
          "name": "whichdifficulty",
          "type": "gamedifficulty"
        }
      ],
      "returns": "void"
    },
    "SetResourceDensity": {
      "takes": [
        {
          "name": "whichdensity",
          "type": "mapdensity"
        }
      ],
      "returns": "void"
    },
    "SetCreatureDensity": {
      "takes": [
        {
          "name": "whichdensity",
          "type": "mapdensity"
        }
      ],
      "returns": "void"
    },
    "GetTeams": {
      "takes": [],
      "returns": "number"
    },
    "GetPlayers": {
      "takes": [],
      "returns": "number"
    },
    "IsGameTypeSupported": {
      "takes": [
        {
          "name": "whichGameType",
          "type": "gametype"
        }
      ],
      "returns": "boolean"
    },
    "GetGameTypeSelected": {
      "takes": [],
      "returns": "gametype | null"
    },
    "IsMapFlagSet": {
      "takes": [
        {
          "name": "whichMapFlag",
          "type": "mapflag"
        }
      ],
      "returns": "boolean"
    },
    "GetGamePlacement": {
      "takes": [],
      "returns": "placement | null"
    },
    "GetGameSpeed": {
      "takes": [],
      "returns": "gamespeed | null"
    },
    "GetGameDifficulty": {
      "takes": [],
      "returns": "gamedifficulty | null"
    },
    "GetResourceDensity": {
      "takes": [],
      "returns": "mapdensity | null"
    },
    "GetCreatureDensity": {
      "takes": [],
      "returns": "mapdensity | null"
    },
    "GetStartLocationX": {
      "takes": [
        {
          "name": "whichStartLocation",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetStartLocationY": {
      "takes": [
        {
          "name": "whichStartLocation",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetStartLocationLoc": {
      "takes": [
        {
          "name": "whichStartLocation",
          "type": "number"
        }
      ],
      "returns": "location | null"
    },
    "SetPlayerTeam": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichTeam",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerStartLocation": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "startLocIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ForcePlayerStartLocation": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "startLocIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerColor": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "color",
          "type": "playercolor"
        }
      ],
      "returns": "void"
    },
    "SetPlayerAlliance": {
      "takes": [
        {
          "name": "sourcePlayer",
          "type": "player"
        },
        {
          "name": "otherPlayer",
          "type": "player"
        },
        {
          "name": "whichAllianceSetting",
          "type": "alliancetype"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetPlayerTaxRate": {
      "takes": [
        {
          "name": "sourcePlayer",
          "type": "player"
        },
        {
          "name": "otherPlayer",
          "type": "player"
        },
        {
          "name": "whichResource",
          "type": "playerstate"
        },
        {
          "name": "rate",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerRacePreference": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichRacePreference",
          "type": "racepreference"
        }
      ],
      "returns": "void"
    },
    "SetPlayerRaceSelectable": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetPlayerController": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "controlType",
          "type": "mapcontrol"
        }
      ],
      "returns": "void"
    },
    "SetPlayerName": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetPlayerOnScoreScreen": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetPlayerTeam": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetPlayerStartLocation": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetPlayerColor": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "playercolor | null"
    },
    "GetPlayerSelectable": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "GetPlayerController": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "mapcontrol | null"
    },
    "GetPlayerSlotState": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "playerslotstate | null"
    },
    "GetPlayerTaxRate": {
      "takes": [
        {
          "name": "sourcePlayer",
          "type": "player"
        },
        {
          "name": "otherPlayer",
          "type": "player"
        },
        {
          "name": "whichResource",
          "type": "playerstate"
        }
      ],
      "returns": "number"
    },
    "IsPlayerRacePrefSet": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "pref",
          "type": "racepreference"
        }
      ],
      "returns": "boolean"
    },
    "GetPlayerName": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "string | null"
    },
    "CreateTimer": {
      "takes": [],
      "returns": "timer | null"
    },
    "DestroyTimer": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "void"
    },
    "TimerStart": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        },
        {
          "name": "timeout",
          "type": "number"
        },
        {
          "name": "periodic",
          "type": "boolean"
        },
        {
          "name": "handlerFunc",
          "type": "() =\u003E void"
        }
      ],
      "returns": "void"
    },
    "TimerGetElapsed": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "number"
    },
    "TimerGetRemaining": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "number"
    },
    "TimerGetTimeout": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "number"
    },
    "PauseTimer": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "void"
    },
    "ResumeTimer": {
      "takes": [
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "void"
    },
    "GetExpiredTimer": {
      "takes": [],
      "returns": "timer | null"
    },
    "CreateGroup": {
      "takes": [],
      "returns": "group | null"
    },
    "DestroyGroup": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        }
      ],
      "returns": "void"
    },
    "GroupAddUnit": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "GroupRemoveUnit": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "BlzGroupAddGroupFast": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "addGroup",
          "type": "group"
        }
      ],
      "returns": "number"
    },
    "BlzGroupRemoveGroupFast": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "removeGroup",
          "type": "group"
        }
      ],
      "returns": "number"
    },
    "GroupClear": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        }
      ],
      "returns": "void"
    },
    "BlzGroupGetSize": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        }
      ],
      "returns": "number"
    },
    "BlzGroupUnitAt": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "GroupEnumUnitsOfType": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "unitname",
          "type": "string"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsOfPlayer": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsOfTypeCounted": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "unitname",
          "type": "string"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "countLimit",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsInRect": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "r",
          "type": "rect"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsInRectCounted": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "r",
          "type": "rect"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "countLimit",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsInRange": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsInRangeOfLoc": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsInRangeCounted": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "countLimit",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsInRangeOfLocCounted": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "countLimit",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GroupEnumUnitsSelected": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "GroupImmediateOrder": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "GroupImmediateOrderById": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "GroupPointOrder": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "GroupPointOrderLoc": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "boolean"
    },
    "GroupPointOrderById": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "GroupPointOrderByIdLoc": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "boolean"
    },
    "GroupTargetOrder": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "GroupTargetOrderById": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "ForGroup": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        },
        {
          "name": "callback",
          "type": "() =\u003E void"
        }
      ],
      "returns": "void"
    },
    "FirstOfGroup": {
      "takes": [
        {
          "name": "whichGroup",
          "type": "group"
        }
      ],
      "returns": "unit | null"
    },
    "CreateForce": {
      "takes": [],
      "returns": "force | null"
    },
    "DestroyForce": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        }
      ],
      "returns": "void"
    },
    "ForceAddPlayer": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "ForceRemovePlayer": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "BlzForceHasPlayer": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "ForceClear": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        }
      ],
      "returns": "void"
    },
    "ForceEnumPlayers": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "ForceEnumPlayersCounted": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "countLimit",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ForceEnumAllies": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "ForceEnumEnemies": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "ForForce": {
      "takes": [
        {
          "name": "whichForce",
          "type": "force"
        },
        {
          "name": "callback",
          "type": "() =\u003E void"
        }
      ],
      "returns": "void"
    },
    "Rect": {
      "takes": [
        {
          "name": "minx",
          "type": "number"
        },
        {
          "name": "miny",
          "type": "number"
        },
        {
          "name": "maxx",
          "type": "number"
        },
        {
          "name": "maxy",
          "type": "number"
        }
      ],
      "returns": "rect | null"
    },
    "RectFromLoc": {
      "takes": [
        {
          "name": "min",
          "type": "location"
        },
        {
          "name": "max",
          "type": "location"
        }
      ],
      "returns": "rect | null"
    },
    "RemoveRect": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "void"
    },
    "SetRect": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        },
        {
          "name": "minx",
          "type": "number"
        },
        {
          "name": "miny",
          "type": "number"
        },
        {
          "name": "maxx",
          "type": "number"
        },
        {
          "name": "maxy",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetRectFromLoc": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        },
        {
          "name": "min",
          "type": "location"
        },
        {
          "name": "max",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "MoveRectTo": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        },
        {
          "name": "newCenterX",
          "type": "number"
        },
        {
          "name": "newCenterY",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MoveRectToLoc": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        },
        {
          "name": "newCenterLoc",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "GetRectCenterX": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "number"
    },
    "GetRectCenterY": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "number"
    },
    "GetRectMinX": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "number"
    },
    "GetRectMinY": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "number"
    },
    "GetRectMaxX": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "number"
    },
    "GetRectMaxY": {
      "takes": [
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "number"
    },
    "CreateRegion": {
      "takes": [],
      "returns": "region | null"
    },
    "RemoveRegion": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        }
      ],
      "returns": "void"
    },
    "RegionAddRect": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "r",
          "type": "rect"
        }
      ],
      "returns": "void"
    },
    "RegionClearRect": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "r",
          "type": "rect"
        }
      ],
      "returns": "void"
    },
    "RegionAddCell": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RegionAddCellAtLoc": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "RegionClearCell": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RegionClearCellAtLoc": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "Location": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "location | null"
    },
    "RemoveLocation": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "MoveLocation": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "newX",
          "type": "number"
        },
        {
          "name": "newY",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetLocationX": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "number"
    },
    "GetLocationY": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "number"
    },
    "GetLocationZ": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "number"
    },
    "IsUnitInRegion": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "IsPointInRegion": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsLocationInRegion": {
      "takes": [
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "boolean"
    },
    "GetWorldBounds": {
      "takes": [],
      "returns": "rect | null"
    },
    "CreateTrigger": {
      "takes": [],
      "returns": "trigger | null"
    },
    "DestroyTrigger": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "ResetTrigger": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "EnableTrigger": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "DisableTrigger": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "IsTriggerEnabled": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "boolean"
    },
    "TriggerWaitOnSleeps": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsTriggerWaitOnSleeps": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "boolean"
    },
    "GetFilterUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetEnumUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetFilterDestructable": {
      "takes": [],
      "returns": "destructable | null"
    },
    "GetEnumDestructable": {
      "takes": [],
      "returns": "destructable | null"
    },
    "GetFilterItem": {
      "takes": [],
      "returns": "item | null"
    },
    "GetEnumItem": {
      "takes": [],
      "returns": "item | null"
    },
    "ParseTags": {
      "takes": [
        {
          "name": "taggedString",
          "type": "string"
        }
      ],
      "returns": "string | null"
    },
    "GetFilterPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "GetEnumPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "GetTriggeringTrigger": {
      "takes": [],
      "returns": "trigger | null"
    },
    "GetTriggerEventId": {
      "takes": [],
      "returns": "eventid | null"
    },
    "GetTriggerEvalCount": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "number"
    },
    "GetTriggerExecCount": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "number"
    },
    "ExecuteFunc": {
      "takes": [
        {
          "name": "funcName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "And": {
      "takes": [
        {
          "name": "operandA",
          "type": "boolexpr"
        },
        {
          "name": "operandB",
          "type": "boolexpr"
        }
      ],
      "returns": "boolexpr | null"
    },
    "Or": {
      "takes": [
        {
          "name": "operandA",
          "type": "boolexpr"
        },
        {
          "name": "operandB",
          "type": "boolexpr"
        }
      ],
      "returns": "boolexpr | null"
    },
    "Not": {
      "takes": [
        {
          "name": "operand",
          "type": "boolexpr"
        }
      ],
      "returns": "boolexpr | null"
    },
    "Condition": {
      "takes": [
        {
          "name": "func",
          "type": "() =\u003E void"
        }
      ],
      "returns": "conditionfunc | null"
    },
    "DestroyCondition": {
      "takes": [
        {
          "name": "c",
          "type": "conditionfunc"
        }
      ],
      "returns": "void"
    },
    "Filter": {
      "takes": [
        {
          "name": "func",
          "type": "() =\u003E void"
        }
      ],
      "returns": "filterfunc | null"
    },
    "DestroyFilter": {
      "takes": [
        {
          "name": "f",
          "type": "filterfunc"
        }
      ],
      "returns": "void"
    },
    "DestroyBoolExpr": {
      "takes": [
        {
          "name": "e",
          "type": "boolexpr"
        }
      ],
      "returns": "void"
    },
    "TriggerRegisterVariableEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "varName",
          "type": "string"
        },
        {
          "name": "opcode",
          "type": "limitop"
        },
        {
          "name": "limitval",
          "type": "number"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterTimerEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "timeout",
          "type": "number"
        },
        {
          "name": "periodic",
          "type": "boolean"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterTimerExpireEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "t",
          "type": "timer"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterGameStateEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichState",
          "type": "gamestate"
        },
        {
          "name": "opcode",
          "type": "limitop"
        },
        {
          "name": "limitval",
          "type": "number"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterDialogEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichDialog",
          "type": "dialog"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterDialogButtonEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichButton",
          "type": "button"
        }
      ],
      "returns": "event | null"
    },
    "GetEventGameState": {
      "takes": [],
      "returns": "gamestate | null"
    },
    "TriggerRegisterGameEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichGameEvent",
          "type": "gameevent"
        }
      ],
      "returns": "event | null"
    },
    "GetWinningPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "TriggerRegisterEnterRegion": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "event | null"
    },
    "GetTriggeringRegion": {
      "takes": [],
      "returns": "region | null"
    },
    "GetEnteringUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "TriggerRegisterLeaveRegion": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichRegion",
          "type": "region"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "event | null"
    },
    "GetLeavingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "TriggerRegisterTrackableHitEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "t",
          "type": "trackable"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterTrackableTrackEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "t",
          "type": "trackable"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterCommandEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichAbility",
          "type": "number"
        },
        {
          "name": "order",
          "type": "string"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterUpgradeCommandEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichUpgrade",
          "type": "number"
        }
      ],
      "returns": "event | null"
    },
    "GetTriggeringTrackable": {
      "takes": [],
      "returns": "trackable | null"
    },
    "GetClickedButton": {
      "takes": [],
      "returns": "button | null"
    },
    "GetClickedDialog": {
      "takes": [],
      "returns": "dialog | null"
    },
    "GetTournamentFinishSoonTimeRemaining": {
      "takes": [],
      "returns": "number"
    },
    "GetTournamentFinishNowRule": {
      "takes": [],
      "returns": "number"
    },
    "GetTournamentFinishNowPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "GetTournamentScore": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetSaveBasicFilename": {
      "takes": [],
      "returns": "string | null"
    },
    "TriggerRegisterPlayerEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichPlayerEvent",
          "type": "playerevent"
        }
      ],
      "returns": "event | null"
    },
    "GetTriggerPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "TriggerRegisterPlayerUnitEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichPlayerUnitEvent",
          "type": "playerunitevent"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "event | null"
    },
    "GetLevelingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetLearningUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetLearnedSkill": {
      "takes": [],
      "returns": "number"
    },
    "GetLearnedSkillLevel": {
      "takes": [],
      "returns": "number"
    },
    "GetRevivableUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetRevivingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetAttacker": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetRescuer": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetDyingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetKillingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetDecayingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetConstructingStructure": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetCancelledStructure": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetConstructedStructure": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetResearchingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetResearched": {
      "takes": [],
      "returns": "number"
    },
    "GetTrainedUnitType": {
      "takes": [],
      "returns": "number"
    },
    "GetTrainedUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetDetectedUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSummoningUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSummonedUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetTransportUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetLoadedUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSellingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSoldUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetBuyingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSoldItem": {
      "takes": [],
      "returns": "item | null"
    },
    "GetChangingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetChangingUnitPrevOwner": {
      "takes": [],
      "returns": "player | null"
    },
    "GetManipulatingUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetManipulatedItem": {
      "takes": [],
      "returns": "item | null"
    },
    "BlzGetAbsorbingItem": {
      "takes": [],
      "returns": "item | null"
    },
    "BlzGetManipulatedItemWasAbsorbed": {
      "takes": [],
      "returns": "boolean"
    },
    "BlzGetStackingItemSource": {
      "takes": [],
      "returns": "item | null"
    },
    "BlzGetStackingItemTarget": {
      "takes": [],
      "returns": "item | null"
    },
    "BlzGetStackingItemTargetPreviousCharges": {
      "takes": [],
      "returns": "number"
    },
    "GetOrderedUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetIssuedOrderId": {
      "takes": [],
      "returns": "number"
    },
    "GetOrderPointX": {
      "takes": [],
      "returns": "number"
    },
    "GetOrderPointY": {
      "takes": [],
      "returns": "number"
    },
    "GetOrderPointLoc": {
      "takes": [],
      "returns": "location | null"
    },
    "GetOrderTarget": {
      "takes": [],
      "returns": "widget | null"
    },
    "GetOrderTargetDestructable": {
      "takes": [],
      "returns": "destructable | null"
    },
    "GetOrderTargetItem": {
      "takes": [],
      "returns": "item | null"
    },
    "GetOrderTargetUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSpellAbilityUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetSpellAbilityId": {
      "takes": [],
      "returns": "number"
    },
    "GetSpellAbility": {
      "takes": [],
      "returns": "ability | null"
    },
    "GetSpellTargetLoc": {
      "takes": [],
      "returns": "location | null"
    },
    "GetSpellTargetX": {
      "takes": [],
      "returns": "number"
    },
    "GetSpellTargetY": {
      "takes": [],
      "returns": "number"
    },
    "GetSpellTargetDestructable": {
      "takes": [],
      "returns": "destructable | null"
    },
    "GetSpellTargetItem": {
      "takes": [],
      "returns": "item | null"
    },
    "GetSpellTargetUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "TriggerRegisterPlayerAllianceChange": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichAlliance",
          "type": "alliancetype"
        }
      ],
      "returns": "event | null"
    },
    "TriggerRegisterPlayerStateEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "playerstate"
        },
        {
          "name": "opcode",
          "type": "limitop"
        },
        {
          "name": "limitval",
          "type": "number"
        }
      ],
      "returns": "event | null"
    },
    "GetEventPlayerState": {
      "takes": [],
      "returns": "playerstate | null"
    },
    "TriggerRegisterPlayerChatEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "chatMessageToDetect",
          "type": "string"
        },
        {
          "name": "exactMatchOnly",
          "type": "boolean"
        }
      ],
      "returns": "event | null"
    },
    "GetEventPlayerChatString": {
      "takes": [],
      "returns": "string | null"
    },
    "GetEventPlayerChatStringMatched": {
      "takes": [],
      "returns": "string | null"
    },
    "TriggerRegisterDeathEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichWidget",
          "type": "widget"
        }
      ],
      "returns": "event | null"
    },
    "GetTriggerUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "TriggerRegisterUnitStateEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichState",
          "type": "unitstate"
        },
        {
          "name": "opcode",
          "type": "limitop"
        },
        {
          "name": "limitval",
          "type": "number"
        }
      ],
      "returns": "event | null"
    },
    "GetEventUnitState": {
      "takes": [],
      "returns": "unitstate | null"
    },
    "TriggerRegisterUnitEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichEvent",
          "type": "unitevent"
        }
      ],
      "returns": "event | null"
    },
    "GetEventDamage": {
      "takes": [],
      "returns": "number"
    },
    "GetEventDamageSource": {
      "takes": [],
      "returns": "unit | null"
    },
    "GetEventDetectingPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "TriggerRegisterFilterUnitEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichEvent",
          "type": "unitevent"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "event | null"
    },
    "GetEventTargetUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "TriggerRegisterUnitInRange": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "range",
          "type": "number"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        }
      ],
      "returns": "event | null"
    },
    "TriggerAddCondition": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "condition",
          "type": "boolexpr"
        }
      ],
      "returns": "triggercondition | null"
    },
    "TriggerRemoveCondition": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichCondition",
          "type": "triggercondition"
        }
      ],
      "returns": "void"
    },
    "TriggerClearConditions": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "TriggerAddAction": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "actionFunc",
          "type": "() =\u003E void"
        }
      ],
      "returns": "triggeraction | null"
    },
    "TriggerRemoveAction": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichAction",
          "type": "triggeraction"
        }
      ],
      "returns": "void"
    },
    "TriggerClearActions": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "TriggerSleepAction": {
      "takes": [
        {
          "name": "timeout",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "TriggerWaitForSound": {
      "takes": [
        {
          "name": "s",
          "type": "sound"
        },
        {
          "name": "offset",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "TriggerEvaluate": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "boolean"
    },
    "TriggerExecute": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "TriggerExecuteWait": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "void"
    },
    "TriggerSyncStart": {
      "takes": [],
      "returns": "void"
    },
    "TriggerSyncReady": {
      "takes": [],
      "returns": "void"
    },
    "GetWidgetLife": {
      "takes": [
        {
          "name": "whichWidget",
          "type": "widget"
        }
      ],
      "returns": "number"
    },
    "SetWidgetLife": {
      "takes": [
        {
          "name": "whichWidget",
          "type": "widget"
        },
        {
          "name": "newLife",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetWidgetX": {
      "takes": [
        {
          "name": "whichWidget",
          "type": "widget"
        }
      ],
      "returns": "number"
    },
    "GetWidgetY": {
      "takes": [
        {
          "name": "whichWidget",
          "type": "widget"
        }
      ],
      "returns": "number"
    },
    "GetTriggerWidget": {
      "takes": [],
      "returns": "widget | null"
    },
    "CreateDestructable": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "CreateDestructableZ": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "CreateDeadDestructable": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "CreateDeadDestructableZ": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "RemoveDestructable": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "void"
    },
    "KillDestructable": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "void"
    },
    "SetDestructableInvulnerable": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsDestructableInvulnerable": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "boolean"
    },
    "EnumDestructablesInRect": {
      "takes": [
        {
          "name": "r",
          "type": "rect"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "actionFunc",
          "type": "() =\u003E void"
        }
      ],
      "returns": "void"
    },
    "GetDestructableTypeId": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "number"
    },
    "GetDestructableX": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "number"
    },
    "GetDestructableY": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "number"
    },
    "SetDestructableLife": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "life",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetDestructableLife": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "number"
    },
    "SetDestructableMaxLife": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "max",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetDestructableMaxLife": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "number"
    },
    "DestructableRestoreLife": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "life",
          "type": "number"
        },
        {
          "name": "birth",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "QueueDestructableAnimation": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "whichAnimation",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetDestructableAnimation": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "whichAnimation",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetDestructableAnimationSpeed": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "speedFactor",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ShowDestructable": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetDestructableOccluderHeight": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "number"
    },
    "SetDestructableOccluderHeight": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        },
        {
          "name": "height",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetDestructableName": {
      "takes": [
        {
          "name": "d",
          "type": "destructable"
        }
      ],
      "returns": "string | null"
    },
    "GetTriggerDestructable": {
      "takes": [],
      "returns": "destructable | null"
    },
    "CreateItem": {
      "takes": [
        {
          "name": "itemid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "RemoveItem": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "void"
    },
    "GetItemPlayer": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "player | null"
    },
    "GetItemTypeId": {
      "takes": [
        {
          "name": "i",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "GetItemX": {
      "takes": [
        {
          "name": "i",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "GetItemY": {
      "takes": [
        {
          "name": "i",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "SetItemPosition": {
      "takes": [
        {
          "name": "i",
          "type": "item"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetItemDropOnDeath": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetItemDroppable": {
      "takes": [
        {
          "name": "i",
          "type": "item"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetItemPawnable": {
      "takes": [
        {
          "name": "i",
          "type": "item"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetItemPlayer": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "changeColor",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetItemInvulnerable": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsItemInvulnerable": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "SetItemVisible": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsItemVisible": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "IsItemOwned": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "IsItemPowerup": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "IsItemSellable": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "IsItemPawnable": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "IsItemIdPowerup": {
      "takes": [
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsItemIdSellable": {
      "takes": [
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsItemIdPawnable": {
      "takes": [
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "EnumItemsInRect": {
      "takes": [
        {
          "name": "r",
          "type": "rect"
        },
        {
          "name": "filter",
          "type": "boolexpr"
        },
        {
          "name": "actionFunc",
          "type": "() =\u003E void"
        }
      ],
      "returns": "void"
    },
    "GetItemLevel": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "GetItemType": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "itemtype | null"
    },
    "SetItemDropID": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetItemName": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "string | null"
    },
    "GetItemCharges": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "SetItemCharges": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "charges",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetItemUserData": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "SetItemUserData": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "data",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CreateUnit": {
      "takes": [
        {
          "name": "id",
          "type": "player"
        },
        {
          "name": "unitid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "CreateUnitByName": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "unitname",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "CreateUnitAtLoc": {
      "takes": [
        {
          "name": "id",
          "type": "player"
        },
        {
          "name": "unitid",
          "type": "number"
        },
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "face",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "CreateUnitAtLocByName": {
      "takes": [
        {
          "name": "id",
          "type": "player"
        },
        {
          "name": "unitname",
          "type": "string"
        },
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "face",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "CreateCorpse": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "unitid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "KillUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "RemoveUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "ShowUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUnitState": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichUnitState",
          "type": "unitstate"
        },
        {
          "name": "newVal",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitX": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newX",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitY": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newY",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitPosition": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newX",
          "type": "number"
        },
        {
          "name": "newY",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitPositionLoc": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "SetUnitFacing": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "facingAngle",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitFacingTimed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "facingAngle",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitMoveSpeed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newSpeed",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitFlyHeight": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newHeight",
          "type": "number"
        },
        {
          "name": "rate",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitTurnSpeed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newTurnSpeed",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitPropWindow": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newPropWindowAngle",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitAcquireRange": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "newAcquireRange",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitCreepGuard": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "creepGuard",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetUnitAcquireRange": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitTurnSpeed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitPropWindow": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitFlyHeight": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitDefaultAcquireRange": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitDefaultTurnSpeed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitDefaultPropWindow": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitDefaultFlyHeight": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "SetUnitOwner": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "changeColor",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUnitColor": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichColor",
          "type": "playercolor"
        }
      ],
      "returns": "void"
    },
    "SetUnitScale": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "scaleX",
          "type": "number"
        },
        {
          "name": "scaleY",
          "type": "number"
        },
        {
          "name": "scaleZ",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitTimeScale": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "timeScale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitBlendTime": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "blendTime",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitVertexColor": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "QueueUnitAnimation": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichAnimation",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetUnitAnimation": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichAnimation",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetUnitAnimationByIndex": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichAnimation",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitAnimationWithRarity": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichAnimation",
          "type": "string"
        },
        {
          "name": "rarity",
          "type": "raritycontrol"
        }
      ],
      "returns": "void"
    },
    "AddUnitAnimationProperties": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "animProperties",
          "type": "string"
        },
        {
          "name": "add",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUnitLookAt": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichBone",
          "type": "string"
        },
        {
          "name": "lookAtTarget",
          "type": "unit"
        },
        {
          "name": "offsetX",
          "type": "number"
        },
        {
          "name": "offsetY",
          "type": "number"
        },
        {
          "name": "offsetZ",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ResetUnitLookAt": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "SetUnitRescuable": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "byWhichPlayer",
          "type": "player"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUnitRescueRange": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "range",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetHeroStr": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "newStr",
          "type": "number"
        },
        {
          "name": "permanent",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetHeroAgi": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "newAgi",
          "type": "number"
        },
        {
          "name": "permanent",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetHeroInt": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "newInt",
          "type": "number"
        },
        {
          "name": "permanent",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetHeroStr": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "includeBonuses",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "GetHeroAgi": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "includeBonuses",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "GetHeroInt": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "includeBonuses",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "UnitStripHeroLevel": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "howManyLevels",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "GetHeroXP": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "SetHeroXP": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "newXpVal",
          "type": "number"
        },
        {
          "name": "showEyeCandy",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetHeroSkillPoints": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "UnitModifySkillPoints": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "skillPointDelta",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "AddHeroXP": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "xpToAdd",
          "type": "number"
        },
        {
          "name": "showEyeCandy",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetHeroLevel": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "showEyeCandy",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetHeroLevel": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitLevel": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetHeroProperName": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        }
      ],
      "returns": "string | null"
    },
    "SuspendHeroXP": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsSuspendedXP": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "SelectHeroSkill": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "abilcode",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetUnitAbilityLevel": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilcode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "DecUnitAbilityLevel": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilcode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "IncUnitAbilityLevel": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilcode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "SetUnitAbilityLevel": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilcode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "ReviveHero": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "doEyecandy",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "ReviveHeroLoc": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        },
        {
          "name": "loc",
          "type": "location"
        },
        {
          "name": "doEyecandy",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "SetUnitExploded": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "exploded",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUnitInvulnerable": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "PauseUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsUnitPaused": {
      "takes": [
        {
          "name": "whichHero",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "SetUnitPathing": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "ClearSelection": {
      "takes": [],
      "returns": "void"
    },
    "SelectUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetUnitPointValue": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitPointValueByType": {
      "takes": [
        {
          "name": "unitType",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "UnitAddItem": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "UnitAddItemById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "UnitAddItemToSlotById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "itemId",
          "type": "number"
        },
        {
          "name": "itemSlot",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitRemoveItem": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "void"
    },
    "UnitRemoveItemFromSlot": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "itemSlot",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "UnitHasItem": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "UnitItemInSlot": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "itemSlot",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "UnitInventorySize": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "UnitDropItemPoint": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitDropItemSlot": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "slot",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitDropItemTarget": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "target",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "UnitUseItem": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "UnitUseItemPoint": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitUseItemTarget": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "target",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "GetUnitX": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitY": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitLoc": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "location | null"
    },
    "GetUnitFacing": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitMoveSpeed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitDefaultMoveSpeed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitState": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichUnitState",
          "type": "unitstate"
        }
      ],
      "returns": "number"
    },
    "GetOwningPlayer": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "player | null"
    },
    "GetUnitTypeId": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitRace": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "race | null"
    },
    "GetUnitName": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "string | null"
    },
    "GetUnitFoodUsed": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetUnitFoodMade": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "GetFoodMade": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetFoodUsed": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "SetUnitUseFood": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "useFood",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetUnitRallyPoint": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "location | null"
    },
    "GetUnitRallyUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "unit | null"
    },
    "GetUnitRallyDestructable": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "destructable | null"
    },
    "IsUnitInGroup": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichGroup",
          "type": "group"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitInForce": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichForce",
          "type": "force"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitOwnedByPlayer": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitAlly": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitEnemy": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitVisible": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitDetected": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitInvisible": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitFogged": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitMasked": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitSelected": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitRace": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichRace",
          "type": "race"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitType": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichUnitType",
          "type": "unittype"
        }
      ],
      "returns": "boolean"
    },
    "IsUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichSpecifiedUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitInRange": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "otherUnit",
          "type": "unit"
        },
        {
          "name": "distance",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitInRangeXY": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "distance",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitInRangeLoc": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "distance",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitHidden": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitIllusion": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitInTransport": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichTransport",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitLoaded": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "IsHeroUnitId": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IsUnitIdType": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "whichUnitType",
          "type": "unittype"
        }
      ],
      "returns": "boolean"
    },
    "UnitShareVision": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "share",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitSuspendDecay": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "suspend",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitAddType": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichUnitType",
          "type": "unittype"
        }
      ],
      "returns": "boolean"
    },
    "UnitRemoveType": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichUnitType",
          "type": "unittype"
        }
      ],
      "returns": "boolean"
    },
    "UnitAddAbility": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilityId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitRemoveAbility": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilityId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitMakeAbilityPermanent": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "permanent",
          "type": "boolean"
        },
        {
          "name": "abilityId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "UnitRemoveBuffs": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "removePositive",
          "type": "boolean"
        },
        {
          "name": "removeNegative",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitRemoveBuffsEx": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "removePositive",
          "type": "boolean"
        },
        {
          "name": "removeNegative",
          "type": "boolean"
        },
        {
          "name": "magic",
          "type": "boolean"
        },
        {
          "name": "physical",
          "type": "boolean"
        },
        {
          "name": "timedLife",
          "type": "boolean"
        },
        {
          "name": "aura",
          "type": "boolean"
        },
        {
          "name": "autoDispel",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitHasBuffsEx": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "removePositive",
          "type": "boolean"
        },
        {
          "name": "removeNegative",
          "type": "boolean"
        },
        {
          "name": "magic",
          "type": "boolean"
        },
        {
          "name": "physical",
          "type": "boolean"
        },
        {
          "name": "timedLife",
          "type": "boolean"
        },
        {
          "name": "aura",
          "type": "boolean"
        },
        {
          "name": "autoDispel",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "UnitCountBuffsEx": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "removePositive",
          "type": "boolean"
        },
        {
          "name": "removeNegative",
          "type": "boolean"
        },
        {
          "name": "magic",
          "type": "boolean"
        },
        {
          "name": "physical",
          "type": "boolean"
        },
        {
          "name": "timedLife",
          "type": "boolean"
        },
        {
          "name": "aura",
          "type": "boolean"
        },
        {
          "name": "autoDispel",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "UnitAddSleep": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "add",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitCanSleep": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "UnitAddSleepPerm": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "add",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitCanSleepPerm": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "UnitIsSleeping": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "UnitWakeUp": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "UnitApplyTimedLife": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "buffId",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "UnitIgnoreAlarm": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "UnitIgnoreAlarmToggled": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "UnitResetCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "UnitSetConstructionProgress": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "constructionPercentage",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "UnitSetUpgradeProgress": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "upgradePercentage",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "UnitPauseTimedLife": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitSetUsesAltIcon": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitDamagePoint": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "delay",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "amount",
          "type": "number"
        },
        {
          "name": "attack",
          "type": "boolean"
        },
        {
          "name": "ranged",
          "type": "boolean"
        },
        {
          "name": "attackType",
          "type": "attacktype"
        },
        {
          "name": "damageType",
          "type": "damagetype"
        },
        {
          "name": "weaponType",
          "type": "weapontype"
        }
      ],
      "returns": "boolean"
    },
    "UnitDamageTarget": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "target",
          "type": "widget"
        },
        {
          "name": "amount",
          "type": "number"
        },
        {
          "name": "attack",
          "type": "boolean"
        },
        {
          "name": "ranged",
          "type": "boolean"
        },
        {
          "name": "attackType",
          "type": "attacktype"
        },
        {
          "name": "damageType",
          "type": "damagetype"
        },
        {
          "name": "weaponType",
          "type": "weapontype"
        }
      ],
      "returns": "boolean"
    },
    "IssueImmediateOrder": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "IssueImmediateOrderById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssuePointOrder": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssuePointOrderLoc": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "boolean"
    },
    "IssuePointOrderById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssuePointOrderByIdLoc": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "boolean"
    },
    "IssueTargetOrder": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueTargetOrderById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueInstantPointOrder": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "instantTargetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueInstantPointOrderById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "instantTargetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueInstantTargetOrder": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "string"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        },
        {
          "name": "instantTargetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueInstantTargetOrderById": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "order",
          "type": "number"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        },
        {
          "name": "instantTargetWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueBuildOrder": {
      "takes": [
        {
          "name": "whichPeon",
          "type": "unit"
        },
        {
          "name": "unitToBuild",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssueBuildOrderById": {
      "takes": [
        {
          "name": "whichPeon",
          "type": "unit"
        },
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssueNeutralImmediateOrder": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "neutralStructure",
          "type": "unit"
        },
        {
          "name": "unitToBuild",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "IssueNeutralImmediateOrderById": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "neutralStructure",
          "type": "unit"
        },
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssueNeutralPointOrder": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "neutralStructure",
          "type": "unit"
        },
        {
          "name": "unitToBuild",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssueNeutralPointOrderById": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "neutralStructure",
          "type": "unit"
        },
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "IssueNeutralTargetOrder": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "neutralStructure",
          "type": "unit"
        },
        {
          "name": "unitToBuild",
          "type": "string"
        },
        {
          "name": "target",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "IssueNeutralTargetOrderById": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "neutralStructure",
          "type": "unit"
        },
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "target",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "GetUnitCurrentOrder": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "SetResourceAmount": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "amount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AddResourceAmount": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "amount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetResourceAmount": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "WaygateGetDestinationX": {
      "takes": [
        {
          "name": "waygate",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "WaygateGetDestinationY": {
      "takes": [
        {
          "name": "waygate",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "WaygateSetDestination": {
      "takes": [
        {
          "name": "waygate",
          "type": "unit"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "WaygateActivate": {
      "takes": [
        {
          "name": "waygate",
          "type": "unit"
        },
        {
          "name": "activate",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "WaygateIsActive": {
      "takes": [
        {
          "name": "waygate",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "AddItemToAllStock": {
      "takes": [
        {
          "name": "itemId",
          "type": "number"
        },
        {
          "name": "currentStock",
          "type": "number"
        },
        {
          "name": "stockMax",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AddItemToStock": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "itemId",
          "type": "number"
        },
        {
          "name": "currentStock",
          "type": "number"
        },
        {
          "name": "stockMax",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AddUnitToAllStock": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "currentStock",
          "type": "number"
        },
        {
          "name": "stockMax",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AddUnitToStock": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "currentStock",
          "type": "number"
        },
        {
          "name": "stockMax",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveItemFromAllStock": {
      "takes": [
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveItemFromStock": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveUnitFromAllStock": {
      "takes": [
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveUnitFromStock": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetAllItemTypeSlots": {
      "takes": [
        {
          "name": "slots",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetAllUnitTypeSlots": {
      "takes": [
        {
          "name": "slots",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetItemTypeSlots": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "slots",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetUnitTypeSlots": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "slots",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetUnitUserData": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "SetUnitUserData": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "data",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "Player": {
      "takes": [
        {
          "name": "number",
          "type": "number"
        }
      ],
      "returns": "player | null"
    },
    "GetLocalPlayer": {
      "takes": [],
      "returns": "player | null"
    },
    "IsPlayerAlly": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "otherPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsPlayerEnemy": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "otherPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsPlayerInForce": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichForce",
          "type": "force"
        }
      ],
      "returns": "boolean"
    },
    "IsPlayerObserver": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsVisibleToPlayer": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsLocationVisibleToPlayer": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsFoggedToPlayer": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsLocationFoggedToPlayer": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsMaskedToPlayer": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "IsLocationMaskedToPlayer": {
      "takes": [
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "GetPlayerRace": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "race | null"
    },
    "GetPlayerId": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetPlayerUnitCount": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "includeIncomplete",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "GetPlayerTypedUnitCount": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "unitName",
          "type": "string"
        },
        {
          "name": "includeIncomplete",
          "type": "boolean"
        },
        {
          "name": "includeUpgrades",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "GetPlayerStructureCount": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "includeIncomplete",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "GetPlayerState": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichPlayerState",
          "type": "playerstate"
        }
      ],
      "returns": "number"
    },
    "GetPlayerScore": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichPlayerScore",
          "type": "playerscore"
        }
      ],
      "returns": "number"
    },
    "GetPlayerAlliance": {
      "takes": [
        {
          "name": "sourcePlayer",
          "type": "player"
        },
        {
          "name": "otherPlayer",
          "type": "player"
        },
        {
          "name": "whichAllianceSetting",
          "type": "alliancetype"
        }
      ],
      "returns": "boolean"
    },
    "GetPlayerHandicap": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetPlayerHandicapXP": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetPlayerHandicapReviveTime": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "GetPlayerHandicapDamage": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "SetPlayerHandicap": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "handicap",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerHandicapXP": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "handicap",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerHandicapReviveTime": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "handicap",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerHandicapDamage": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "handicap",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerTechMaxAllowed": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        },
        {
          "name": "maximum",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetPlayerTechMaxAllowed": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "AddPlayerTechResearched": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        },
        {
          "name": "levels",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetPlayerTechResearched": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        },
        {
          "name": "setToLevel",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetPlayerTechResearched": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        },
        {
          "name": "specificonly",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "GetPlayerTechCount": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        },
        {
          "name": "specificonly",
          "type": "boolean"
        }
      ],
      "returns": "number"
    },
    "SetPlayerUnitsOwner": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "newOwner",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CripplePlayer": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "toWhichPlayers",
          "type": "force"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetPlayerAbilityAvailable": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "abilid",
          "type": "number"
        },
        {
          "name": "avail",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetPlayerState": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichPlayerState",
          "type": "playerstate"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemovePlayer": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "gameResult",
          "type": "playergameresult"
        }
      ],
      "returns": "void"
    },
    "CachePlayerHeroData": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "SetFogStateRect": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "fogstate"
        },
        {
          "name": "where",
          "type": "rect"
        },
        {
          "name": "useSharedVision",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetFogStateRadius": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "fogstate"
        },
        {
          "name": "centerx",
          "type": "number"
        },
        {
          "name": "centerY",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "useSharedVision",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetFogStateRadiusLoc": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "fogstate"
        },
        {
          "name": "center",
          "type": "location"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "useSharedVision",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "FogMaskEnable": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsFogMaskEnabled": {
      "takes": [],
      "returns": "boolean"
    },
    "FogEnable": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsFogEnabled": {
      "takes": [],
      "returns": "boolean"
    },
    "CreateFogModifierRect": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "fogstate"
        },
        {
          "name": "where",
          "type": "rect"
        },
        {
          "name": "useSharedVision",
          "type": "boolean"
        },
        {
          "name": "afterUnits",
          "type": "boolean"
        }
      ],
      "returns": "fogmodifier | null"
    },
    "CreateFogModifierRadius": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "fogstate"
        },
        {
          "name": "centerx",
          "type": "number"
        },
        {
          "name": "centerY",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "useSharedVision",
          "type": "boolean"
        },
        {
          "name": "afterUnits",
          "type": "boolean"
        }
      ],
      "returns": "fogmodifier | null"
    },
    "CreateFogModifierRadiusLoc": {
      "takes": [
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "whichState",
          "type": "fogstate"
        },
        {
          "name": "center",
          "type": "location"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "useSharedVision",
          "type": "boolean"
        },
        {
          "name": "afterUnits",
          "type": "boolean"
        }
      ],
      "returns": "fogmodifier | null"
    },
    "DestroyFogModifier": {
      "takes": [
        {
          "name": "whichFogModifier",
          "type": "fogmodifier"
        }
      ],
      "returns": "void"
    },
    "FogModifierStart": {
      "takes": [
        {
          "name": "whichFogModifier",
          "type": "fogmodifier"
        }
      ],
      "returns": "void"
    },
    "FogModifierStop": {
      "takes": [
        {
          "name": "whichFogModifier",
          "type": "fogmodifier"
        }
      ],
      "returns": "void"
    },
    "VersionGet": {
      "takes": [],
      "returns": "version | null"
    },
    "VersionCompatible": {
      "takes": [
        {
          "name": "whichVersion",
          "type": "version"
        }
      ],
      "returns": "boolean"
    },
    "VersionSupported": {
      "takes": [
        {
          "name": "whichVersion",
          "type": "version"
        }
      ],
      "returns": "boolean"
    },
    "EndGame": {
      "takes": [
        {
          "name": "doScoreScreen",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "ChangeLevel": {
      "takes": [
        {
          "name": "newLevel",
          "type": "string"
        },
        {
          "name": "doScoreScreen",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "RestartGame": {
      "takes": [
        {
          "name": "doScoreScreen",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "ReloadGame": {
      "takes": [],
      "returns": "void"
    },
    "SetCampaignMenuRace": {
      "takes": [
        {
          "name": "r",
          "type": "race"
        }
      ],
      "returns": "void"
    },
    "SetCampaignMenuRaceEx": {
      "takes": [
        {
          "name": "campaignIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ForceCampaignSelectScreen": {
      "takes": [],
      "returns": "void"
    },
    "LoadGame": {
      "takes": [
        {
          "name": "saveFileName",
          "type": "string"
        },
        {
          "name": "doScoreScreen",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SaveGame": {
      "takes": [
        {
          "name": "saveFileName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "RenameSaveDirectory": {
      "takes": [
        {
          "name": "sourceDirName",
          "type": "string"
        },
        {
          "name": "destDirName",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "RemoveSaveDirectory": {
      "takes": [
        {
          "name": "sourceDirName",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "CopySaveGame": {
      "takes": [
        {
          "name": "sourceSaveName",
          "type": "string"
        },
        {
          "name": "destSaveName",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SaveGameExists": {
      "takes": [
        {
          "name": "saveName",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SetMaxCheckpointSaves": {
      "takes": [
        {
          "name": "maxCheckpointSaves",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SaveGameCheckpoint": {
      "takes": [
        {
          "name": "saveFileName",
          "type": "string"
        },
        {
          "name": "showWindow",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SyncSelections": {
      "takes": [],
      "returns": "void"
    },
    "SetFloatGameState": {
      "takes": [
        {
          "name": "whichFloatGameState",
          "type": "fgamestate"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetFloatGameState": {
      "takes": [
        {
          "name": "whichFloatGameState",
          "type": "fgamestate"
        }
      ],
      "returns": "number"
    },
    "SetIntegerGameState": {
      "takes": [
        {
          "name": "whichIntegerGameState",
          "type": "igamestate"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetIntegerGameState": {
      "takes": [
        {
          "name": "whichIntegerGameState",
          "type": "igamestate"
        }
      ],
      "returns": "number"
    },
    "SetTutorialCleared": {
      "takes": [
        {
          "name": "cleared",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetMissionAvailable": {
      "takes": [
        {
          "name": "campaignNumber",
          "type": "number"
        },
        {
          "name": "missionNumber",
          "type": "number"
        },
        {
          "name": "available",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetCampaignAvailable": {
      "takes": [
        {
          "name": "campaignNumber",
          "type": "number"
        },
        {
          "name": "available",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetOpCinematicAvailable": {
      "takes": [
        {
          "name": "campaignNumber",
          "type": "number"
        },
        {
          "name": "available",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetEdCinematicAvailable": {
      "takes": [
        {
          "name": "campaignNumber",
          "type": "number"
        },
        {
          "name": "available",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetDefaultDifficulty": {
      "takes": [],
      "returns": "gamedifficulty | null"
    },
    "SetDefaultDifficulty": {
      "takes": [
        {
          "name": "g",
          "type": "gamedifficulty"
        }
      ],
      "returns": "void"
    },
    "SetCustomCampaignButtonVisible": {
      "takes": [
        {
          "name": "whichButton",
          "type": "number"
        },
        {
          "name": "visible",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetCustomCampaignButtonVisible": {
      "takes": [
        {
          "name": "whichButton",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "DoNotSaveReplay": {
      "takes": [],
      "returns": "void"
    },
    "DialogCreate": {
      "takes": [],
      "returns": "dialog | null"
    },
    "DialogDestroy": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "dialog"
        }
      ],
      "returns": "void"
    },
    "DialogClear": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "dialog"
        }
      ],
      "returns": "void"
    },
    "DialogSetMessage": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "dialog"
        },
        {
          "name": "messageText",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "DialogAddButton": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "dialog"
        },
        {
          "name": "buttonText",
          "type": "string"
        },
        {
          "name": "hotkey",
          "type": "number"
        }
      ],
      "returns": "button | null"
    },
    "DialogAddQuitButton": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "dialog"
        },
        {
          "name": "doScoreScreen",
          "type": "boolean"
        },
        {
          "name": "buttonText",
          "type": "string"
        },
        {
          "name": "hotkey",
          "type": "number"
        }
      ],
      "returns": "button | null"
    },
    "DialogDisplay": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichDialog",
          "type": "dialog"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "ReloadGameCachesFromDisk": {
      "takes": [],
      "returns": "boolean"
    },
    "InitGameCache": {
      "takes": [
        {
          "name": "campaignFile",
          "type": "string"
        }
      ],
      "returns": "gamecache | null"
    },
    "SaveGameCache": {
      "takes": [
        {
          "name": "whichCache",
          "type": "gamecache"
        }
      ],
      "returns": "boolean"
    },
    "StoreInteger": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "StoreReal": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "StoreBoolean": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "StoreUnit": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "StoreString": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SyncStoredInteger": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SyncStoredReal": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SyncStoredBoolean": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SyncStoredUnit": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SyncStoredString": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "HaveStoredInteger": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "HaveStoredReal": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "HaveStoredBoolean": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "HaveStoredUnit": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "HaveStoredString": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "FlushGameCache": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        }
      ],
      "returns": "void"
    },
    "FlushStoredMission": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "FlushStoredInteger": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "FlushStoredReal": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "FlushStoredBoolean": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "FlushStoredUnit": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "FlushStoredString": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "GetStoredInteger": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "GetStoredReal": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "GetStoredBoolean": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "GetStoredString": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "string | null"
    },
    "RestoreUnit": {
      "takes": [
        {
          "name": "cache",
          "type": "gamecache"
        },
        {
          "name": "missionKey",
          "type": "string"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "facing",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "InitHashtable": {
      "takes": [],
      "returns": "hashtable | null"
    },
    "SaveInteger": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SaveReal": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SaveBoolean": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SaveStr": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SavePlayerHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "SaveWidgetHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichWidget",
          "type": "widget"
        }
      ],
      "returns": "boolean"
    },
    "SaveDestructableHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichDestructable",
          "type": "destructable"
        }
      ],
      "returns": "boolean"
    },
    "SaveItemHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "boolean"
    },
    "SaveUnitHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "SaveAbilityHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichAbility",
          "type": "ability"
        }
      ],
      "returns": "boolean"
    },
    "SaveTimerHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTimer",
          "type": "timer"
        }
      ],
      "returns": "boolean"
    },
    "SaveTriggerHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTrigger",
          "type": "trigger"
        }
      ],
      "returns": "boolean"
    },
    "SaveTriggerConditionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTriggercondition",
          "type": "triggercondition"
        }
      ],
      "returns": "boolean"
    },
    "SaveTriggerActionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTriggeraction",
          "type": "triggeraction"
        }
      ],
      "returns": "boolean"
    },
    "SaveTriggerEventHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichEvent",
          "type": "event"
        }
      ],
      "returns": "boolean"
    },
    "SaveForceHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichForce",
          "type": "force"
        }
      ],
      "returns": "boolean"
    },
    "SaveGroupHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichGroup",
          "type": "group"
        }
      ],
      "returns": "boolean"
    },
    "SaveLocationHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichLocation",
          "type": "location"
        }
      ],
      "returns": "boolean"
    },
    "SaveRectHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichRect",
          "type": "rect"
        }
      ],
      "returns": "boolean"
    },
    "SaveBooleanExprHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichBoolexpr",
          "type": "boolexpr"
        }
      ],
      "returns": "boolean"
    },
    "SaveSoundHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichSound",
          "type": "sound"
        }
      ],
      "returns": "boolean"
    },
    "SaveEffectHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "boolean"
    },
    "SaveUnitPoolHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichUnitpool",
          "type": "unitpool"
        }
      ],
      "returns": "boolean"
    },
    "SaveItemPoolHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichItempool",
          "type": "itempool"
        }
      ],
      "returns": "boolean"
    },
    "SaveQuestHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "boolean"
    },
    "SaveQuestItemHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichQuestitem",
          "type": "questitem"
        }
      ],
      "returns": "boolean"
    },
    "SaveDefeatConditionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichDefeatcondition",
          "type": "defeatcondition"
        }
      ],
      "returns": "boolean"
    },
    "SaveTimerDialogHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTimerdialog",
          "type": "timerdialog"
        }
      ],
      "returns": "boolean"
    },
    "SaveLeaderboardHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichLeaderboard",
          "type": "leaderboard"
        }
      ],
      "returns": "boolean"
    },
    "SaveMultiboardHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichMultiboard",
          "type": "multiboard"
        }
      ],
      "returns": "boolean"
    },
    "SaveMultiboardItemHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichMultiboarditem",
          "type": "multiboarditem"
        }
      ],
      "returns": "boolean"
    },
    "SaveTrackableHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTrackable",
          "type": "trackable"
        }
      ],
      "returns": "boolean"
    },
    "SaveDialogHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichDialog",
          "type": "dialog"
        }
      ],
      "returns": "boolean"
    },
    "SaveButtonHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichButton",
          "type": "button"
        }
      ],
      "returns": "boolean"
    },
    "SaveTextTagHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichTexttag",
          "type": "texttag"
        }
      ],
      "returns": "boolean"
    },
    "SaveLightningHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichLightning",
          "type": "lightning"
        }
      ],
      "returns": "boolean"
    },
    "SaveImageHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichImage",
          "type": "image"
        }
      ],
      "returns": "boolean"
    },
    "SaveUbersplatHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichUbersplat",
          "type": "ubersplat"
        }
      ],
      "returns": "boolean"
    },
    "SaveRegionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichRegion",
          "type": "region"
        }
      ],
      "returns": "boolean"
    },
    "SaveFogStateHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichFogState",
          "type": "fogstate"
        }
      ],
      "returns": "boolean"
    },
    "SaveFogModifierHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichFogModifier",
          "type": "fogmodifier"
        }
      ],
      "returns": "boolean"
    },
    "SaveAgentHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichAgent",
          "type": "agent"
        }
      ],
      "returns": "boolean"
    },
    "SaveHashtableHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichHashtable",
          "type": "hashtable"
        }
      ],
      "returns": "boolean"
    },
    "SaveFrameHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        },
        {
          "name": "whichFrameHandle",
          "type": "framehandle"
        }
      ],
      "returns": "boolean"
    },
    "LoadInteger": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "LoadReal": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "LoadBoolean": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "LoadStr": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "LoadPlayerHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "player | null"
    },
    "LoadWidgetHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "widget | null"
    },
    "LoadDestructableHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "LoadItemHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "LoadUnitHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "LoadAbilityHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "ability | null"
    },
    "LoadTimerHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "timer | null"
    },
    "LoadTriggerHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "trigger | null"
    },
    "LoadTriggerConditionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "triggercondition | null"
    },
    "LoadTriggerActionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "triggeraction | null"
    },
    "LoadTriggerEventHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "event | null"
    },
    "LoadForceHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "force | null"
    },
    "LoadGroupHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "group | null"
    },
    "LoadLocationHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "location | null"
    },
    "LoadRectHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "rect | null"
    },
    "LoadBooleanExprHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolexpr | null"
    },
    "LoadSoundHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "sound | null"
    },
    "LoadEffectHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "effect | null"
    },
    "LoadUnitPoolHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "unitpool | null"
    },
    "LoadItemPoolHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "itempool | null"
    },
    "LoadQuestHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "quest | null"
    },
    "LoadQuestItemHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "questitem | null"
    },
    "LoadDefeatConditionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "defeatcondition | null"
    },
    "LoadTimerDialogHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "timerdialog | null"
    },
    "LoadLeaderboardHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "leaderboard | null"
    },
    "LoadMultiboardHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "multiboard | null"
    },
    "LoadMultiboardItemHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "multiboarditem | null"
    },
    "LoadTrackableHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "trackable | null"
    },
    "LoadDialogHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "dialog | null"
    },
    "LoadButtonHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "button | null"
    },
    "LoadTextTagHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "texttag | null"
    },
    "LoadLightningHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "lightning | null"
    },
    "LoadImageHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "image | null"
    },
    "LoadUbersplatHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "ubersplat | null"
    },
    "LoadRegionHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "region | null"
    },
    "LoadFogStateHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "fogstate | null"
    },
    "LoadFogModifierHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "fogmodifier | null"
    },
    "LoadHashtableHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "hashtable | null"
    },
    "LoadFrameHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "HaveSavedInteger": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "HaveSavedReal": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "HaveSavedBoolean": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "HaveSavedString": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "HaveSavedHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "RemoveSavedInteger": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveSavedReal": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveSavedBoolean": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveSavedString": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "RemoveSavedHandle": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        },
        {
          "name": "childKey",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "FlushParentHashtable": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        }
      ],
      "returns": "void"
    },
    "FlushChildHashtable": {
      "takes": [
        {
          "name": "table",
          "type": "hashtable"
        },
        {
          "name": "parentKey",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetRandomInt": {
      "takes": [
        {
          "name": "lowBound",
          "type": "number"
        },
        {
          "name": "highBound",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetRandomReal": {
      "takes": [
        {
          "name": "lowBound",
          "type": "number"
        },
        {
          "name": "highBound",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "CreateUnitPool": {
      "takes": [],
      "returns": "unitpool | null"
    },
    "DestroyUnitPool": {
      "takes": [
        {
          "name": "whichPool",
          "type": "unitpool"
        }
      ],
      "returns": "void"
    },
    "UnitPoolAddUnitType": {
      "takes": [
        {
          "name": "whichPool",
          "type": "unitpool"
        },
        {
          "name": "unitId",
          "type": "number"
        },
        {
          "name": "weight",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "UnitPoolRemoveUnitType": {
      "takes": [
        {
          "name": "whichPool",
          "type": "unitpool"
        },
        {
          "name": "unitId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PlaceRandomUnit": {
      "takes": [
        {
          "name": "whichPool",
          "type": "unitpool"
        },
        {
          "name": "forWhichPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "facing",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "CreateItemPool": {
      "takes": [],
      "returns": "itempool | null"
    },
    "DestroyItemPool": {
      "takes": [
        {
          "name": "whichItemPool",
          "type": "itempool"
        }
      ],
      "returns": "void"
    },
    "ItemPoolAddItemType": {
      "takes": [
        {
          "name": "whichItemPool",
          "type": "itempool"
        },
        {
          "name": "itemId",
          "type": "number"
        },
        {
          "name": "weight",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ItemPoolRemoveItemType": {
      "takes": [
        {
          "name": "whichItemPool",
          "type": "itempool"
        },
        {
          "name": "itemId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PlaceRandomItem": {
      "takes": [
        {
          "name": "whichItemPool",
          "type": "itempool"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "ChooseRandomCreep": {
      "takes": [
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "ChooseRandomNPBuilding": {
      "takes": [],
      "returns": "number"
    },
    "ChooseRandomItem": {
      "takes": [
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "ChooseRandomItemEx": {
      "takes": [
        {
          "name": "whichType",
          "type": "itemtype"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "SetRandomSeed": {
      "takes": [
        {
          "name": "seed",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTerrainFog": {
      "takes": [
        {
          "name": "a",
          "type": "number"
        },
        {
          "name": "b",
          "type": "number"
        },
        {
          "name": "c",
          "type": "number"
        },
        {
          "name": "d",
          "type": "number"
        },
        {
          "name": "e",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ResetTerrainFog": {
      "takes": [],
      "returns": "void"
    },
    "SetUnitFog": {
      "takes": [
        {
          "name": "a",
          "type": "number"
        },
        {
          "name": "b",
          "type": "number"
        },
        {
          "name": "c",
          "type": "number"
        },
        {
          "name": "d",
          "type": "number"
        },
        {
          "name": "e",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTerrainFogEx": {
      "takes": [
        {
          "name": "style",
          "type": "number"
        },
        {
          "name": "zstart",
          "type": "number"
        },
        {
          "name": "zend",
          "type": "number"
        },
        {
          "name": "density",
          "type": "number"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "DisplayTextToPlayer": {
      "takes": [
        {
          "name": "toPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "message",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "DisplayTimedTextToPlayer": {
      "takes": [
        {
          "name": "toPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "message",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "DisplayTimedTextFromPlayer": {
      "takes": [
        {
          "name": "toPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "message",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "ClearTextMessages": {
      "takes": [],
      "returns": "void"
    },
    "SetDayNightModels": {
      "takes": [
        {
          "name": "terrainDNCFile",
          "type": "string"
        },
        {
          "name": "unitDNCFile",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetPortraitLight": {
      "takes": [
        {
          "name": "portraitDNCFile",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetSkyModel": {
      "takes": [
        {
          "name": "skyModelFile",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "EnableUserControl": {
      "takes": [
        {
          "name": "b",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "EnableUserUI": {
      "takes": [
        {
          "name": "b",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SuspendTimeOfDay": {
      "takes": [
        {
          "name": "b",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetTimeOfDayScale": {
      "takes": [
        {
          "name": "r",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetTimeOfDayScale": {
      "takes": [],
      "returns": "number"
    },
    "ShowInterface": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        },
        {
          "name": "fadeDuration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PauseGame": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "UnitAddIndicator": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AddIndicator": {
      "takes": [
        {
          "name": "whichWidget",
          "type": "widget"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PingMinimap": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PingMinimapEx": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "extraEffects",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CreateMinimapIconOnUnit": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "pingPath",
          "type": "string"
        },
        {
          "name": "fogVisibility",
          "type": "fogstate"
        }
      ],
      "returns": "minimapicon | null"
    },
    "CreateMinimapIconAtLoc": {
      "takes": [
        {
          "name": "where",
          "type": "location"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "pingPath",
          "type": "string"
        },
        {
          "name": "fogVisibility",
          "type": "fogstate"
        }
      ],
      "returns": "minimapicon | null"
    },
    "CreateMinimapIcon": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "pingPath",
          "type": "string"
        },
        {
          "name": "fogVisibility",
          "type": "fogstate"
        }
      ],
      "returns": "minimapicon | null"
    },
    "SkinManagerGetLocalPath": {
      "takes": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "string | null"
    },
    "DestroyMinimapIcon": {
      "takes": [
        {
          "name": "pingId",
          "type": "minimapicon"
        }
      ],
      "returns": "void"
    },
    "SetMinimapIconVisible": {
      "takes": [
        {
          "name": "whichMinimapIcon",
          "type": "minimapicon"
        },
        {
          "name": "visible",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetMinimapIconOrphanDestroy": {
      "takes": [
        {
          "name": "whichMinimapIcon",
          "type": "minimapicon"
        },
        {
          "name": "doDestroy",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "EnableOcclusion": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetIntroShotText": {
      "takes": [
        {
          "name": "introText",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetIntroShotModel": {
      "takes": [
        {
          "name": "introModelPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "EnableWorldFogBoundary": {
      "takes": [
        {
          "name": "b",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "PlayModelCinematic": {
      "takes": [
        {
          "name": "modelName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "PlayCinematic": {
      "takes": [
        {
          "name": "movieName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "ForceUIKey": {
      "takes": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "ForceUICancel": {
      "takes": [],
      "returns": "void"
    },
    "DisplayLoadDialog": {
      "takes": [],
      "returns": "void"
    },
    "SetAltMinimapIcon": {
      "takes": [
        {
          "name": "iconPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "DisableRestartMission": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CreateTextTag": {
      "takes": [],
      "returns": "texttag | null"
    },
    "DestroyTextTag": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        }
      ],
      "returns": "void"
    },
    "SetTextTagText": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "s",
          "type": "string"
        },
        {
          "name": "height",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagPos": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "heightOffset",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagPosUnit": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "heightOffset",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagColor": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagVelocity": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "xvel",
          "type": "number"
        },
        {
          "name": "yvel",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagVisibility": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetTextTagSuspended": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetTextTagPermanent": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetTextTagAge": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "age",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagLifespan": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "lifespan",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetTextTagFadepoint": {
      "takes": [
        {
          "name": "t",
          "type": "texttag"
        },
        {
          "name": "fadepoint",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetReservedLocalHeroButtons": {
      "takes": [
        {
          "name": "reserved",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetAllyColorFilterState": {
      "takes": [],
      "returns": "number"
    },
    "SetAllyColorFilterState": {
      "takes": [
        {
          "name": "state",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetCreepCampFilterState": {
      "takes": [],
      "returns": "boolean"
    },
    "SetCreepCampFilterState": {
      "takes": [
        {
          "name": "state",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "EnableMinimapFilterButtons": {
      "takes": [
        {
          "name": "enableAlly",
          "type": "boolean"
        },
        {
          "name": "enableCreep",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "EnableDragSelect": {
      "takes": [
        {
          "name": "state",
          "type": "boolean"
        },
        {
          "name": "ui",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "EnablePreSelect": {
      "takes": [
        {
          "name": "state",
          "type": "boolean"
        },
        {
          "name": "ui",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "EnableSelect": {
      "takes": [
        {
          "name": "state",
          "type": "boolean"
        },
        {
          "name": "ui",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CreateTrackable": {
      "takes": [
        {
          "name": "trackableModelPath",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "facing",
          "type": "number"
        }
      ],
      "returns": "trackable | null"
    },
    "CreateQuest": {
      "takes": [],
      "returns": "quest | null"
    },
    "DestroyQuest": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "void"
    },
    "QuestSetTitle": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "title",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "QuestSetDescription": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "QuestSetIconPath": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "iconPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "QuestSetRequired": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "required",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "QuestSetCompleted": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "completed",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "QuestSetDiscovered": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "discovered",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "QuestSetFailed": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "failed",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "QuestSetEnabled": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        },
        {
          "name": "enabled",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsQuestRequired": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "boolean"
    },
    "IsQuestCompleted": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "boolean"
    },
    "IsQuestDiscovered": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "boolean"
    },
    "IsQuestFailed": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "boolean"
    },
    "IsQuestEnabled": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "boolean"
    },
    "QuestCreateItem": {
      "takes": [
        {
          "name": "whichQuest",
          "type": "quest"
        }
      ],
      "returns": "questitem | null"
    },
    "QuestItemSetDescription": {
      "takes": [
        {
          "name": "whichQuestItem",
          "type": "questitem"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "QuestItemSetCompleted": {
      "takes": [
        {
          "name": "whichQuestItem",
          "type": "questitem"
        },
        {
          "name": "completed",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsQuestItemCompleted": {
      "takes": [
        {
          "name": "whichQuestItem",
          "type": "questitem"
        }
      ],
      "returns": "boolean"
    },
    "CreateDefeatCondition": {
      "takes": [],
      "returns": "defeatcondition | null"
    },
    "DestroyDefeatCondition": {
      "takes": [
        {
          "name": "whichCondition",
          "type": "defeatcondition"
        }
      ],
      "returns": "void"
    },
    "DefeatConditionSetDescription": {
      "takes": [
        {
          "name": "whichCondition",
          "type": "defeatcondition"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "FlashQuestDialogButton": {
      "takes": [],
      "returns": "void"
    },
    "ForceQuestDialogUpdate": {
      "takes": [],
      "returns": "void"
    },
    "CreateTimerDialog": {
      "takes": [
        {
          "name": "t",
          "type": "timer"
        }
      ],
      "returns": "timerdialog | null"
    },
    "DestroyTimerDialog": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        }
      ],
      "returns": "void"
    },
    "TimerDialogSetTitle": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        },
        {
          "name": "title",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "TimerDialogSetTitleColor": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "TimerDialogSetTimeColor": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "TimerDialogSetSpeed": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        },
        {
          "name": "speedMultFactor",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "TimerDialogDisplay": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        },
        {
          "name": "display",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsTimerDialogDisplayed": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        }
      ],
      "returns": "boolean"
    },
    "TimerDialogSetRealTimeRemaining": {
      "takes": [
        {
          "name": "whichDialog",
          "type": "timerdialog"
        },
        {
          "name": "timeRemaining",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CreateLeaderboard": {
      "takes": [],
      "returns": "leaderboard | null"
    },
    "DestroyLeaderboard": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        }
      ],
      "returns": "void"
    },
    "LeaderboardDisplay": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsLeaderboardDisplayed": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        }
      ],
      "returns": "boolean"
    },
    "LeaderboardGetItemCount": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        }
      ],
      "returns": "number"
    },
    "LeaderboardSetSizeByItemCount": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "count",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "LeaderboardAddItem": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "p",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "LeaderboardRemoveItem": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "LeaderboardRemovePlayerItem": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "p",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "LeaderboardClear": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSortItemsByValue": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "ascending",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSortItemsByPlayer": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "ascending",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSortItemsByLabel": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "ascending",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "LeaderboardHasPlayerItem": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "p",
          "type": "player"
        }
      ],
      "returns": "boolean"
    },
    "LeaderboardGetPlayerIndex": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "p",
          "type": "player"
        }
      ],
      "returns": "number"
    },
    "LeaderboardSetLabel": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "label",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "LeaderboardGetLabelText": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        }
      ],
      "returns": "string | null"
    },
    "PlayerSetLeaderboard": {
      "takes": [
        {
          "name": "toPlayer",
          "type": "player"
        },
        {
          "name": "lb",
          "type": "leaderboard"
        }
      ],
      "returns": "void"
    },
    "PlayerGetLeaderboard": {
      "takes": [
        {
          "name": "toPlayer",
          "type": "player"
        }
      ],
      "returns": "leaderboard | null"
    },
    "LeaderboardSetLabelColor": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetValueColor": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetStyle": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "showLabel",
          "type": "boolean"
        },
        {
          "name": "showNames",
          "type": "boolean"
        },
        {
          "name": "showValues",
          "type": "boolean"
        },
        {
          "name": "showIcons",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetItemValue": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "whichItem",
          "type": "number"
        },
        {
          "name": "val",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetItemLabel": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "whichItem",
          "type": "number"
        },
        {
          "name": "val",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetItemStyle": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "whichItem",
          "type": "number"
        },
        {
          "name": "showLabel",
          "type": "boolean"
        },
        {
          "name": "showValue",
          "type": "boolean"
        },
        {
          "name": "showIcon",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetItemLabelColor": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "whichItem",
          "type": "number"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "LeaderboardSetItemValueColor": {
      "takes": [
        {
          "name": "lb",
          "type": "leaderboard"
        },
        {
          "name": "whichItem",
          "type": "number"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CreateMultiboard": {
      "takes": [],
      "returns": "multiboard | null"
    },
    "DestroyMultiboard": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "void"
    },
    "MultiboardDisplay": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsMultiboardDisplayed": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "boolean"
    },
    "MultiboardMinimize": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "minimize",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsMultiboardMinimized": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "boolean"
    },
    "MultiboardClear": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetTitleText": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "label",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "MultiboardGetTitleText": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "string | null"
    },
    "MultiboardSetTitleTextColor": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardGetRowCount": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "number"
    },
    "MultiboardGetColumnCount": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        }
      ],
      "returns": "number"
    },
    "MultiboardSetColumnCount": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "count",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetRowCount": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "count",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemsStyle": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "showValues",
          "type": "boolean"
        },
        {
          "name": "showIcons",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemsValue": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemsValueColor": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemsWidth": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "width",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemsIcon": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "iconPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "MultiboardGetItem": {
      "takes": [
        {
          "name": "lb",
          "type": "multiboard"
        },
        {
          "name": "row",
          "type": "number"
        },
        {
          "name": "column",
          "type": "number"
        }
      ],
      "returns": "multiboarditem | null"
    },
    "MultiboardReleaseItem": {
      "takes": [
        {
          "name": "mbi",
          "type": "multiboarditem"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemStyle": {
      "takes": [
        {
          "name": "mbi",
          "type": "multiboarditem"
        },
        {
          "name": "showValue",
          "type": "boolean"
        },
        {
          "name": "showIcon",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemValue": {
      "takes": [
        {
          "name": "mbi",
          "type": "multiboarditem"
        },
        {
          "name": "val",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemValueColor": {
      "takes": [
        {
          "name": "mbi",
          "type": "multiboarditem"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemWidth": {
      "takes": [
        {
          "name": "mbi",
          "type": "multiboarditem"
        },
        {
          "name": "width",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "MultiboardSetItemIcon": {
      "takes": [
        {
          "name": "mbi",
          "type": "multiboarditem"
        },
        {
          "name": "iconFileName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "MultiboardSuppressDisplay": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetCameraPosition": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCameraQuickPosition": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCameraBounds": {
      "takes": [
        {
          "name": "x1",
          "type": "number"
        },
        {
          "name": "y1",
          "type": "number"
        },
        {
          "name": "x2",
          "type": "number"
        },
        {
          "name": "y2",
          "type": "number"
        },
        {
          "name": "x3",
          "type": "number"
        },
        {
          "name": "y3",
          "type": "number"
        },
        {
          "name": "x4",
          "type": "number"
        },
        {
          "name": "y4",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "StopCamera": {
      "takes": [],
      "returns": "void"
    },
    "ResetToGameCamera": {
      "takes": [
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PanCameraTo": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PanCameraToTimed": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PanCameraToWithZ": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "zOffsetDest",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PanCameraToTimedWithZ": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "zOffsetDest",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCinematicCamera": {
      "takes": [
        {
          "name": "cameraModelFile",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetCameraRotateMode": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radiansToSweep",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCameraField": {
      "takes": [
        {
          "name": "whichField",
          "type": "camerafield"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AdjustCameraField": {
      "takes": [
        {
          "name": "whichField",
          "type": "camerafield"
        },
        {
          "name": "offset",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCameraTargetController": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "xoffset",
          "type": "number"
        },
        {
          "name": "yoffset",
          "type": "number"
        },
        {
          "name": "inheritOrientation",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetCameraOrientController": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "xoffset",
          "type": "number"
        },
        {
          "name": "yoffset",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CreateCameraSetup": {
      "takes": [],
      "returns": "camerasetup | null"
    },
    "CameraSetupSetField": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "whichField",
          "type": "camerafield"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetupGetField": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "whichField",
          "type": "camerafield"
        }
      ],
      "returns": "number"
    },
    "CameraSetupSetDestPosition": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetupGetDestPositionLoc": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        }
      ],
      "returns": "location | null"
    },
    "CameraSetupGetDestPositionX": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        }
      ],
      "returns": "number"
    },
    "CameraSetupGetDestPositionY": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        }
      ],
      "returns": "number"
    },
    "CameraSetupApply": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "doPan",
          "type": "boolean"
        },
        {
          "name": "panTimed",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CameraSetupApplyWithZ": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "zDestOffset",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetupApplyForceDuration": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "doPan",
          "type": "boolean"
        },
        {
          "name": "forceDuration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetupApplyForceDurationWithZ": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "zDestOffset",
          "type": "number"
        },
        {
          "name": "forceDuration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzCameraSetupSetLabel": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "label",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzCameraSetupGetLabel": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        }
      ],
      "returns": "string | null"
    },
    "CameraSetTargetNoise": {
      "takes": [
        {
          "name": "mag",
          "type": "number"
        },
        {
          "name": "velocity",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetSourceNoise": {
      "takes": [
        {
          "name": "mag",
          "type": "number"
        },
        {
          "name": "velocity",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetTargetNoiseEx": {
      "takes": [
        {
          "name": "mag",
          "type": "number"
        },
        {
          "name": "velocity",
          "type": "number"
        },
        {
          "name": "vertOnly",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CameraSetSourceNoiseEx": {
      "takes": [
        {
          "name": "mag",
          "type": "number"
        },
        {
          "name": "velocity",
          "type": "number"
        },
        {
          "name": "vertOnly",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CameraSetSmoothingFactor": {
      "takes": [
        {
          "name": "factor",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetFocalDistance": {
      "takes": [
        {
          "name": "distance",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CameraSetDepthOfFieldScale": {
      "takes": [
        {
          "name": "scale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterTexture": {
      "takes": [
        {
          "name": "filename",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterBlendMode": {
      "takes": [
        {
          "name": "whichMode",
          "type": "blendmode"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterTexMapFlags": {
      "takes": [
        {
          "name": "whichFlags",
          "type": "texmapflags"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterStartUV": {
      "takes": [
        {
          "name": "minu",
          "type": "number"
        },
        {
          "name": "minv",
          "type": "number"
        },
        {
          "name": "maxu",
          "type": "number"
        },
        {
          "name": "maxv",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterEndUV": {
      "takes": [
        {
          "name": "minu",
          "type": "number"
        },
        {
          "name": "minv",
          "type": "number"
        },
        {
          "name": "maxu",
          "type": "number"
        },
        {
          "name": "maxv",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterStartColor": {
      "takes": [
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterEndColor": {
      "takes": [
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetCineFilterDuration": {
      "takes": [
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "DisplayCineFilter": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "IsCineFilterDisplayed": {
      "takes": [],
      "returns": "boolean"
    },
    "SetCinematicScene": {
      "takes": [
        {
          "name": "portraitUnitId",
          "type": "number"
        },
        {
          "name": "color",
          "type": "playercolor"
        },
        {
          "name": "speakerTitle",
          "type": "string"
        },
        {
          "name": "text",
          "type": "string"
        },
        {
          "name": "sceneDuration",
          "type": "number"
        },
        {
          "name": "voiceoverDuration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "EndCinematicScene": {
      "takes": [],
      "returns": "void"
    },
    "ForceCinematicSubtitles": {
      "takes": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetCinematicAudio": {
      "takes": [
        {
          "name": "cinematicAudio",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetCameraMargin": {
      "takes": [
        {
          "name": "whichMargin",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetCameraBoundMinX": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraBoundMinY": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraBoundMaxX": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraBoundMaxY": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraField": {
      "takes": [
        {
          "name": "whichField",
          "type": "camerafield"
        }
      ],
      "returns": "number"
    },
    "GetCameraTargetPositionX": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraTargetPositionY": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraTargetPositionZ": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraTargetPositionLoc": {
      "takes": [],
      "returns": "location | null"
    },
    "GetCameraEyePositionX": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraEyePositionY": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraEyePositionZ": {
      "takes": [],
      "returns": "number"
    },
    "GetCameraEyePositionLoc": {
      "takes": [],
      "returns": "location | null"
    },
    "NewSoundEnvironment": {
      "takes": [
        {
          "name": "environmentName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "CreateSound": {
      "takes": [
        {
          "name": "fileName",
          "type": "string"
        },
        {
          "name": "looping",
          "type": "boolean"
        },
        {
          "name": "is3D",
          "type": "boolean"
        },
        {
          "name": "stopwhenoutofrange",
          "type": "boolean"
        },
        {
          "name": "fadeInRate",
          "type": "number"
        },
        {
          "name": "fadeOutRate",
          "type": "number"
        },
        {
          "name": "eaxSetting",
          "type": "string"
        }
      ],
      "returns": "sound | null"
    },
    "CreateSoundFilenameWithLabel": {
      "takes": [
        {
          "name": "fileName",
          "type": "string"
        },
        {
          "name": "looping",
          "type": "boolean"
        },
        {
          "name": "is3D",
          "type": "boolean"
        },
        {
          "name": "stopwhenoutofrange",
          "type": "boolean"
        },
        {
          "name": "fadeInRate",
          "type": "number"
        },
        {
          "name": "fadeOutRate",
          "type": "number"
        },
        {
          "name": "SLKEntryName",
          "type": "string"
        }
      ],
      "returns": "sound | null"
    },
    "CreateSoundFromLabel": {
      "takes": [
        {
          "name": "soundLabel",
          "type": "string"
        },
        {
          "name": "looping",
          "type": "boolean"
        },
        {
          "name": "is3D",
          "type": "boolean"
        },
        {
          "name": "stopwhenoutofrange",
          "type": "boolean"
        },
        {
          "name": "fadeInRate",
          "type": "number"
        },
        {
          "name": "fadeOutRate",
          "type": "number"
        }
      ],
      "returns": "sound | null"
    },
    "CreateMIDISound": {
      "takes": [
        {
          "name": "soundLabel",
          "type": "string"
        },
        {
          "name": "fadeInRate",
          "type": "number"
        },
        {
          "name": "fadeOutRate",
          "type": "number"
        }
      ],
      "returns": "sound | null"
    },
    "SetSoundParamsFromLabel": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "soundLabel",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "SetSoundDistanceCutoff": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "cutoff",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundChannel": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "channel",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundVolume": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "volume",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundPitch": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "pitch",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundPlayPosition": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "millisecs",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundDistances": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "minDist",
          "type": "number"
        },
        {
          "name": "maxDist",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundConeAngles": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "inside",
          "type": "number"
        },
        {
          "name": "outside",
          "type": "number"
        },
        {
          "name": "outsideVolume",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundConeOrientation": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundPosition": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundVelocity": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "AttachSoundToUnit": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "StartSound": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "void"
    },
    "StopSound": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "killWhenDone",
          "type": "boolean"
        },
        {
          "name": "fadeOut",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "KillSoundWhenDone": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "void"
    },
    "SetMapMusic": {
      "takes": [
        {
          "name": "musicName",
          "type": "string"
        },
        {
          "name": "random",
          "type": "boolean"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "ClearMapMusic": {
      "takes": [],
      "returns": "void"
    },
    "PlayMusic": {
      "takes": [
        {
          "name": "musicName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "PlayMusicEx": {
      "takes": [
        {
          "name": "musicName",
          "type": "string"
        },
        {
          "name": "frommsecs",
          "type": "number"
        },
        {
          "name": "fadeinmsecs",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "StopMusic": {
      "takes": [
        {
          "name": "fadeOut",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "ResumeMusic": {
      "takes": [],
      "returns": "void"
    },
    "PlayThematicMusic": {
      "takes": [
        {
          "name": "musicFileName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "PlayThematicMusicEx": {
      "takes": [
        {
          "name": "musicFileName",
          "type": "string"
        },
        {
          "name": "frommsecs",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "EndThematicMusic": {
      "takes": [],
      "returns": "void"
    },
    "SetMusicVolume": {
      "takes": [
        {
          "name": "volume",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetMusicPlayPosition": {
      "takes": [
        {
          "name": "millisecs",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetThematicMusicVolume": {
      "takes": [
        {
          "name": "volume",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetThematicMusicPlayPosition": {
      "takes": [
        {
          "name": "millisecs",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundDuration": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "GetSoundDuration": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "number"
    },
    "GetSoundFileDuration": {
      "takes": [
        {
          "name": "musicFileName",
          "type": "string"
        }
      ],
      "returns": "number"
    },
    "VolumeGroupSetVolume": {
      "takes": [
        {
          "name": "vgroup",
          "type": "volumegroup"
        },
        {
          "name": "scale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "VolumeGroupReset": {
      "takes": [],
      "returns": "void"
    },
    "GetSoundIsPlaying": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "boolean"
    },
    "GetSoundIsLoading": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "boolean"
    },
    "RegisterStackedSound": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "byPosition",
          "type": "boolean"
        },
        {
          "name": "rectwidth",
          "type": "number"
        },
        {
          "name": "rectheight",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "UnregisterStackedSound": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "byPosition",
          "type": "boolean"
        },
        {
          "name": "rectwidth",
          "type": "number"
        },
        {
          "name": "rectheight",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetSoundFacialAnimationLabel": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "animationLabel",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SetSoundFacialAnimationGroupLabel": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "groupLabel",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SetSoundFacialAnimationSetFilepath": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "animationSetFilepath",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "SetDialogueSpeakerNameKey": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "speakerName",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "GetDialogueSpeakerNameKey": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "string | null"
    },
    "SetDialogueTextKey": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        },
        {
          "name": "dialogueText",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "GetDialogueTextKey": {
      "takes": [
        {
          "name": "soundHandle",
          "type": "sound"
        }
      ],
      "returns": "string | null"
    },
    "AddWeatherEffect": {
      "takes": [
        {
          "name": "where",
          "type": "rect"
        },
        {
          "name": "effectID",
          "type": "number"
        }
      ],
      "returns": "weathereffect | null"
    },
    "RemoveWeatherEffect": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "weathereffect"
        }
      ],
      "returns": "void"
    },
    "EnableWeatherEffect": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "weathereffect"
        },
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "TerrainDeformCrater": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "depth",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "permanent",
          "type": "boolean"
        }
      ],
      "returns": "terraindeformation | null"
    },
    "TerrainDeformRipple": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "depth",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "count",
          "type": "number"
        },
        {
          "name": "spaceWaves",
          "type": "number"
        },
        {
          "name": "timeWaves",
          "type": "number"
        },
        {
          "name": "radiusStartPct",
          "type": "number"
        },
        {
          "name": "limitNeg",
          "type": "boolean"
        }
      ],
      "returns": "terraindeformation | null"
    },
    "TerrainDeformWave": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "dirX",
          "type": "number"
        },
        {
          "name": "dirY",
          "type": "number"
        },
        {
          "name": "distance",
          "type": "number"
        },
        {
          "name": "speed",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "depth",
          "type": "number"
        },
        {
          "name": "trailTime",
          "type": "number"
        },
        {
          "name": "count",
          "type": "number"
        }
      ],
      "returns": "terraindeformation | null"
    },
    "TerrainDeformRandom": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "minDelta",
          "type": "number"
        },
        {
          "name": "maxDelta",
          "type": "number"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "updateInterval",
          "type": "number"
        }
      ],
      "returns": "terraindeformation | null"
    },
    "TerrainDeformStop": {
      "takes": [
        {
          "name": "deformation",
          "type": "terraindeformation"
        },
        {
          "name": "duration",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "TerrainDeformStopAll": {
      "takes": [],
      "returns": "void"
    },
    "AddSpecialEffect": {
      "takes": [
        {
          "name": "modelName",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpecialEffectLoc": {
      "takes": [
        {
          "name": "modelName",
          "type": "string"
        },
        {
          "name": "where",
          "type": "location"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpecialEffectTarget": {
      "takes": [
        {
          "name": "modelName",
          "type": "string"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        },
        {
          "name": "attachPointName",
          "type": "string"
        }
      ],
      "returns": "effect | null"
    },
    "DestroyEffect": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "void"
    },
    "AddSpellEffect": {
      "takes": [
        {
          "name": "abilityString",
          "type": "string"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpellEffectLoc": {
      "takes": [
        {
          "name": "abilityString",
          "type": "string"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "where",
          "type": "location"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpellEffectById": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpellEffectByIdLoc": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "where",
          "type": "location"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpellEffectTarget": {
      "takes": [
        {
          "name": "modelName",
          "type": "string"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        },
        {
          "name": "attachPoint",
          "type": "string"
        }
      ],
      "returns": "effect | null"
    },
    "AddSpellEffectTargetById": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "targetWidget",
          "type": "widget"
        },
        {
          "name": "attachPoint",
          "type": "string"
        }
      ],
      "returns": "effect | null"
    },
    "AddLightning": {
      "takes": [
        {
          "name": "codeName",
          "type": "string"
        },
        {
          "name": "checkVisibility",
          "type": "boolean"
        },
        {
          "name": "x1",
          "type": "number"
        },
        {
          "name": "y1",
          "type": "number"
        },
        {
          "name": "x2",
          "type": "number"
        },
        {
          "name": "y2",
          "type": "number"
        }
      ],
      "returns": "lightning | null"
    },
    "AddLightningEx": {
      "takes": [
        {
          "name": "codeName",
          "type": "string"
        },
        {
          "name": "checkVisibility",
          "type": "boolean"
        },
        {
          "name": "x1",
          "type": "number"
        },
        {
          "name": "y1",
          "type": "number"
        },
        {
          "name": "z1",
          "type": "number"
        },
        {
          "name": "x2",
          "type": "number"
        },
        {
          "name": "y2",
          "type": "number"
        },
        {
          "name": "z2",
          "type": "number"
        }
      ],
      "returns": "lightning | null"
    },
    "DestroyLightning": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        }
      ],
      "returns": "boolean"
    },
    "MoveLightning": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        },
        {
          "name": "checkVisibility",
          "type": "boolean"
        },
        {
          "name": "x1",
          "type": "number"
        },
        {
          "name": "y1",
          "type": "number"
        },
        {
          "name": "x2",
          "type": "number"
        },
        {
          "name": "y2",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "MoveLightningEx": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        },
        {
          "name": "checkVisibility",
          "type": "boolean"
        },
        {
          "name": "x1",
          "type": "number"
        },
        {
          "name": "y1",
          "type": "number"
        },
        {
          "name": "z1",
          "type": "number"
        },
        {
          "name": "x2",
          "type": "number"
        },
        {
          "name": "y2",
          "type": "number"
        },
        {
          "name": "z2",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "GetLightningColorA": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        }
      ],
      "returns": "number"
    },
    "GetLightningColorR": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        }
      ],
      "returns": "number"
    },
    "GetLightningColorG": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        }
      ],
      "returns": "number"
    },
    "GetLightningColorB": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        }
      ],
      "returns": "number"
    },
    "SetLightningColor": {
      "takes": [
        {
          "name": "whichBolt",
          "type": "lightning"
        },
        {
          "name": "r",
          "type": "number"
        },
        {
          "name": "g",
          "type": "number"
        },
        {
          "name": "b",
          "type": "number"
        },
        {
          "name": "a",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "GetAbilityEffect": {
      "takes": [
        {
          "name": "abilityString",
          "type": "string"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "GetAbilityEffectById": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        },
        {
          "name": "t",
          "type": "effecttype"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "GetAbilitySound": {
      "takes": [
        {
          "name": "abilityString",
          "type": "string"
        },
        {
          "name": "t",
          "type": "soundtype"
        }
      ],
      "returns": "string | null"
    },
    "GetAbilitySoundById": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        },
        {
          "name": "t",
          "type": "soundtype"
        }
      ],
      "returns": "string | null"
    },
    "GetTerrainCliffLevel": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "SetWaterBaseColor": {
      "takes": [
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetWaterDeforms": {
      "takes": [
        {
          "name": "val",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetTerrainType": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "GetTerrainVariance": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "SetTerrainType": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "terrainType",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        },
        {
          "name": "area",
          "type": "number"
        },
        {
          "name": "shape",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "IsTerrainPathable": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "t",
          "type": "pathingtype"
        }
      ],
      "returns": "boolean"
    },
    "SetTerrainPathable": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "t",
          "type": "pathingtype"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CreateImage": {
      "takes": [
        {
          "name": "file",
          "type": "string"
        },
        {
          "name": "sizeX",
          "type": "number"
        },
        {
          "name": "sizeY",
          "type": "number"
        },
        {
          "name": "sizeZ",
          "type": "number"
        },
        {
          "name": "posX",
          "type": "number"
        },
        {
          "name": "posY",
          "type": "number"
        },
        {
          "name": "posZ",
          "type": "number"
        },
        {
          "name": "originX",
          "type": "number"
        },
        {
          "name": "originY",
          "type": "number"
        },
        {
          "name": "originZ",
          "type": "number"
        },
        {
          "name": "imageType",
          "type": "number"
        }
      ],
      "returns": "image | null"
    },
    "DestroyImage": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        }
      ],
      "returns": "void"
    },
    "ShowImage": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetImageConstantHeight": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "flag",
          "type": "boolean"
        },
        {
          "name": "height",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetImagePosition": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetImageColor": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "SetImageRender": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetImageRenderAlways": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetImageAboveWater": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "flag",
          "type": "boolean"
        },
        {
          "name": "useWaterAlpha",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetImageType": {
      "takes": [
        {
          "name": "whichImage",
          "type": "image"
        },
        {
          "name": "imageType",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CreateUbersplat": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        },
        {
          "name": "alpha",
          "type": "number"
        },
        {
          "name": "forcePaused",
          "type": "boolean"
        },
        {
          "name": "noBirthTime",
          "type": "boolean"
        }
      ],
      "returns": "ubersplat | null"
    },
    "DestroyUbersplat": {
      "takes": [
        {
          "name": "whichSplat",
          "type": "ubersplat"
        }
      ],
      "returns": "void"
    },
    "ResetUbersplat": {
      "takes": [
        {
          "name": "whichSplat",
          "type": "ubersplat"
        }
      ],
      "returns": "void"
    },
    "FinishUbersplat": {
      "takes": [
        {
          "name": "whichSplat",
          "type": "ubersplat"
        }
      ],
      "returns": "void"
    },
    "ShowUbersplat": {
      "takes": [
        {
          "name": "whichSplat",
          "type": "ubersplat"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUbersplatRender": {
      "takes": [
        {
          "name": "whichSplat",
          "type": "ubersplat"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetUbersplatRenderAlways": {
      "takes": [
        {
          "name": "whichSplat",
          "type": "ubersplat"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetBlight": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "addBlight",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetBlightRect": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "r",
          "type": "rect"
        },
        {
          "name": "addBlight",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetBlightPoint": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "addBlight",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetBlightLoc": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "whichLocation",
          "type": "location"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "addBlight",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "CreateBlightedGoldmine": {
      "takes": [
        {
          "name": "id",
          "type": "player"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "IsPointBlighted": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "SetDoodadAnimation": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "doodadID",
          "type": "number"
        },
        {
          "name": "nearestOnly",
          "type": "boolean"
        },
        {
          "name": "animName",
          "type": "string"
        },
        {
          "name": "animRandom",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "SetDoodadAnimationRect": {
      "takes": [
        {
          "name": "r",
          "type": "rect"
        },
        {
          "name": "doodadID",
          "type": "number"
        },
        {
          "name": "animName",
          "type": "string"
        },
        {
          "name": "animRandom",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "StartMeleeAI": {
      "takes": [
        {
          "name": "num",
          "type": "player"
        },
        {
          "name": "script",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "StartCampaignAI": {
      "takes": [
        {
          "name": "num",
          "type": "player"
        },
        {
          "name": "script",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "CommandAI": {
      "takes": [
        {
          "name": "num",
          "type": "player"
        },
        {
          "name": "command",
          "type": "number"
        },
        {
          "name": "data",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PauseCompAI": {
      "takes": [
        {
          "name": "p",
          "type": "player"
        },
        {
          "name": "pause",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "GetAIDifficulty": {
      "takes": [
        {
          "name": "num",
          "type": "player"
        }
      ],
      "returns": "aidifficulty | null"
    },
    "RemoveGuardPosition": {
      "takes": [
        {
          "name": "hUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "RecycleGuardPosition": {
      "takes": [
        {
          "name": "hUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "RemoveAllGuardPositions": {
      "takes": [
        {
          "name": "num",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "Cheat": {
      "takes": [
        {
          "name": "cheatStr",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "IsNoVictoryCheat": {
      "takes": [],
      "returns": "boolean"
    },
    "IsNoDefeatCheat": {
      "takes": [],
      "returns": "boolean"
    },
    "Preload": {
      "takes": [
        {
          "name": "filename",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "PreloadEnd": {
      "takes": [
        {
          "name": "timeout",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "PreloadStart": {
      "takes": [],
      "returns": "void"
    },
    "PreloadRefresh": {
      "takes": [],
      "returns": "void"
    },
    "PreloadEndEx": {
      "takes": [],
      "returns": "void"
    },
    "PreloadGenClear": {
      "takes": [],
      "returns": "void"
    },
    "PreloadGenStart": {
      "takes": [],
      "returns": "void"
    },
    "PreloadGenEnd": {
      "takes": [
        {
          "name": "filename",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "Preloader": {
      "takes": [
        {
          "name": "filename",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzHideCinematicPanels": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "AutomationSetTestType": {
      "takes": [
        {
          "name": "testType",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "AutomationTestStart": {
      "takes": [
        {
          "name": "testName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "AutomationTestEnd": {
      "takes": [],
      "returns": "void"
    },
    "AutomationTestingFinished": {
      "takes": [],
      "returns": "void"
    },
    "BlzGetTriggerPlayerMouseX": {
      "takes": [],
      "returns": "number"
    },
    "BlzGetTriggerPlayerMouseY": {
      "takes": [],
      "returns": "number"
    },
    "BlzGetTriggerPlayerMousePosition": {
      "takes": [],
      "returns": "location | null"
    },
    "BlzGetTriggerPlayerMouseButton": {
      "takes": [],
      "returns": "mousebuttontype | null"
    },
    "BlzSetAbilityTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "tooltip",
          "type": "string"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityActivatedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "tooltip",
          "type": "string"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityExtendedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "extendedTooltip",
          "type": "string"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityActivatedExtendedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "extendedTooltip",
          "type": "string"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityResearchTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "researchTooltip",
          "type": "string"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityResearchExtendedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "researchExtendedTooltip",
          "type": "string"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetAbilityTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityActivatedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityExtendedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityActivatedExtendedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityResearchTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityResearchExtendedTooltip": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetAbilityIcon": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "iconPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetAbilityIcon": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetAbilityActivatedIcon": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "iconPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetAbilityActivatedIcon": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityPosX": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityPosY": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetAbilityPosX": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityPosY": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetAbilityActivatedPosX": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityActivatedPosY": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetAbilityActivatedPosX": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetAbilityActivatedPosY": {
      "takes": [
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitMaxHP": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitMaxHP": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "hp",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitMaxMana": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitMaxMana": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "mana",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetItemName": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzSetItemDescription": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetItemDescription": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetItemTooltip": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "tooltip",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetItemTooltip": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetItemExtendedTooltip": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "extendedTooltip",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetItemExtendedTooltip": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetItemIconPath": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "iconPath",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetItemIconPath": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetUnitName": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzSetHeroProperName": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "heroProperName",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitBaseDamage": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitBaseDamage": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "baseDamage",
          "type": "number"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitDiceNumber": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitDiceNumber": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "diceNumber",
          "type": "number"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitDiceSides": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitDiceSides": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "diceSides",
          "type": "number"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitAttackCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitAttackCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "cooldown",
          "type": "number"
        },
        {
          "name": "weaponIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectColorByPlayer": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectColor": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "r",
          "type": "number"
        },
        {
          "name": "g",
          "type": "number"
        },
        {
          "name": "b",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectAlpha": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectScale": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "scale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectPosition": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectHeight": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "height",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectTimeScale": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "timeScale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectTime": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "time",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectOrientation": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "yaw",
          "type": "number"
        },
        {
          "name": "pitch",
          "type": "number"
        },
        {
          "name": "roll",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectYaw": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "yaw",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectPitch": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "pitch",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectRoll": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "roll",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectX": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "x",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectY": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectZ": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetSpecialEffectPositionLoc": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "loc",
          "type": "location"
        }
      ],
      "returns": "void"
    },
    "BlzGetLocalSpecialEffectX": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "number"
    },
    "BlzGetLocalSpecialEffectY": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "number"
    },
    "BlzGetLocalSpecialEffectZ": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "number"
    },
    "BlzSpecialEffectClearSubAnimations": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "void"
    },
    "BlzSpecialEffectRemoveSubAnimation": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "whichSubAnim",
          "type": "subanimtype"
        }
      ],
      "returns": "void"
    },
    "BlzSpecialEffectAddSubAnimation": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "whichSubAnim",
          "type": "subanimtype"
        }
      ],
      "returns": "void"
    },
    "BlzPlaySpecialEffect": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "whichAnim",
          "type": "animtype"
        }
      ],
      "returns": "void"
    },
    "BlzPlaySpecialEffectWithTimeScale": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "whichAnim",
          "type": "animtype"
        },
        {
          "name": "timeScale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetAnimName": {
      "takes": [
        {
          "name": "whichAnim",
          "type": "animtype"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetUnitArmor": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitArmor": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "armorAmount",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzUnitHideAbility": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzUnitDisableAbility": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "flag",
          "type": "boolean"
        },
        {
          "name": "hideUI",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzUnitCancelTimedLife": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "BlzIsUnitSelectable": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "BlzIsUnitInvulnerable": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "boolean"
    },
    "BlzUnitInterruptAttack": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitCollisionSize": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityManaCost": {
      "takes": [
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityCooldown": {
      "takes": [
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitAbilityCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "cooldown",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitAbilityCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetUnitAbilityCooldownRemaining": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzEndUnitAbilityCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzStartUnitAbilityCooldown": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilCode",
          "type": "number"
        },
        {
          "name": "cooldown",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitAbilityManaCost": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitAbilityManaCost": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "manaCost",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetLocalUnitZ": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzDecPlayerTechResearched": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "techid",
          "type": "number"
        },
        {
          "name": "levels",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetEventDamage": {
      "takes": [
        {
          "name": "damage",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetEventDamageTarget": {
      "takes": [],
      "returns": "unit | null"
    },
    "BlzGetEventAttackType": {
      "takes": [],
      "returns": "attacktype | null"
    },
    "BlzGetEventDamageType": {
      "takes": [],
      "returns": "damagetype | null"
    },
    "BlzGetEventWeaponType": {
      "takes": [],
      "returns": "weapontype | null"
    },
    "BlzSetEventAttackType": {
      "takes": [
        {
          "name": "attackType",
          "type": "attacktype"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetEventDamageType": {
      "takes": [
        {
          "name": "damageType",
          "type": "damagetype"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetEventWeaponType": {
      "takes": [
        {
          "name": "weaponType",
          "type": "weapontype"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetEventIsAttack": {
      "takes": [],
      "returns": "boolean"
    },
    "RequestExtraIntegerData": {
      "takes": [
        {
          "name": "dataType",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "param1",
          "type": "string"
        },
        {
          "name": "param2",
          "type": "string"
        },
        {
          "name": "param3",
          "type": "boolean"
        },
        {
          "name": "param4",
          "type": "number"
        },
        {
          "name": "param5",
          "type": "number"
        },
        {
          "name": "param6",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "RequestExtraBooleanData": {
      "takes": [
        {
          "name": "dataType",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "param1",
          "type": "string"
        },
        {
          "name": "param2",
          "type": "string"
        },
        {
          "name": "param3",
          "type": "boolean"
        },
        {
          "name": "param4",
          "type": "number"
        },
        {
          "name": "param5",
          "type": "number"
        },
        {
          "name": "param6",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "RequestExtraStringData": {
      "takes": [
        {
          "name": "dataType",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "param1",
          "type": "string"
        },
        {
          "name": "param2",
          "type": "string"
        },
        {
          "name": "param3",
          "type": "boolean"
        },
        {
          "name": "param4",
          "type": "number"
        },
        {
          "name": "param5",
          "type": "number"
        },
        {
          "name": "param6",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "RequestExtraRealData": {
      "takes": [
        {
          "name": "dataType",
          "type": "number"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "param1",
          "type": "string"
        },
        {
          "name": "param2",
          "type": "string"
        },
        {
          "name": "param3",
          "type": "boolean"
        },
        {
          "name": "param4",
          "type": "number"
        },
        {
          "name": "param5",
          "type": "number"
        },
        {
          "name": "param6",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetUnitZ": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzEnableSelections": {
      "takes": [
        {
          "name": "enableSelection",
          "type": "boolean"
        },
        {
          "name": "enableSelectionCircle",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzIsSelectionEnabled": {
      "takes": [],
      "returns": "boolean"
    },
    "BlzIsSelectionCircleEnabled": {
      "takes": [],
      "returns": "boolean"
    },
    "BlzCameraSetupApplyForceDurationSmooth": {
      "takes": [
        {
          "name": "whichSetup",
          "type": "camerasetup"
        },
        {
          "name": "doPan",
          "type": "boolean"
        },
        {
          "name": "forcedDuration",
          "type": "number"
        },
        {
          "name": "easeInDuration",
          "type": "number"
        },
        {
          "name": "easeOutDuration",
          "type": "number"
        },
        {
          "name": "smoothFactor",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzEnableTargetIndicator": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzIsTargetIndicatorEnabled": {
      "takes": [],
      "returns": "boolean"
    },
    "BlzShowTerrain": {
      "takes": [
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzShowSkyBox": {
      "takes": [
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzStartRecording": {
      "takes": [
        {
          "name": "fps",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzEndRecording": {
      "takes": [],
      "returns": "void"
    },
    "BlzShowUnitTeamGlow": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "show",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzGetOriginFrame": {
      "takes": [
        {
          "name": "frameType",
          "type": "originframetype"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzEnableUIAutoPosition": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzHideOriginFrames": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzConvertColor": {
      "takes": [
        {
          "name": "a",
          "type": "number"
        },
        {
          "name": "r",
          "type": "number"
        },
        {
          "name": "g",
          "type": "number"
        },
        {
          "name": "b",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzLoadTOCFile": {
      "takes": [
        {
          "name": "TOCFile",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzCreateFrame": {
      "takes": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "owner",
          "type": "framehandle"
        },
        {
          "name": "priority",
          "type": "number"
        },
        {
          "name": "createContext",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzCreateSimpleFrame": {
      "takes": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "owner",
          "type": "framehandle"
        },
        {
          "name": "createContext",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzCreateFrameByType": {
      "takes": [
        {
          "name": "typeName",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "owner",
          "type": "framehandle"
        },
        {
          "name": "inherits",
          "type": "string"
        },
        {
          "name": "createContext",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzDestroyFrame": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetPoint": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "point",
          "type": "framepointtype"
        },
        {
          "name": "relative",
          "type": "framehandle"
        },
        {
          "name": "relativePoint",
          "type": "framepointtype"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetAbsPoint": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "point",
          "type": "framepointtype"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameClearAllPoints": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetAllPoints": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "relative",
          "type": "framehandle"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetVisible": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "visible",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzFrameIsVisible": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetFrameByName": {
      "takes": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "createContext",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzFrameGetName": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "string | null"
    },
    "BlzFrameClick": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetText": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "text",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetText": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "string | null"
    },
    "BlzFrameAddText": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "text",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetTextSizeLimit": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "size",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetTextSizeLimit": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "number"
    },
    "BlzFrameSetTextColor": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "color",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetFocus": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetModel": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "modelFile",
          "type": "string"
        },
        {
          "name": "cameraIndex",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetEnable": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "enabled",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetEnable": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "boolean"
    },
    "BlzFrameSetAlpha": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "alpha",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetAlpha": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "number"
    },
    "BlzFrameSetSpriteAnimate": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "primaryProp",
          "type": "number"
        },
        {
          "name": "flags",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetTexture": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "texFile",
          "type": "string"
        },
        {
          "name": "flag",
          "type": "number"
        },
        {
          "name": "blend",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetScale": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "scale",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetTooltip": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "tooltip",
          "type": "framehandle"
        }
      ],
      "returns": "void"
    },
    "BlzFrameCageMouse": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetValue": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetValue": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "number"
    },
    "BlzFrameSetMinMaxValue": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "minValue",
          "type": "number"
        },
        {
          "name": "maxValue",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetStepSize": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "stepSize",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetSize": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "width",
          "type": "number"
        },
        {
          "name": "height",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetVertexColor": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "color",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetLevel": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetParent": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "parent",
          "type": "framehandle"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetParent": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzFrameGetHeight": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "number"
    },
    "BlzFrameGetWidth": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "number"
    },
    "BlzFrameSetFont": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "fileName",
          "type": "string"
        },
        {
          "name": "height",
          "type": "number"
        },
        {
          "name": "flags",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzFrameSetTextAlignment": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "vert",
          "type": "textaligntype"
        },
        {
          "name": "horz",
          "type": "textaligntype"
        }
      ],
      "returns": "void"
    },
    "BlzFrameGetChildrenCount": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        }
      ],
      "returns": "number"
    },
    "BlzFrameGetChild": {
      "takes": [
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "framehandle | null"
    },
    "BlzTriggerRegisterFrameEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "frame",
          "type": "framehandle"
        },
        {
          "name": "eventId",
          "type": "frameeventtype"
        }
      ],
      "returns": "event | null"
    },
    "BlzGetTriggerFrame": {
      "takes": [],
      "returns": "framehandle | null"
    },
    "BlzGetTriggerFrameEvent": {
      "takes": [],
      "returns": "frameeventtype | null"
    },
    "BlzGetTriggerFrameValue": {
      "takes": [],
      "returns": "number"
    },
    "BlzGetTriggerFrameText": {
      "takes": [],
      "returns": "string | null"
    },
    "BlzTriggerRegisterPlayerSyncEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "prefix",
          "type": "string"
        },
        {
          "name": "fromServer",
          "type": "boolean"
        }
      ],
      "returns": "event | null"
    },
    "BlzSendSyncData": {
      "takes": [
        {
          "name": "prefix",
          "type": "string"
        },
        {
          "name": "data",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetTriggerSyncPrefix": {
      "takes": [],
      "returns": "string | null"
    },
    "BlzGetTriggerSyncData": {
      "takes": [],
      "returns": "string | null"
    },
    "BlzTriggerRegisterPlayerKeyEvent": {
      "takes": [
        {
          "name": "whichTrigger",
          "type": "trigger"
        },
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "key",
          "type": "oskeytype"
        },
        {
          "name": "metaKey",
          "type": "number"
        },
        {
          "name": "keyDown",
          "type": "boolean"
        }
      ],
      "returns": "event | null"
    },
    "BlzGetTriggerPlayerKey": {
      "takes": [],
      "returns": "oskeytype | null"
    },
    "BlzGetTriggerPlayerMetaKey": {
      "takes": [],
      "returns": "number"
    },
    "BlzGetTriggerPlayerIsKeyDown": {
      "takes": [],
      "returns": "boolean"
    },
    "BlzEnableCursor": {
      "takes": [
        {
          "name": "enable",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzSetMousePos": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzGetLocalClientWidth": {
      "takes": [],
      "returns": "number"
    },
    "BlzGetLocalClientHeight": {
      "takes": [],
      "returns": "number"
    },
    "BlzIsLocalClientActive": {
      "takes": [],
      "returns": "boolean"
    },
    "BlzGetMouseFocusUnit": {
      "takes": [],
      "returns": "unit | null"
    },
    "BlzChangeMinimapTerrainTex": {
      "takes": [
        {
          "name": "texFile",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetLocale": {
      "takes": [],
      "returns": "string | null"
    },
    "BlzGetSpecialEffectScale": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "number"
    },
    "BlzSetSpecialEffectMatrixScale": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzResetSpecialEffectMatrix": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "effect"
        }
      ],
      "returns": "void"
    },
    "BlzGetUnitAbility": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "abilId",
          "type": "number"
        }
      ],
      "returns": "ability | null"
    },
    "BlzGetUnitAbilityByIndex": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "ability | null"
    },
    "BlzDisplayChatMessage": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        },
        {
          "name": "recipient",
          "type": "number"
        },
        {
          "name": "message",
          "type": "string"
        }
      ],
      "returns": "void"
    },
    "BlzPauseUnitEx": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": "void"
    },
    "BlzSetUnitFacingEx": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "facingAngle",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "CreateCommandButtonEffect": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        },
        {
          "name": "order",
          "type": "string"
        }
      ],
      "returns": "commandbuttoneffect | null"
    },
    "CreateUpgradeCommandButtonEffect": {
      "takes": [
        {
          "name": "whichUprgade",
          "type": "number"
        }
      ],
      "returns": "commandbuttoneffect | null"
    },
    "CreateLearnCommandButtonEffect": {
      "takes": [
        {
          "name": "abilityId",
          "type": "number"
        }
      ],
      "returns": "commandbuttoneffect | null"
    },
    "DestroyCommandButtonEffect": {
      "takes": [
        {
          "name": "whichEffect",
          "type": "commandbuttoneffect"
        }
      ],
      "returns": "void"
    },
    "BlzBitOr": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzBitAnd": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzBitXor": {
      "takes": [
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityBooleanField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanfield"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetAbilityIntegerField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerfield"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityRealField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityrealfield"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityStringField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringfield"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityBooleanLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanlevelfield"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetAbilityIntegerLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerlevelfield"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityRealLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityreallevelfield"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityStringLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringlevelfield"
        },
        {
          "name": "level",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzGetAbilityBooleanLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetAbilityIntegerLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityRealLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityreallevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetAbilityStringLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetAbilityBooleanField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanfield"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityIntegerField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerfield"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityRealField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityrealfield"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityStringField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringfield"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityBooleanLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanlevelfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityIntegerLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerlevelfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityRealLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityreallevelfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityStringLevelField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringlevelfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityBooleanLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityIntegerLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityRealLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityreallevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetAbilityStringLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzAddAbilityBooleanLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzAddAbilityIntegerLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzAddAbilityRealLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityreallevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzAddAbilityStringLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzRemoveAbilityBooleanLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitybooleanlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzRemoveAbilityIntegerLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityintegerlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzRemoveAbilityRealLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilityreallevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzRemoveAbilityStringLevelArrayField": {
      "takes": [
        {
          "name": "whichAbility",
          "type": "ability"
        },
        {
          "name": "whichField",
          "type": "abilitystringlevelarrayfield"
        },
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetItemAbilityByIndex": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "ability | null"
    },
    "BlzGetItemAbility": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "ability | null"
    },
    "BlzItemAddAbility": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetItemBooleanField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itembooleanfield"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetItemIntegerField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itemintegerfield"
        }
      ],
      "returns": "number"
    },
    "BlzGetItemRealField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itemrealfield"
        }
      ],
      "returns": "number"
    },
    "BlzGetItemStringField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itemstringfield"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetItemBooleanField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itembooleanfield"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetItemIntegerField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itemintegerfield"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetItemRealField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itemrealfield"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetItemStringField": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "whichField",
          "type": "itemstringfield"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzItemRemoveAbility": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "abilCode",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetUnitBooleanField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitbooleanfield"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetUnitIntegerField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitintegerfield"
        }
      ],
      "returns": "number"
    },
    "BlzGetUnitRealField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitrealfield"
        }
      ],
      "returns": "number"
    },
    "BlzGetUnitStringField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitstringfield"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetUnitBooleanField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitbooleanfield"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetUnitIntegerField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitintegerfield"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetUnitRealField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitrealfield"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetUnitStringField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitstringfield"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetUnitWeaponBooleanField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponbooleanfield"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetUnitWeaponIntegerField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponintegerfield"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetUnitWeaponRealField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponrealfield"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "number"
    },
    "BlzGetUnitWeaponStringField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponstringfield"
        },
        {
          "name": "index",
          "type": "number"
        }
      ],
      "returns": "string | null"
    },
    "BlzSetUnitWeaponBooleanField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponbooleanfield"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "boolean"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetUnitWeaponIntegerField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponintegerfield"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetUnitWeaponRealField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponrealfield"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "number"
        }
      ],
      "returns": "boolean"
    },
    "BlzSetUnitWeaponStringField": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "whichField",
          "type": "unitweaponstringfield"
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "returns": "boolean"
    },
    "BlzGetUnitSkin": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        }
      ],
      "returns": "number"
    },
    "BlzGetItemSkin": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        }
      ],
      "returns": "number"
    },
    "BlzSetUnitSkin": {
      "takes": [
        {
          "name": "whichUnit",
          "type": "unit"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzSetItemSkin": {
      "takes": [
        {
          "name": "whichItem",
          "type": "item"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "void"
    },
    "BlzCreateItemWithSkin": {
      "takes": [
        {
          "name": "itemid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "item | null"
    },
    "BlzCreateUnitWithSkin": {
      "takes": [
        {
          "name": "id",
          "type": "player"
        },
        {
          "name": "unitid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "unit | null"
    },
    "BlzCreateDestructableWithSkin": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "BlzCreateDestructableZWithSkin": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "BlzCreateDeadDestructableWithSkin": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "BlzCreateDeadDestructableZWithSkin": {
      "takes": [
        {
          "name": "objectid",
          "type": "number"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        },
        {
          "name": "z",
          "type": "number"
        },
        {
          "name": "face",
          "type": "number"
        },
        {
          "name": "scale",
          "type": "number"
        },
        {
          "name": "variation",
          "type": "number"
        },
        {
          "name": "skinId",
          "type": "number"
        }
      ],
      "returns": "destructable | null"
    },
    "BlzGetPlayerTownHallCount": {
      "takes": [
        {
          "name": "whichPlayer",
          "type": "player"
        }
      ],
      "returns": "number"
    }
  },
  "functions": {}
}